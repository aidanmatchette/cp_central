[
  {
    "model": "auth.group",
    "pk": 1,
    "fields": {
      "name": "Quebec",
      "permissions": []
    }
  },
  {
    "model": "auth.group",
    "pk": 2,
    "fields": {
      "name": "Papa",
      "permissions": []
    }
  },
  {
    "model": "auth.group",
    "pk": 3,
    "fields": {
      "name": "November",
      "permissions": []
    }
  },
  {
    "model": "sessions.session",
    "pk": "2q9f06jykugnpvc8qu04qgv14w09q9gv",
    "fields": {
      "session_data": ".eJxVjMsOwiAQRf-FtSE8hocu3fcbCDCDVA0kpV0Z_12bdKHbe865LxbittawDVrCjOzCFLDT75hiflDbCd5ju3Wee1uXOfFd4QcdfOpIz-vh_h3UOOq31tG6IpOynpC0soQgAEtBkNlkp4QyuiQhjDWlJHUGEF44GT0BkUbL3h8NAjf_:1nmxuD:hzl0CHRwRkYQIQcPlpoRex_qG8MyQnvYvwswrKnI4g0",
      "expire_date": "2022-05-20T13:22:01.706Z"
    }
  },
  {
    "model": "app.user",
    "pk": 2,
    "fields": {
      "password": "pbkdf2_sha256$320000$7eNwVKJOZvPtl1TRcZE6Zl$3EhHwvVamwzmCO4r801NzoG6qHjbf8DPRICjNBc48Ko=",
      "last_login": null,
      "is_superuser": true,
      "username": "ankur@codeplatoon.org",
      "first_name": "Ankur",
      "last_name": "Shah",
      "email": "ankur@codeplatoon.org",
      "is_staff": true,
      "is_active": true,
      "date_joined": "2022-05-01T13:29:44Z",
      "avatar": "Ankur.jfif",
      "metadata": {
        "mentor": "",
        "donut_count": "infinity",
        "resume_coach": "",
        "group_team": "",
        "interviewer": "",
        "interview_date": ""
      },
      "default_group": 1,
      "markdown": "# Donuts are life 4 ever\r\n\r\nI'm a software developer with a mantra of \"How can we do better?\". I don't settle for acceptable, but rather always am on the look out for design improvements... whether it be implementing optimizations, restructuring code, or even designing an elegant user interface. Code design and UI/UX are in my heart and soul, and I seek to use my talents to develop mind-tingling and eye-catching applications!\r\n\r\nMy areas of expertise lie with object-oriented programming (C++), web development (Python, JavaScript), and front-end design (ReactJS).",
      "timezone": "CST",
      "groups": [
        1,
        3
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 3,
    "fields": {
      "password": "pbkdf2_sha256$320000$Im8rnH8wyp4UVRspcBBMNc$kYuEtnCs1nOKQsvWdbHZ78Knznpuj3wmAWtt6I2TXqw=",
      "last_login": null,
      "is_superuser": true,
      "username": "raphael@codeplatoon.org",
      "first_name": "Raphael",
      "last_name": "Serota",
      "email": "raphael@codeplatoon.org",
      "is_staff": true,
      "is_active": true,
      "date_joined": "2022-05-01T13:30:00Z",
      "avatar": "Raphael.jfif",
      "metadata": {
        "mentor": "",
        "resume_coach": "",
        "group_team": "",
        "interviewer": "",
        "interview_date": ""
      },
      "default_group": 2,
      "markdown": "# Bagels are better",
      "timezone": "CST",
      "groups": [
        1,
        2
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 4,
    "fields": {
      "password": "pbkdf2_sha256$320000$rxlYMI7IROSM7jgrrYNYdE$pfS9QxgHjEfG9bGW/zqDWD+GNXDF+tLfno37l5XGats=",
      "last_login": null,
      "is_superuser": true,
      "username": "jon@codeplatoon.org",
      "first_name": "Jonathan",
      "last_name": "Young",
      "email": "jon@codeplatoon.org",
      "is_staff": true,
      "is_active": true,
      "date_joined": "2022-05-01T13:30:30Z",
      "avatar": "default.png",
      "metadata": null,
      "default_group": null,
      "markdown": "",
      "timezone": "CST",
      "groups": [],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 5,
    "fields": {
      "password": "pbkdf2_sha256$320000$lS4ozFtv1Gdj1qqOwPOc5x$j/C10gCOX90VynQRpQcVaXI2/neHQ0jnf29KPb/zbVY=",
      "last_login": null,
      "is_superuser": true,
      "username": "rod@codeplatoon.org",
      "first_name": "Rodrigo",
      "last_name": "Levy",
      "email": "rod@codeplatoon.org",
      "is_staff": true,
      "is_active": true,
      "date_joined": "2022-05-01T13:30:40Z",
      "avatar": "default.png",
      "metadata": null,
      "default_group": null,
      "markdown": "",
      "timezone": "CST",
      "groups": [],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 6,
    "fields": {
      "password": "pbkdf2_sha256$320000$quqZKdyq2n7ks4HJXSIonc$tdYqdlzhkiaeTQATuzsmwkeB+jIb4RpKsHPyY63s9EU=",
      "last_login": null,
      "is_superuser": false,
      "username": "quebec_student_1@email.com",
      "first_name": "Grace",
      "last_name": "Hopper",
      "email": "quebec_student_1@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-01T14:04:11Z",
      "avatar": "default.png",
      "metadata": {
        "mentor": "Bill Gates",
        "resume_coach": "George Carlin",
        "group_team": "Bagel crews",
        "interviewer": "",
        "interview_date": ""
      },
      "default_group": 1,
      "markdown": "I was a US Navy rear admiral and a computer scientist. I was one of the first programmers of the Harvard Mark I computer.\r\n\r\nI invented the first compiler for a computer programming language. I popularized the methodology of machine-independent programming language, which led to the development of COBOL. She is also credited for popularizing the term debugging for fixing machine glitches.\r\n\r\nI was the first woman in the world who got her name in Distinguished Fellow of the British Computer Society, Honorary Doctor of Science from Marquette University, and National Medal of Technology (1991).",
      "timezone": "CST",
      "groups": [
        1
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 7,
    "fields": {
      "password": "pbkdf2_sha256$320000$2ZPGFr5ZDcQH39qXBuxymh$pY8afbT8hesLJVc3K9r5Db306xp5Szaixz0OFwVkoEo=",
      "last_login": null,
      "is_superuser": false,
      "username": "quebec_student_2@email.com",
      "first_name": "John",
      "last_name": "Kemeny",
      "email": "quebec_student_2@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-01T14:04:25Z",
      "avatar": "default.png",
      "metadata": {
        "mentor": "Bill Gates",
        "resume_coach": "George Carlin",
        "group_team": "Bagel crews",
        "interviewer": "",
        "interview_date": ""
      },
      "default_group": 1,
      "markdown": "I am a computer scientist, mathematician, and educator best known for developing BASIC programming language with Thomas Kurtz.\r\n\r\nI pioneered the use of computers for ordinary people. He invented BASIC (BeginnerΓÇÖs All-purpose Symbolic Instruction Code) programming language in 1964, after experiments with the LGP-30. He also developed DTSS (Dartmouth Time-Sharing System), which is one of the worldΓÇÖs first timesharing systems.\r\n\r\nI received the Computer Pioneer Award in 1985.",
      "timezone": "CST",
      "groups": [
        1
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 8,
    "fields": {
      "password": "pbkdf2_sha256$320000$rDFJ0FZ91frpH0MyCXoEzn$o8AVXi9tZ5cdUYewqc41/CIGjnSYImxxN5Lp6pTXLkQ=",
      "last_login": null,
      "is_superuser": false,
      "username": "quebec_student_3@email.com",
      "first_name": "Thomas",
      "last_name": "Kurtz",
      "email": "quebec_student_3@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-01T14:04:48Z",
      "avatar": "breakpoint.png",
      "metadata": {
        "mentor": "Bill Gates",
        "resume_coach": "George Carlin",
        "group_team": "Bagel crews",
        "interviewer": "",
        "interview_date": ""
      },
      "default_group": 1,
      "markdown": "Who is he: Thomas Kurtz is a computer scientist and a retired Dartmouth professor who implemented the concept of Timesharing.\r\n\r\nWhat he has done: He developed the BASIC programming language to allow non-experts users to interact with the computer. He and John Kemeny co-founded the company called True BASIC, Inc to market True BASIC, which is an updated version of the language. This programming language became widespread on microcomputers, which allowed small developers and business owners to develop custom software on computers, all on their own.\r\n\r\n\r\nMajor Achievements: Kurtz was honored with AFIPS Pioneer Award and IEEE Computer Science Pioneer Award.",
      "timezone": "CST",
      "groups": [
        1
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 9,
    "fields": {
      "password": "pbkdf2_sha256$320000$DfToUKAC9NJmkPziAcR4iI$xq11axaIEZCbnbj8b4augoKQyyIzo21edvWk80hRreQ=",
      "last_login": null,
      "is_superuser": false,
      "username": "quebec_student_4@email.com",
      "first_name": "John",
      "last_name": "McCarthy",
      "email": "quebec_student_4@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-01T14:05:14Z",
      "avatar": "default.png",
      "metadata": {
        "mentor": "Bill Gates",
        "resume_coach": "George Carlin",
        "group_team": "Bagel crews",
        "interviewer": "",
        "interview_date": ""
      },
      "default_group": 1,
      "markdown": "Who is he: John McCarthy was a cognitive scientist and computer scientist, who coined the term Artificial Intelligence.\r\n\r\nWhat he has done: John developed the Lisp programming language family, popularized timesharing, and worked on the design of the ALGOL programming language. He invented the Garbage Collection method to solve the problem of Lisp, which later became the programming language of choice for AI applications.\r\n\r\nMajor Achievements: He was honored with the Turing Award, Kyoto Prize, National Medal of Science, Computer Pioneer Award, and IJCAI Award for Research Excellence.",
      "timezone": "CST",
      "groups": [
        1
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 10,
    "fields": {
      "password": "pbkdf2_sha256$320000$xBblTmUuuOwonN0ZHbkApi$hTp9ImamuYnAKSfQk/wSTTnbpGM6uX+l/VN8AxbqlIg=",
      "last_login": null,
      "is_superuser": false,
      "username": "quebec_student_5@email.com",
      "first_name": "Alan",
      "last_name": "Kay",
      "email": "quebec_student_5@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-01T14:05:26Z",
      "avatar": "default.png",
      "metadata": {
        "mentor": "Bill Gates",
        "resume_coach": "George Carlin",
        "group_team": "Bagel crews",
        "interviewer": "",
        "interview_date": ""
      },
      "default_group": 1,
      "markdown": "Who is he: Alan Curtis Kay is a computer scientist who has been elected a Fellow of the National Academy of Engineering, the American Academy of Arts and Sciences and the Royal Society of Arts.\r\n\r\nWhat he has done: Alan is best known for his early pioneering work on object-oriented programming and windowing Graphical User Interface (GUI) design. Brian is also the coiner of phase: The best way to predict the future is to invent it.\r\n\r\nMajor Achievements: Alan received ACM Turing Award for his work on object-oriented programming, UPE Abacus Award, and UdK 01-Award  for pioneering the GUI.",
      "timezone": "CST",
      "groups": [
        1
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 11,
    "fields": {
      "password": "pbkdf2_sha256$320000$wE8cvy4TWouMeWBv4uZksC$FkYfnqVqkKVFsrLspLKt4m91dOzJWhqi2/PJaxPuK3g=",
      "last_login": null,
      "is_superuser": false,
      "username": "quebec_student_6@email.com",
      "first_name": "Niklaus",
      "last_name": "Wirth",
      "email": "quebec_student_6@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-01T14:05:37Z",
      "avatar": "default.png",
      "metadata": {
        "mentor": "Bill Gates",
        "resume_coach": "George Carlin",
        "group_team": "Bagel crews",
        "interviewer": "",
        "interview_date": ""
      },
      "default_group": 1,
      "markdown": "Who is he: Alan Curtis Kay is a computer scientist who has been elected a Fellow of the National Academy of Engineering, the American Academy of Arts and Sciences and the Royal Society of Arts.\r\n\r\nWhat he has done: Alan is best known for his early pioneering work on object-oriented programming and windowing Graphical User Interface (GUI) design. Brian is also the coiner of phase: The best way to predict the future is to invent it.\r\n\r\nMajor Achievements: Alan received ACM Turing Award for his work on object-oriented programming, UPE Abacus Award, and UdK 01-Award  for pioneering the GUI.",
      "timezone": "CST",
      "groups": [
        1
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 12,
    "fields": {
      "password": "pbkdf2_sha256$320000$l9JOzrRBkFPEEchn1UqYzU$KddMnj3mgAye9w5Q/qR9LMji56ifbWpqyU9zhtzOdgM=",
      "last_login": null,
      "is_superuser": false,
      "username": "quebec_ta_1@email.com",
      "first_name": "James",
      "last_name": "Gosling",
      "email": "quebec_ta_1@email.com",
      "is_staff": true,
      "is_active": true,
      "date_joined": "2022-05-01T14:05:56Z",
      "avatar": "default.png",
      "metadata": {
        "mentor": "Bill Gates",
        "resume_coach": "George Carlin",
        "group_team": "Bagel crews",
        "interviewer": "",
        "interview_date": ""
      },
      "default_group": 1,
      "markdown": "Who is he: James Gosling is a Canadian computer scientist, known as the father of the Java programming language.\r\n\r\nWhat he has done: James developed a multi-processor version of Unix, several compilers, and mail systems before joining Sun Microsystems. He invented the Java programming language and implemented JavaΓÇÖs original compiler and virtual machine in 1994. He also made contributions to several other software systems, including Gosling Emacs and NeWS.\r\n\r\nMajor Achievements: Gosling was awarded The Economist Innovation Award,  IEEE John von Neumann Medal, and he was made an Officer of the Order of Canada in 2007.",
      "timezone": "CST",
      "groups": [
        1
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 13,
    "fields": {
      "password": "pbkdf2_sha256$320000$u3ZIfpi18rMgsYQdg2ZEvx$uZuaT8P+EmkhgZPzyhNgkVlVYM8aQJmU4az+SIrKFbU=",
      "last_login": null,
      "is_superuser": false,
      "username": "quebec_ta_2@email.com",
      "first_name": "Guido",
      "last_name": "Van Rossum",
      "email": "quebec_ta_2@email.com",
      "is_staff": true,
      "is_active": true,
      "date_joined": "2022-05-01T14:06:09Z",
      "avatar": "default.png",
      "metadata": {
        "mentor": "Bill Gates",
        "resume_coach": "George Carlin",
        "group_team": "Bagel crews",
        "interviewer": "",
        "interview_date": ""
      },
      "default_group": 1,
      "markdown": "Who is he: Guido van Rossum is a computer programmer, known as the author of the Python programming language.\r\n\r\nWhat he has done: In the early days, he wrote a glob() routine to BSD Unix and worked on ABC programming language. He developed Python while working for Google and continues to oversee the Python development process, making essential decisions where necessary.\r\n\r\nAchievements: Rossum received an NLUUG Award, the 2001 Award for the Advancement of Free Software for his work on Python.",
      "timezone": "CST",
      "groups": [
        1
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 14,
    "fields": {
      "password": "pbkdf2_sha256$320000$CcDNRPJXu2w4tH0tnIYunu$2XOKxMRjg3Hw8Hy74QAkmAm1L2xfdv400vh5ZWE/DgI=",
      "last_login": null,
      "is_superuser": false,
      "username": "papa_student_1@email.com",
      "first_name": "Donald",
      "last_name": "Knuth",
      "email": "papa_student_1@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-01T14:11:04Z",
      "avatar": "default.png",
      "metadata": {
        "mentor": "Bill Gates",
        "resume_coach": "George Carlin",
        "group_team": "Bagel crews",
        "interviewer": "",
        "interview_date": ""
      },
      "default_group": 2,
      "markdown": "Who is he: Donald Knuth is a mathematician, computer scientist, and author of The Art of Computer Programming. He has been called the father of the analysis of algorithms.\r\n\r\n\r\nWhat he has done: Donald Knuth worked on the development of analysis of the computational complexity of algorithms and their formal mathematical techniques. He popularized the term asymptotic notation. He created the TeX computer typesetting system, WEB, and CWEB computer programming systems to encourage literate programming.\r\n\r\nAchievements: Turing Award, Grace Murray Hopper Award, National Medal of Science, Faraday Medal, Kyoto Prize, and John von Neumann Medal.",
      "timezone": "CST",
      "groups": [
        2
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 15,
    "fields": {
      "password": "pbkdf2_sha256$320000$5gcR3c4GcNzi5kKc33xN8j$OwJRniSTkiNZep38HhsrhxEpNZON+mrlWxrsX8K45Mg=",
      "last_login": null,
      "is_superuser": false,
      "username": "papa_student_2@email.com",
      "first_name": "John",
      "last_name": "Carmack",
      "email": "papa_student_2@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-01T14:11:16Z",
      "avatar": "default.png",
      "metadata": {
        "mentor": "Bill Gates",
        "resume_coach": "George Carlin",
        "group_team": "Bagel crews",
        "interviewer": "",
        "interview_date": ""
      },
      "default_group": 2,
      "markdown": "Who is he: John Carmack is a game developer and co-founder and former technical director of Id Software.\r\n\r\n\r\nWhat he has done: He was the lead programmer of the Id video games Doom, Rage, Commander Keen, and their sequels. He is best known for his innovations in 3d graphics, especially for Reverse algorithm for shadow volumes. Carmack popularized the use of several techniques in computer graphics such as adaptive tile refresh, binary space partitioning, raycasting, surface caching, and MegaTexture technology.\r\n\r\nAchievements: He was honored by the National Academy of Television Arts & Sciences (twice), the Technology & Engineering Emmy Awards, and Game Developers Conference Lifetime Achievement award for his pioneering work.",
      "timezone": "CST",
      "groups": [
        2
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 16,
    "fields": {
      "password": "pbkdf2_sha256$320000$oTnhtTG9x85GTr11tP0QGG$9yBBzcSmEep90BPDuz6Xpg0xpFKTxUVYuyHuB48kHBA=",
      "last_login": null,
      "is_superuser": false,
      "username": "papa_ta_1@email.com",
      "first_name": "David",
      "last_name": "Patterson",
      "email": "papa_ta_1@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-01T14:11:33Z",
      "avatar": "default.png",
      "metadata": {
        "mentor": "Bill Gates",
        "resume_coach": "George Carlin",
        "group_team": "Bagel crews",
        "interviewer": "",
        "interview_date": ""
      },
      "default_group": 2,
      "markdown": "Who is he: David Patterson is a computer scientist and professor at the University of California, Berkeley.\r\n\r\n\r\nWhat he has done: Patterson is known for his contribution to the RISC processor (Reduced Instruction Set Computer) design, and his research on RAID (Redundant Arrays of Independent Disks) and NOW (Network of Workstations).\r\n\r\nAchievements: He received the EckertΓÇôMauchly Award, Karl Karlstrom, Outstanding Educator, and ACM Distinguished Service Award.",
      "timezone": "CST",
      "groups": [
        2
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 19,
    "fields": {
      "password": "pbkdf2_sha256$320000$9ZjwohzoWerFUOnl89UJ6c$aWBiNhmltbCczevn1mfh2OqsEd9sNL91Vw8gend5VJU=",
      "last_login": null,
      "is_superuser": false,
      "username": "abc",
      "first_name": "John",
      "last_name": "Doe",
      "email": "abc",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-01T15:32:23.142Z",
      "avatar": "default.png",
      "metadata": {
        "cohort_requested": "1"
      },
      "default_group": null,
      "markdown": "",
      "timezone": "CST",
      "groups": [],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 20,
    "fields": {
      "password": "pbkdf2_sha256$320000$wVbK63Es8jhxMrTOE6UISJ$pxDF7b0UY/s2f+kKfb1xPfw60m2EJxYWd58N4yzuX/Q=",
      "last_login": null,
      "is_superuser": false,
      "username": "iwantin@email.com",
      "first_name": "IWant",
      "last_name": "In",
      "email": "iwantin@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-04T00:03:15.429Z",
      "avatar": "default.png",
      "metadata": {
        "cohort_requested": "3"
      },
      "default_group": null,
      "markdown": "",
      "timezone": "CST",
      "groups": [],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 21,
    "fields": {
      "password": "pbkdf2_sha256$320000$fb8iwkvYbBii2yXqTJOf8R$LGR1241VD/dSFmlp5bIh0FljnPNZQzKhCCrz789Dz30=",
      "last_login": null,
      "is_superuser": false,
      "username": "SuperHacker1337@ddos.me",
      "first_name": "Super",
      "last_name": "Hacker",
      "email": "SuperHacker1337@ddos.me",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-04T00:04:03.168Z",
      "avatar": "default.png",
      "metadata": {
        "cohort_requested": "1"
      },
      "default_group": null,
      "markdown": "",
      "timezone": "CST",
      "groups": [],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 22,
    "fields": {
      "password": "pbkdf2_sha256$320000$678gJ9ObfW1En8CbHzmsiE$4PMCxbhMg2iNMneGS/uU4Qsd/7glTtJ17qjtZBA/kDo=",
      "last_login": null,
      "is_superuser": false,
      "username": "itypefast@saywut.com",
      "first_name": "Twelve",
      "last_name": "Fingers",
      "email": "itypefast@saywut.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-04T00:04:51.645Z",
      "avatar": "default.png",
      "metadata": {
        "cohort_requested": "3"
      },
      "default_group": null,
      "markdown": "",
      "timezone": "CST",
      "groups": [],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 23,
    "fields": {
      "password": "pbkdf2_sha256$320000$G8JjAAJhon7RyTUBVaM5Lb$W8BTbJmILIrXthFfv5i6FqbhnODwSCQoMVC/UfY5AWo=",
      "last_login": null,
      "is_superuser": false,
      "username": "imdabomb@rock.you",
      "first_name": "Big",
      "last_name": "Ego",
      "email": "imdabomb@rock.you",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-04T00:05:30.666Z",
      "avatar": "default.png",
      "metadata": {
        "cohort_requested": "2"
      },
      "default_group": null,
      "markdown": "",
      "timezone": "CST",
      "groups": [],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 24,
    "fields": {
      "password": "pbkdf2_sha256$320000$HVhmzaModF4Oy0pX5WMqYJ$3TiuO69x7oizT/8KRm7OZu8X2nWF3BnQYVH0hc6pXd8=",
      "last_login": "2022-05-06T13:22:01.701Z",
      "is_superuser": true,
      "username": "admin",
      "first_name": "",
      "last_name": "",
      "email": "",
      "is_staff": true,
      "is_active": true,
      "date_joined": "2022-05-06T13:21:58.104Z",
      "avatar": "default.png",
      "metadata": null,
      "default_group": null,
      "markdown": "",
      "timezone": "CST",
      "groups": [],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 25,
    "fields": {
      "password": "pbkdf2_sha256$320000$rK1tuDj4quK6EJJYnsTPCF$yx5vPjAW/tGhyUK4JsOY09uUVWk9m79p6eTHnLIE2OQ=",
      "last_login": null,
      "is_superuser": false,
      "username": "aidan@email.com",
      "first_name": "Aidan",
      "last_name": "Matchette",
      "email": "aidan@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-06T13:27:14Z",
      "avatar": "Aidan.jfif",
      "metadata": {
        "mentor": "",
        "resume_coach": "",
        "group_team": "",
        "interviewer": "",
        "interview_date": ""
      },
      "default_group": 1,
      "markdown": "# Go Devil Dogs OOHRAH\r\n\r\nI am transitioning out of the military after having spent 5 years in the United States Marine Corps as an Aerial Delivery Specialist. Ever since I decided to depart the military, my love for Software Development has taken over my life. I enjoy spending my free time learning new skills, solving problems, and teaching others what I know. I am excited to be a part of a high-functioning team and continue to hone and develop new skills.",
      "timezone": "CST",
      "groups": [
        1
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 26,
    "fields": {
      "password": "pbkdf2_sha256$320000$YwoDKXP1A9mSFpJowEeAZJ$DCG7bnG7motgSQmzOlK0skHpXXXGKpQlynNRu2qKycE=",
      "last_login": null,
      "is_superuser": false,
      "username": "megan@email.com",
      "first_name": "Megan",
      "last_name": "Genualdi",
      "email": "megan@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-06T13:27:32Z",
      "avatar": "Megan.jfif",
      "metadata": {
        "mentor": "",
        "resume_coach": "",
        "group_team": "",
        "interviewer": "",
        "interview_date": ""
      },
      "default_group": 1,
      "markdown": "# Go Navy\r\n\r\nHello, I am a Navy veteran with six years of service as an Electronics Technician. I originally joined the military wanting a job in the IT field but ended up working on the hardware of systems instead of the software. Throughout my time in the Navy, I knew I still wanted to have a career in software development and pursuing this dream has led me to a career that I can truly say I am passionate about. I am driven individual, who is always looking to learn something new and software development offers that. I love problem solving and navigating the challenges presented to me and I am looking forward to taking my career in software to new heights.",
      "timezone": "CST",
      "groups": [],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 27,
    "fields": {
      "password": "pbkdf2_sha256$320000$6pKQE925R8srG1YoM6qolx$CFDrHJch5SegdzO7zbUhDXnSfeEJz5z60fnbXF46ddY=",
      "last_login": null,
      "is_superuser": false,
      "username": "markos@email.com",
      "first_name": "Markos",
      "last_name": "Sankey",
      "email": "markos@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-06T13:27:47Z",
      "avatar": "Markos_I26WRsX.jfif",
      "metadata": {
        "mentor": "me",
        "resume_coach": "3",
        "group_team": "",
        "interviewer": "",
        "interview_date": ""
      },
      "default_group": 1,
      "markdown": "# Go Navy!!\r\n\r\nAfter 5 years of experience in problem solving and process improvement in the Navy, I'm making the career transition to become a Software Developer. I╬ô├ç├ûm currently enrolled in a coding bootcamp, with a concentration in: Javascript, Python, HTML, CSS, Django, React, Postgres, SQL and building RESTful APIs. Looking to develop and improve products with clients and teams alike.",
      "timezone": "CST",
      "groups": [
        1
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 28,
    "fields": {
      "password": "pbkdf2_sha256$320000$XN7obMfLx3j6AxfRI9X5KX$Jew0MRG2KlrK1cw6tPDRiiJItadJteSbfpucZIACh7g=",
      "last_login": null,
      "is_superuser": false,
      "username": "john@email.com",
      "first_name": "John",
      "last_name": "Winko",
      "email": "john@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-06T13:28:16Z",
      "avatar": "me_wekdowh.jfif",
      "metadata": {
        "mentor": "",
        "resume_coach": "",
        "group_team": "",
        "interviewer": "",
        "interview_date": ""
      },
      "default_group": 1,
      "markdown": "## Is he a leader though?\r\n\r\nHello, I am a Navy veteran turning a passion into a career breaking into the software development field. Highly trainable with a B.S. in information technology and graduating from MERN full stack coding bootcamp in May 2022. I have a very diverse background from both the people I have served with to the roles that I have fulfilled the past 20 years. Team player with a penchant for process improvement and hunger for knowledge looking to network with people and companies in the technology sector.",
      "timezone": "CST",
      "groups": [
        1
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.userlink",
    "pk": 1,
    "fields": {
      "user": 2,
      "name": "Linked In",
      "is_public": true,
      "url": "https://www.linkedin.com/in/shah-ankur/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 2,
    "fields": {
      "user": 3,
      "name": "Linked In",
      "is_public": true,
      "url": "https://www.linkedin.com/in/raphael-serota/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 3,
    "fields": {
      "user": 6,
      "name": "Linked In",
      "is_public": true,
      "url": "https://www.linkedin.com/in/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 4,
    "fields": {
      "user": 4,
      "name": "https://www.linkedin.com/",
      "is_public": true,
      "url": "https://www.linkedin.com/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 5,
    "fields": {
      "user": 14,
      "name": "https://www.linkedin.com/",
      "is_public": true,
      "url": "https://www.linkedin.com/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 6,
    "fields": {
      "user": 15,
      "name": "https://www.linkedin.com/",
      "is_public": true,
      "url": "https://www.linkedin.com/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 7,
    "fields": {
      "user": 16,
      "name": "https://www.linkedin.com/",
      "is_public": true,
      "url": "https://www.linkedin.com/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 9,
    "fields": {
      "user": 7,
      "name": "https://www.linkedin.com/",
      "is_public": true,
      "url": "https://www.linkedin.com/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 10,
    "fields": {
      "user": 12,
      "name": "https://www.linkedin.com/",
      "is_public": true,
      "url": "https://www.linkedin.com/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 11,
    "fields": {
      "user": 13,
      "name": "https://www.linkedin.com/",
      "is_public": true,
      "url": "https://www.linkedin.com/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 12,
    "fields": {
      "user": 5,
      "name": "https://www.linkedin.com/",
      "is_public": true,
      "url": "https://www.linkedin.com/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 13,
    "fields": {
      "user": 2,
      "name": "GitHub",
      "is_public": true,
      "url": "https://github.com/ankur-cp",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 14,
    "fields": {
      "user": 4,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 15,
    "fields": {
      "user": 14,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 16,
    "fields": {
      "user": 15,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 17,
    "fields": {
      "user": 16,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 18,
    "fields": {
      "user": 6,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 19,
    "fields": {
      "user": 7,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 20,
    "fields": {
      "user": 7,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 21,
    "fields": {
      "user": 8,
      "name": "https://github.com/d",
      "is_public": false,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 22,
    "fields": {
      "user": 9,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 23,
    "fields": {
      "user": 10,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 24,
    "fields": {
      "user": 11,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 25,
    "fields": {
      "user": 12,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 26,
    "fields": {
      "user": 13,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 27,
    "fields": {
      "user": 3,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 28,
    "fields": {
      "user": 5,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 29,
    "fields": {
      "user": 8,
      "name": "linkedin",
      "is_public": false,
      "url": "http://linkedin.com/myprofile",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 31,
    "fields": {
      "user": 25,
      "name": "Linked In",
      "is_public": false,
      "url": "https://www.linkedin.com/in/aidanmatchette/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 32,
    "fields": {
      "user": 27,
      "name": "My Lidddnked Indsadf",
      "is_public": false,
      "url": "http://learngitbranching.js.org/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 35,
    "fields": {
      "user": 27,
      "name": "asdfsdf8",
      "is_public": false,
      "url": "http://www.pythontutor.com/visualize.html#mode=edit",
      "link_type": 2
    }
  },
  {
    "model": "app.checkin",
    "pk": 19,
    "fields": {
      "date": "2022-05-02",
      "group": 1,
      "user": [
        2,
        6,
        7,
        8,
        9,
        10,
        12,
        13,
        26,
        27,
        28
      ]
    }
  },
  {
    "model": "app.checkin",
    "pk": 20,
    "fields": {
      "date": "2022-05-03",
      "group": 1,
      "user": [
        7,
        8,
        9,
        10,
        11,
        25,
        26,
        28
      ]
    }
  },
  {
    "model": "app.checkin",
    "pk": 21,
    "fields": {
      "date": "2022-05-04",
      "group": 1,
      "user": [
        6,
        7,
        8,
        9,
        10,
        11,
        25,
        26,
        27
      ]
    }
  },
  {
    "model": "app.checkin",
    "pk": 22,
    "fields": {
      "date": "2022-05-05",
      "group": 1,
      "user": [
        2,
        6,
        8,
        9,
        10,
        11,
        25,
        26,
        27
      ]
    }
  },
  {
    "model": "app.checkin",
    "pk": 23,
    "fields": {
      "date": "2022-05-06",
      "group": 1,
      "user": [
        2,
        6,
        7,
        8,
        9,
        11,
        25,
        26,
        27,
        28
      ]
    }
  },
  {
    "model": "app.checkin",
    "pk": 24,
    "fields": {
      "date": "2022-05-07",
      "group": 1,
      "user": [
        2,
        6,
        7,
        8,
        9,
        10,
        11,
        25,
        27
      ]
    }
  },
  {
    "model": "app.checkin",
    "pk": 25,
    "fields": {
      "date": "2022-05-08",
      "group": 1,
      "user": [
        2,
        6,
        7,
        9,
        10,
        26,
        28
      ]
    }
  },
  {
    "model": "app.checkin",
    "pk": 26,
    "fields": {
      "date": "2022-05-09",
      "group": 1,
      "user": [
        2,
        6,
        7,
        8,
        9,
        10,
        11,
        25,
        26,
        27,
        28
      ]
    }
  },
  {
    "model": "app.checkin",
    "pk": 27,
    "fields": {
      "date": "2022-05-10",
      "group": 1,
      "user": [
        2,
        6,
        7,
        8,
        9,
        11,
        25,
        26,
        28
      ]
    }
  },
  {
    "model": "app.checkin",
    "pk": 28,
    "fields": {
      "date": "2022-05-11",
      "group": 1,
      "user": [
        2,
        6,
        8,
        9,
        10,
        25,
        26,
        27,
        28
      ]
    }
  },
  {
    "model": "app.checkin",
    "pk": 29,
    "fields": {
      "date": "2022-05-12",
      "group": 1,
      "user": [
        2,
        6,
        7,
        9,
        10,
        11,
        25,
        26,
        27
      ]
    }
  },
  {
    "model": "app.checkin",
    "pk": 30,
    "fields": {
      "date": "2022-05-13",
      "group": 1,
      "user": [
        2,
        6,
        9,
        11,
        25,
        26,
        27,
        28
      ]
    }
  },
  {
    "model": "app.questionnaire",
    "pk": 11,
    "fields": {
      "originator": 3,
      "name": "Pair Programming Feedback - 2022-05-06",
      "is_viewable": true,
      "type": 1,
      "group": [
        3
      ]
    }
  },
  {
    "model": "app.questionnaire",
    "pk": 12,
    "fields": {
      "originator": 3,
      "name": "Curriculum Feedback - 2022-05-06",
      "is_viewable": true,
      "type": 0,
      "group": [
        3
      ]
    }
  },
  {
    "model": "app.questionnaire",
    "pk": 13,
    "fields": {
      "originator": 3,
      "name": "Apprenticeship Questionnaire",
      "is_viewable": true,
      "type": 0,
      "group": [
        3
      ]
    }
  },
  {
    "model": "app.questionnaire",
    "pk": 14,
    "fields": {
      "originator": 2,
      "name": "A brand new survey",
      "is_viewable": true,
      "type": 0,
      "group": [
        2
      ]
    }
  },
  {
    "model": "app.questionnaire",
    "pk": 15,
    "fields": {
      "originator": 2,
      "name": "Making a new survey",
      "is_viewable": false,
      "type": 0,
      "group": [
        2
      ]
    }
  },
  {
    "model": "app.question",
    "pk": 6,
    "fields": {
      "questionnaire": 12,
      "text": "How confident are you feeling about yesterday's curriculum?",
      "is_required": false,
      "response_type": 2
    }
  },
  {
    "model": "app.question",
    "pk": 7,
    "fields": {
      "questionnaire": 12,
      "text": "How did yesterday's lecture go? Please provide feedback.",
      "is_required": false,
      "response_type": 0
    }
  },
  {
    "model": "app.question",
    "pk": 8,
    "fields": {
      "questionnaire": 12,
      "text": "How are you feeling right now about your progress?",
      "is_required": false,
      "response_type": 2
    }
  },
  {
    "model": "app.question",
    "pk": 9,
    "fields": {
      "questionnaire": 12,
      "text": "How are you feeling overall?",
      "is_required": false,
      "response_type": 2
    }
  },
  {
    "model": "app.question",
    "pk": 10,
    "fields": {
      "questionnaire": 11,
      "text": "Yesterday's pairing partner",
      "is_required": false,
      "response_type": 0
    }
  },
  {
    "model": "app.question",
    "pk": 11,
    "fields": {
      "questionnaire": 11,
      "text": "How did pairing session go?",
      "is_required": false,
      "response_type": 0
    }
  },
  {
    "model": "app.question",
    "pk": 12,
    "fields": {
      "questionnaire": 11,
      "text": "How well did you and your partner communicate",
      "is_required": false,
      "response_type": 0
    }
  },
  {
    "model": "app.question",
    "pk": 13,
    "fields": {
      "questionnaire": 11,
      "text": "Any feedback for your pairing partner? (feedback is anonymous)",
      "is_required": false,
      "response_type": 0
    }
  },
  {
    "model": "app.question",
    "pk": 14,
    "fields": {
      "questionnaire": 13,
      "text": "Which group would you want to participate in?",
      "is_required": false,
      "response_type": 0
    }
  },
  {
    "model": "app.question",
    "pk": 15,
    "fields": {
      "questionnaire": 13,
      "text": "Additional Notes",
      "is_required": false,
      "response_type": 0
    }
  },
  {
    "model": "app.question",
    "pk": 16,
    "fields": {
      "questionnaire": 13,
      "text": "I acknowledge that if I agree to participate in the Apprenticeship Program, I will accept wherever I am placed (if at all), and not look for or accept other roles until placements are made. Sign below",
      "is_required": false,
      "response_type": 0
    }
  },
  {
    "model": "app.question",
    "pk": 17,
    "fields": {
      "questionnaire": 14,
      "text": "This is a question",
      "is_required": false,
      "response_type": 2
    }
  },
  {
    "model": "app.question",
    "pk": 18,
    "fields": {
      "questionnaire": 14,
      "text": "This is another question",
      "is_required": false,
      "response_type": 4
    }
  },
  {
    "model": "app.question",
    "pk": 19,
    "fields": {
      "questionnaire": 15,
      "text": "this is a question",
      "is_required": false,
      "response_type": 2
    }
  },
  {
    "model": "app.questionoption",
    "pk": 26,
    "fields": {
      "question": 6,
      "question_text": "Very Confident",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 27,
    "fields": {
      "question": 6,
      "question_text": "Mostly Confident",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 28,
    "fields": {
      "question": 6,
      "question_text": "Somewhat Confident",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 29,
    "fields": {
      "question": 6,
      "question_text": "Not Very Confident",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 30,
    "fields": {
      "question": 6,
      "question_text": "Not Confident At All",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 31,
    "fields": {
      "question": 8,
      "question_text": "Great",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 32,
    "fields": {
      "question": 8,
      "question_text": "Okay",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 33,
    "fields": {
      "question": 8,
      "question_text": "Meh",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 34,
    "fields": {
      "question": 8,
      "question_text": "Need Help",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 35,
    "fields": {
      "question": 8,
      "question_text": "Not Good",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 36,
    "fields": {
      "question": 9,
      "question_text": "Great",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 37,
    "fields": {
      "question": 9,
      "question_text": "Okay",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 38,
    "fields": {
      "question": 9,
      "question_text": "Meh",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 39,
    "fields": {
      "question": 9,
      "question_text": "Need help",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 40,
    "fields": {
      "question": 9,
      "question_text": "Not good",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 41,
    "fields": {
      "question": 11,
      "question_text": "Fantastic",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 42,
    "fields": {
      "question": 11,
      "question_text": "Well",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 43,
    "fields": {
      "question": 11,
      "question_text": "Okay",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 44,
    "fields": {
      "question": 11,
      "question_text": "Not Great",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 45,
    "fields": {
      "question": 11,
      "question_text": "Not Good At All",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 46,
    "fields": {
      "question": 12,
      "question_text": "Really Well",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 47,
    "fields": {
      "question": 12,
      "question_text": "Good",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 48,
    "fields": {
      "question": 12,
      "question_text": "Okay",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 49,
    "fields": {
      "question": 12,
      "question_text": "Not Bad",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 50,
    "fields": {
      "question": 12,
      "question_text": "Not So Well",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 51,
    "fields": {
      "question": 14,
      "question_text": "Remote",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 52,
    "fields": {
      "question": 14,
      "question_text": "In-Person",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 53,
    "fields": {
      "question": 14,
      "question_text": "No-Preference (whichever is less popular)",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 54,
    "fields": {
      "question": 14,
      "question_text": "Do not wish to participate",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 55,
    "fields": {
      "question": 17,
      "question_text": "Great",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 56,
    "fields": {
      "question": 17,
      "question_text": "foo",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 57,
    "fields": {
      "question": 19,
      "question_text": "asdfas",
      "is_correct": false
    }
  },
  {
    "model": "app.questionoption",
    "pk": 58,
    "fields": {
      "question": 19,
      "question_text": "asdfasasasdf",
      "is_correct": false
    }
  },
  {
    "model": "app.filledquestionnaire",
    "pk": 5,
    "fields": {
      "questionnaire": 12,
      "user": 3,
      "is_complete": false
    }
  },
  {
    "model": "app.filledquestionnaire",
    "pk": 6,
    "fields": {
      "questionnaire": 11,
      "user": 3,
      "is_complete": false
    }
  },
  {
    "model": "app.filledquestionnaire",
    "pk": 7,
    "fields": {
      "questionnaire": 13,
      "user": 3,
      "is_complete": false
    }
  },
  {
    "model": "app.filledquestionnaire",
    "pk": 8,
    "fields": {
      "questionnaire": 11,
      "user": 6,
      "is_complete": false
    }
  },
  {
    "model": "app.filledquestionnaire",
    "pk": 9,
    "fields": {
      "questionnaire": 14,
      "user": 28,
      "is_complete": false
    }
  },
  {
    "model": "app.filledquestionnaire",
    "pk": 10,
    "fields": {
      "questionnaire": 14,
      "user": 6,
      "is_complete": false
    }
  },
  {
    "model": "app.filledquestionnaire",
    "pk": 11,
    "fields": {
      "questionnaire": 11,
      "user": 28,
      "is_complete": false
    }
  },
  {
    "model": "app.questionresponse",
    "pk": 13,
    "fields": {
      "filled_questionnaire": 8,
      "question": 10,
      "question_option": null,
      "response_text": "Someone"
    }
  },
  {
    "model": "app.questionresponse",
    "pk": 14,
    "fields": {
      "filled_questionnaire": 8,
      "question": 11,
      "question_option": null,
      "response_text": "went well"
    }
  },
  {
    "model": "app.questionresponse",
    "pk": 15,
    "fields": {
      "filled_questionnaire": 8,
      "question": 12,
      "question_option": null,
      "response_text": ""
    }
  },
  {
    "model": "app.questionresponse",
    "pk": 16,
    "fields": {
      "filled_questionnaire": 9,
      "question": 17,
      "question_option": null,
      "response_text": "my answer"
    }
  },
  {
    "model": "app.questionresponse",
    "pk": 17,
    "fields": {
      "filled_questionnaire": 9,
      "question": 18,
      "question_option": null,
      "response_text": "my other answer"
    }
  },
  {
    "model": "app.questionresponse",
    "pk": 18,
    "fields": {
      "filled_questionnaire": 10,
      "question": 17,
      "question_option": null,
      "response_text": "asdfasdf"
    }
  },
  {
    "model": "app.questionresponse",
    "pk": 19,
    "fields": {
      "filled_questionnaire": 10,
      "question": 18,
      "question_option": null,
      "response_text": "asdfsdf"
    }
  },
  {
    "model": "app.topic",
    "pk": 1,
    "fields": {
      "group": 1,
      "title": "Javascript",
      "description": "",
      "sub_topics": [
        11
      ]
    }
  },
  {
    "model": "app.topic",
    "pk": 2,
    "fields": {
      "group": 1,
      "title": "CLI (Command Line Interface)",
      "description": "",
      "sub_topics": [
        3,
        4
      ]
    }
  },
  {
    "model": "app.topic",
    "pk": 3,
    "fields": {
      "group": 1,
      "title": "GIT",
      "description": "",
      "sub_topics": [
        2
      ]
    }
  },
  {
    "model": "app.topic",
    "pk": 4,
    "fields": {
      "group": 1,
      "title": "Linux",
      "description": "",
      "sub_topics": [
        2
      ]
    }
  },
  {
    "model": "app.topic",
    "pk": 5,
    "fields": {
      "group": 1,
      "title": "HTML/CSS",
      "description": "",
      "sub_topics": []
    }
  },
  {
    "model": "app.topic",
    "pk": 6,
    "fields": {
      "group": 1,
      "title": "Databases/SQL",
      "description": "",
      "sub_topics": []
    }
  },
  {
    "model": "app.topic",
    "pk": 7,
    "fields": {
      "group": 1,
      "title": "Python",
      "description": "",
      "sub_topics": []
    }
  },
  {
    "model": "app.topic",
    "pk": 8,
    "fields": {
      "group": 1,
      "title": "Django",
      "description": "",
      "sub_topics": []
    }
  },
  {
    "model": "app.topic",
    "pk": 9,
    "fields": {
      "group": 1,
      "title": "React",
      "description": "",
      "sub_topics": []
    }
  },
  {
    "model": "app.topic",
    "pk": 10,
    "fields": {
      "group": 1,
      "title": "APIs",
      "description": "",
      "sub_topics": []
    }
  },
  {
    "model": "app.topic",
    "pk": 11,
    "fields": {
      "group": 1,
      "title": "JavaScript Fundamentals",
      "description": "",
      "sub_topics": [
        1
      ]
    }
  },
  {
    "model": "app.topic",
    "pk": 12,
    "fields": {
      "group": 1,
      "title": "Review",
      "description": "",
      "sub_topics": []
    }
  },
  {
    "model": "app.lesson",
    "pk": 7,
    "fields": {
      "topic": 11,
      "title": "CLI/GIT/Intro to javascript",
      "description": "Get your local machine set up to start the course\r\nExploring your IDE (VSCode)\r\nBe able to navigate your computer using the command line\r\nCreate and manage git repositories using the command line",
      "lesson_file_path": "week-01/2022-01-31.md",
      "img_url": null,
      "date": "2022-05-02",
      "start_time": "2022-05-02T09:00:00Z",
      "stop_time": "2022-05-02T12:00:00Z",
      "markdown": "# Monday, January 31, 2022\n\n## Topics Covered / Goals\n- Get your local machine set up to start the course\n- Exploring your IDE (VSCode)\n- Be able to navigate your computer using the command line\n- Create and manage git repositories using the command line\n\n## Lesson\n\n### Computer Setup (Mac, Linux, & Windows)\nBefore we get started, just know that this will be chaos. Your goal is to get a working environment, not to understand everything that happens. Please follow along closely!\n- [Slack](https://slack.com/downloads) - for all communication purposes\n- [Zoom](https://zoom.us/support/download)\n- Sign up for [Operation Code](https://operationcode.org/join)\n\n### Mac Setup\n- Make sure you have an Apple ID\n- Download XCode from the Mac App Store\n- Ensure that you're running the most recent operating system. You can check your version by going to \"System Preferences\" and clicking on \"Software Update\"\n- [Complete Installfest (MacOS)](../page-resources/installfest.md)\n\n### Ubuntu Linux Setup\n- [Complete Installfest (Ubuntu Linux)](../page-resources/installfest_ubuntu.md)\n\n### Windows Setup\n- Ensure that you're running the most recent operating system (Windows 10 and 11 are both fine). You can update to the latest Windows version by selecting `Start > Settings > **Windows Update **> Check for updates.`\n- Download and install [WSL](https://docs.microsoft.com/en-us/windows/wsl/install) by running `wsl --install` as an Administrator from Powershell\n- [Complete Installfest (Windows)](../page-resources/installfest_windows.md)\n\n### CLI Intro\n\nReview the following BASH commands:\n- pwd\n- ls, ls -a\n- cd, ., .., ~, / (different places to cd to)\n- mkdir (make ~/projects for all codeplatoon assignments)\n- touch\n- cp, cp -r\n- mv\n- rm, rm -r, rm -rf\n- rmdir\n- sudo\n- clear, cmd+k\n- less (useful by itself, also used by git diff)\n- vim (just learn how to quit. used by git commit)\n\n### Git Intro\n\n- `ls -a` (nothing here)\n- `git status` (not a repo)\n- `git init` \n- `ls -a` (see .git folder)\n- `git status`\n- `touch work.txt`\n- `git add .`\n- `git commit -m 'i did work'` (use -m to add the message inline, or you'll find yourself in vim)\n- `git log` (uses `less` to show the commit history)\n- `git remote add origin https://github.com/username/reponame` (the name is arbitrary, but origin is VERY conventional)\n- `git remote rm origin` (in case you messed up)\n- `git remote -v` (maybe you messed up, but aren't sure)\n- `git push origin master`\n- `git pull origin master`\n- `git clone https://github.com/username/reponame` (now you can start today's exercises)\n\n## Visual Studio Code\n\nThere are many IDEs (integrated development environments) out there that developers can use. For our class, we're going to be using Visual Studio Code, a free IDE created by Microsoft. VSCode is highly extensible and able to support many different coding languages. \n\nIt is important to use a consistent environment when collaborating so we are going to recommend a few settings and extensions that everyone should set up with VSCode. These are the recommended settings we all should be using. To set these, go to the main menu Code -> Preferences -> Settings (or Mac: Command + Shift + P > \"Settings\"), and apply these settings in the JSON file:\n\n```\n{\n  \"editor.fontSize\": 14,\n  \"editor.multiCursorModifier\": \"ctrlCmd\",\n  \"editor.renderLineHighlight\": \"gutter\",\n  \"editor.tabSize\": 2,\n  \"editor.wordWrap\": \"on\",\n  \"explorer.confirmDelete\": false,\n  \"explorer.confirmDragAndDrop\": false,\n  \"files.autoSave\": \"onFocusChange\",\n  \"window.zoomLevel\": 0,\n  \"workbench.colorTheme\": \"Visual Studio Dark\",\n  \"workbench.iconTheme\": \"vscode-icons\",\n  \"workbench.startupEditor\": \"newUntitledFile\",\n  \"[python]\": {\n    \"editor.insertSpaces\": true,\n    \"editor.tabSize\": 4\n  },\n\n}\n```\n\nAnd here are some useful extensions:\n  - Beautify\n  - VSCode Icons\n  - Bracket Pair Colorizer\n  - Path IntelliSense\n  - Live Server\n  - Python\n  - Live Share\n  - Live Share Audio\n  \n \n\n\n## Assignments\n- [99 Bottles](https://github.com/quebecplatoon/algo-99-bottles) in JS\n- [Deaf Grandma](https://github.com/quebecplatoon/algo-deaf-grandma) in JS\n- [Terminal Commands In Depth](https://github.com/quebecplatoon/misc-command-line) ...nothing to submit here but necessary reading\n\n"
    }
  },
  {
    "model": "app.lesson",
    "pk": 8,
    "fields": {
      "topic": 11,
      "title": "JS fundamentals / libraries",
      "description": "Pair Programming\r\nYou will likely be pair programming at your first job in some capacity. It's an important skill to have because it helps you communicate your thought process and enables you to learn from other developers.\r\nJS Fundamentals\r\nJavascript is the language of the Web and you'll need to know it if you want to become a full stack software engineer.\r\nJavascript Libraries",
      "lesson_file_path": "week-01/2022-02-01.md",
      "img_url": null,
      "date": "2022-05-03",
      "start_time": "2022-05-03T09:00:00Z",
      "stop_time": "2022-05-02T12:00:00Z",
      "markdown": "# Tuesday, February 01, 2022\r\n\r\n## Topics Covered / Goals\r\n- Pair Programming\r\n  - You will likely be pair programming at your first job in some capacity. It's an important skill to have because it helps you communicate your thought process and enables you to learn from other developers.\r\n- [JS Fundamentals](../page-resources/JSFundamentalsDay1.pdf)\r\n  - Javascript is the language of the Web and you'll need to know it if you want to become a full stack software engineer.\r\n- Javascript Libraries\r\n\r\n\r\n## Lesson\r\n\r\n**Javascript Fundamentals**\r\n- Javascript was created by Brendan Eich during his time at Netscape in 1995 that conforms to the ECMAScript specification.\r\n- JavaScript is one of the core technologies of the World Wide Web.\r\n- JavaScript is high-level language. It has curly-bracket syntax, dynamic typing, prototype-based object-orientation, and first-class functions.\r\n- With the creation of Node.js (by Google) you can leverage Javascript to write server side code\r\n\r\n**Data Types**\r\n  - **Strings**\r\n    - Anything enclosed in single, double quotes, or back ticks\r\n    ```js\r\n      'stringOne'\r\n      \"string two is also a string with 123456789\"\r\n      `Use back ticks for string interpolation to put variables in your string ${someVariable}`\r\n    ```\r\n    - Interpolation is when you substitute a variable into a string.\r\n    ```js\r\n    let firstName = 'Tom';\r\n    console.log(`My first name is ${firstName}`)\r\n    ```\r\n\r\n    - Reference [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String) and [W3 Schools](https://www.w3schools.com/js/js_string_methods.asp) for a list of built-in String Methods\r\n  - **Numbers**\r\n    - Similar to most other languages, `integers` are whole numbers, `floats` are decimals\r\n    ```js\r\n    3.14 //-> Float number\r\n    55 //-> Integer is a whole number\r\n    ```\r\n  - **Booleans**\r\n    - Booleans are `true` or `false`\r\n    ```js\r\n    true\r\n    false\r\n    ```\r\n  - **Undefined**\r\n    - A variable that has no defined value.\r\n    ```js\r\n    let babyName = undefined;\r\n    ```\r\n  - **Null**\r\n    - A variable explicity defined as having no value\r\n    ```js\r\n    let noValue = null\r\n    ```\r\n  - **Arrays**\r\n    - Holds an ordered list of values. These values can be anything: strings, numbers, objects, even other arrays!\r\n    - Once you put something in an array, it stays at that place forever until you alter the array. You can rely on it always being there. Think of an older person's pill box - the pills for Monday are in the Monday slot. If they were to shake it or drop it or something, it wouldn't matter. Those pills are still at the same place.\r\n    - You can access the values in the array by using their `index`. We start counting from 0 and go up from there\r\n    ```js\r\n    const daysOfTheWeek = ['mon', 'tues', 'wed', 'thurs', 'fri']\r\n    // Remember, computers start counting at 0 and move up from there\r\n    daysOfTheWeek[3] // \"thurs\"\r\n    ```\r\n    - Reference [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array) and [W3 Schools](https://www.w3schools.com/jsref/jsref_obj_array.asp) for a list of built-in Array Methods\r\n\r\n  - **Objects**\r\n    - It's a collection of key/value pairs. You can't access it by `index` like with arrays because objects do not have an order, but you can access it by `key`\r\n    - Useful for holding many details about a single entity, like VIN numbers or social security information\r\n     \r\n    ```js\r\n    // below, we have a object called user that has a name/age key on the left and values on the right\r\n    let user = {\r\n        'name': 'Tom',\r\n        'age': 34\r\n    }\r\n\r\n    // To access a particular key's value:\r\n    console.log(user['name'])\r\n\r\n    // You can also re-assign a key's value\r\n    user['age'] = 30\r\n    ```\r\n\r\n**Variables**\r\n  - Variables are named labels/identifiers for storing values\r\n  - Remember from math class variables ╬ô├▓┬╝Γö£Γöñ╬ô├╢┬úΓö£┬║╬ô├╢┬╝Γö£Γòæx╬ô├▓┬╝Γö£Γöñ╬ô├╢┬úΓö£┬║╬ô├╢┬╝Γö£├ª and ╬ô├▓┬╝Γö£Γöñ╬ô├╢┬úΓö£┬║╬ô├╢┬╝Γö£Γòæy╬ô├▓┬╝Γö£Γöñ╬ô├╢┬úΓö£┬║╬ô├╢┬╝Γö£├ª?\r\n  - There are three ways to declare/create a variable in Javascript\r\n  - `var`\r\n    - The most common variable. It can be reassigned but only accessed within a function. Variables defined with `var` move to the top when the code is executed. (don╬ô├▓┬╝Γö£Γöñ╬ô├╢┬úΓö£┬║╬ô├╢┬úΓö£Γòùt use anymore)\r\n  - `const`\r\n    - Can not be reassigned and not accessible before they appear within the code.\r\n  - `let`\r\n    - The `let` variable can be reassigned but not re-declared.\r\n\r\n  - `var`, `let`, and `const` are reserved keywords in Javascript. You can╬ô├▓┬╝Γö£Γöñ╬ô├╢┬úΓö£┬║╬ô├╢┬úΓö£Γòùt use them for anything other than declaring variables\r\n\r\n**Printing**\r\n- `console.log()`\r\n- Takes whatever you give it and prints it to the terminal/console\r\n```js\r\nlet a = 'Hello'\r\nlet b = 'World'\r\nconsole.log(`${a} ${b}`) //-> 'Hello World'\r\n```\r\n\r\n**Arithmetic Operators**\r\n- Arithmetic is pretty much the same in all languages. Below are all of the operators:\r\n\r\n|Description|Operator|Examples|\r\n|-----------|--------|--------|\r\n|Addition| `+`| `1 + 1 //-> 2`|\r\n|Subtraction|`-`| `3 - 2 //-> 1`|\r\n|Multiplication|`*`| `3 - 2 //-> 1`|\r\n|Exponent|`**`| `3 ** 2` (╬ô├▓┬╝Γö£Γöñ╬ô├╢┬úΓö£┬║╬ô├╢┬ú╬ô├╢├ë3 to the power of 2╬ô├▓┬╝Γö£Γöñ╬ô├╢┬úΓö£┬║╬ô├╢┬úΓö£Γòù)|\r\n|Division|`/`| `10 / 2 //-> 5`|\r\n|Modulus (returns the remainder)|`%`| `10 % 3 //-> 1`|\r\n\r\n**Logic Operators**\r\n|Description|Operator|Examples <br>`let a = 4;`<br> `let b = 2;`<br>`let c = 8`|\r\n|-----------|--------|--------|\r\n|Equal| `==` or `===`| `a == b //-> false`|\r\n|Not equal|`!=` or `!==`| `a !== b //-> true`|\r\n|Greater than|`>`| `a > b //-> true`|\r\n|Less than|`<`| `a < b //-> false`|\r\n|Greater than or equal|`>=`| `a >= b //-> true`|\r\n|Less than or equal to|`<=`| `a <= b //-> false`|\r\n|Logical AND|`&&`| `a > b && b < c //-> true` <br> `a > c && a > b //-> false`|\r\n|Logical OR|`\\|\\|`| `a > b \\|\\| b < c //-> true` <br>`a > c \\|\\| a > b //-> true`|\r\n\r\n**Functions**\r\n- Javascript functions are resusable blocks of code that perform a specific set of instructions\r\n- Functions output a value\r\n\r\n```js\r\n// To declare a new function use the function keyword followed by the name of the function.\r\n// Pass in parameters (if needed)\r\n\r\n// Regular functions\r\nfunction name(parameter1, paramenter2) {\r\n\tlet answer = parameter1 + paramenter2\r\n\treturn answer\r\n}\r\n\r\n// OR\r\n\r\n// ╬ô├▓┬╝Γö£Γöñ╬ô├╢┬úΓö£┬║╬ô├╢┬ú╬ô├╢├ëFat arrow╬ô├▓┬╝Γö£Γöñ╬ô├╢┬úΓö£┬║╬ô├╢┬úΓö£Γòù functions\r\nconst name = (num1, num2) => {\r\n  let answer = num1 + num2\r\n  return answer\r\n}\r\n\r\n// Example\r\nlet sayHello = (firstName) => {\r\n  return `Hello! My name is ${firstName}`\r\n}\r\n\r\nsayHello('Tom')\r\n// Here we have a function called `sayHello` that takes in a single parameter/argument called `firstName`. We passed in `Tom` as the argument, so `Tom` gets saved as `firstName` when we run through the code. We can then interpolate `firstName` into the string that gets printed out.\r\n\r\n```\r\n\r\n**Conditional Logic**\r\n- When you want to control how a computer goes through your program, use control flow!\r\n- Evaluates to either true or false (boolean values)\r\n- Allows us to select different outcome depending on user input or the result of a computation\r\n\r\n```js\r\n// if statement\r\nif (a === b) {\r\n\t// do something\r\n}\r\n\r\n// if else statement\r\nif (a === b) {\r\n\t// do something\r\n} else {\r\n\t// do something\r\n}\r\n\r\n// else if statement\r\nif (a === b) {\r\n\t// do something\r\n} else if (a > b) {\r\n\t// do something else\r\n} else {\r\n\t// do something else\r\n}\r\n```\r\n- **Example**\r\n```js\r\nlet age = 18\r\nif (age >= 21) {\r\n    console.log('Welcome to the bar')\r\n} else {\r\n    console.log('Come back when you are older')\r\n}\r\n\r\n## Sometimes, you can drink if you are in another country if you're 18. Let's account for that.\r\n\r\nlet currentCountry = 'China'\r\nif (age >= 21) {\r\n    console.log('Welcome to the bar')\r\n} else if  (age >= 18 && currentCountry === 'China') {\r\n    console.log('You can drink in China starting at age 18!')\r\n} else {\r\n    console.log('Come back when you are older')\r\n}\r\n```\r\n\r\n**Iteration (Loops)**\r\n- Loops are very popular in coding. They are basically instructions for your computer to do things over and over again\r\n- As long as the condition is true, the block of code will continue to execute.\r\n- When the condition becomes false, the code after the end of the loop will be executed.\r\n```js\r\nlet age = 12\r\nwhile (age < 21) {\r\n    console.log(`You are not old enough yet - you are only ${age} years old! Come back when you are older.`)\r\n}\r\n// beware of infinite loops! What is going on above?\r\n\r\n// This would be better:\r\nlet age = 12\r\nwhile (age < 21) {\r\n    console.log(`You are not old enough yet - you are only ${age} years old! Come back when you are older.`)\r\n    age += 1\r\n}\r\n```\r\n- `for` loops are a bit different. It's a way for you to iterate over everything in an array or object\r\n\r\n```js\r\nlet age = 12\r\nfor (let i = 0; i < 21; i++) {\r\n  console.log(`You are not old enough yet - you are only ${age} years old! Come back when you are older.`)\r\n}\r\nreturn `You're now ${age}! You can come on in!`\r\n\r\n// Looping through an object\r\nlet employee = {\r\n  name: 'Tom',\r\n  title: 'Instructor'\r\n}\r\nfor (let key in employee) {\r\n\t// execute this code\r\n}\r\nreturn someValue\r\n```\r\n\r\n### Libraries\r\nLibraries used to leverage pre-written code (developed by other developers) to include functionality into our applications without having to do everything from scratch. Javascript libraries/frameworks are primarily focused on the front end. One of the most popular libraries used today is React. Instagram and Facebook are written in this framework.\r\n\r\nOne library manager is `npm`. We can use npm to easily download and \"install\" JavaScript libraries to use with our apps. \r\n\r\n### External Resources\r\n- [Cheatsheet](https://education.github.com/git-cheat-sheet-education.pdf)\r\n- [Git Resource](https://github.com/quebecplatoon/git-resource)\r\n- [Wikipedia of Algorithms](http://algorithm.wiki/en/app/)\r\n- [Keyboard Setup to match Mac](../page-resources/keyboard-setup.png)\r\n- [JS Fundamentals](../page-resources/javascript_control_flow.pdf) - control flow, if/else, loops, etc\r\n- [List of JS libraries](https://www.javascripting.com/).\r\n\r\n- Some of you may be wondering what `exports` is on the Javascript files. The Javascript folders will sometimes have prewritten spec (test) files and in order for the spec file to read the contents of the corresponding Javascript files where your code is written, it must be attached to the `export` Javascript object. To ensure that you are writing correct code, run `node WHATEVER_CHALLENGE_NAME_Spec.js` in the `js` folder. Don't run `node WHATEVER_CHALLENGE_NAME.js` as it will blow up.\r\n\r\n## Assignments\r\n- [Roman Numerals](https://github.com/quebecplatoon/algo-roman-numerals) in JS\r\n- [Git Practice](http://learngitbranching.js.org/)\r\n- [Factorial](https://github.com/quebecplatoon/algo-factorial) in JS\r\n- [Fibonacci](https://github.com/quebecplatoon/algo-fibonacci) in JS\r\n- [Linear Search](https://github.com/quebecplatoon/algo-linear-search) in JS"
    }
  },
  {
    "model": "app.lesson",
    "pk": 9,
    "fields": {
      "topic": 7,
      "title": "Python Intro",
      "description": "Understand basic Python syntax\r\nUnderstand variable types\r\nUnderstand basic data types\r\nUnderstand data structures:\r\nlists\r\ntuples\r\ndictionaries\r\nUnderstand control flow in Python:\r\nif-statements\r\nfor-loops\r\nwhile-loops\r\nUnderstand some common built-in methods\r\nbuilt-in methods for strings, lists, dicts, etc\r\ndestructive vs non-destructive methods",
      "lesson_file_path": "week-01/2022-02-02.md",
      "img_url": null,
      "date": "2022-05-04",
      "start_time": "2022-05-04T09:00:00Z",
      "stop_time": "2022-05-04T12:00:00Z",
      "markdown": "# Wednesday, February 02, 2022\r\n\r\n╬ô├▓┬╝Γö£Γöñ╬ô├╢┬úΓö£┬║╬ô├╢┬úΓö¼Γòù\r\n## Topics Covered / Goals\r\n- Understand basic Python syntax\r\n- Understand variable types\r\n- Understand basic data types\r\n- Understand data structures:\r\n  - lists\r\n  - tuples\r\n  - dictionaries\r\n- Understand control flow in Python:\r\n  - if-statements\r\n  - for-loops\r\n  - while-loops\r\n- Understand some common built-in methods\r\n    - built-in methods for strings, lists, dicts, etc\r\n    - destructive vs non-destructive methods\r\n\r\n## Lesson\r\n\r\n> In python, like all programming languages, we will manipulate various different types of data, such as numbers and lists. If you want to understand how you can manipulate your data, and compare it to other data, the most important thing to understand is the TYPE of your data. Many of these data types are similar to the data types we use in javascript, but there are some important differences I'll point out. There are two types of types: primitive types, which are just a single value, and non-primitive types, which can contain other data.\r\n\r\n### Numbers\r\n\r\n> The first type we'll learn about are numbers. Let's create a number literal and assign it to a variable.\r\n\r\n```python\r\na_small_number = 4\r\n```\r\n\r\n> In python, unlike javascript, you don't use any keywords (e.g. `let`, `const`) for defining a variable. You simply assign a value to a variable name. When choosing a name, it's conventional in python to use 'snake_case', which consists of lowercase letters connected with underscores.\r\n> To check the type of a variable, we can use the `type()` function. We can print the result to the terminal with `print()`. We'll learn more about functions later today.\r\n\r\n```python\r\nprint(type(a_small_number))\r\n```\r\n\r\n> You can manipulate numbers in python using numeric operators, such as +, -, *, /, %, <, >, ==, etc. These work the same way they do in javascript, so we won't review them again. Python does not perform type coercion like javascript, so there are no operators like === or !==.\r\n\r\n### Strings\r\n\r\n> Strings can be created in python similarly to how you create them in javascript, using either single or double quotes.\r\n\r\n```python\r\na_string = 'hello world'\r\nanother_string = \"welcome to the internet\"\r\nprint(type(another_string))\r\n```\r\n\r\n> Python supports string interpolation, just like javascript, but the syntax is a little different\r\n\r\n```python\r\nday = 'Friday'\r\nactivity = 'bowling'\r\nprint(f\"Let's go {activity} on {day} afternoon.\") # This is sometimes called an \"f string\"\r\n```\r\n\r\n### Booleans\r\n\r\n> The last primitive type in python is boolean. There are only two boolean values, `True` and `False`. These work the same as in javascript, except that we spell them with capital letters. \r\n\r\n### Lists\r\n\r\n> The most fundamental non-primitive type in python is a list. A python list is roughly equivalent to a javascript array, but lists in python are a bit more flexible. \r\n\r\n```python\r\nberries = ['grape', 'tomato', 'cucumber', 'eggplant', 'banana', 'watermelon', 'pumpkin']\r\nprint(type(berries))\r\nprint(berries[1]) # normal indexing works how you'd expect\r\nprint(berries[-1]) # index from the back of the list\r\nprint(berries[2:4]) # slice in the middle\r\nprint(berries[:3]) # slice from the start to index 3\r\nprint(berries[2:]) # slice from index 2 to the end\r\n```\r\n\r\n### Tuples\r\n\r\n> A tuple in python is like a list, but it is defined with parentheses instead of brackets. It is used for storing mulTiPLE pieces of data in one data structure. Unlike a list, a tuple is immutable, meaning that it cannot be mutated. You cannot add, remove, or modify items in a tuple. You should use a tuple if you want to make sure that the items in your list never change. For example, you might use a tuple to store the seven days of the week, because there's no reason for that to change. You might also store geographical (lat,long) coordinates in a tuple, because the two numbers together refer to one thing, one specific place. It doesn't make sense to modify just one number in a coordinate pair. Instead, you would just create a new coordinate pair. \r\n\r\n```python\r\ndays_of_the_week = ('sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday')\r\ndays_of_the_week[6] = 'Caturday' # this throws an error! we can't assign to a tuple\r\n```\r\n\r\n### Dictionaries\r\n\r\n> A dictionary in python is like an object in javascript (though python objects are more complex than javascript objects). It's used to store pairs of data, a key with its value. For example, you might use a dictionary to store information about a person. Unlike in javascript, we must use quotation marks for defining string keys, and we must use bracket notation for accessing values in a dictionary. \r\n\r\n```python\r\njeff = {\r\n    'name': 'jeff',\r\n    'age': 44,\r\n    'job': 'influencer',\r\n}\r\nprint(jeff['age'])\r\n\r\npeople = [\r\n    {\r\n        'name': 'alice',\r\n        'age': 44,\r\n        'job': 'influencer',\r\n    },\r\n    {\r\n        'name': 'bob',\r\n        'age': 31,\r\n        'job': 'dog walker',\r\n    },\r\n    {\r\n        'name': 'carol',\r\n        'age': 65,\r\n        'job': 'life coach',\r\n    },\r\n]\r\nprint(people[1]['name'])\r\n```\r\n\r\n### functions\r\n\r\n> To define a function in python, we use the `def` keyword. The body of the function must be indented because python is whitespace-sensitive. Instead of using braces and semicolons to mark the boundaries of our code, python uses indentation and newlines. It's important that you get comfortable defining your own functions to use in your code, but you should also be aware that there are many useful functions predefined in python.\r\n\r\n```python\r\ndef gimme_five():\r\n    return 5\r\nprint(gimme_five() + 10)\r\n\r\n\r\n# if a function is defined with one parameter, it must be called with one argument\r\ndef add_one(n):\r\n    return n + 1\r\nprint(add_one(10))\r\n\r\n# order matters for positional arguments\r\ndef describe_berries(n, color):\r\n    print(f'I have {n} {color}berries.')\r\ndescribe_berries(3, 'blue')\r\ndescribe_berries('black', 4)\r\n\r\n# keyword arguments can be used in any order\r\ndef describe_berries(n=1, color=\"blue\"):\r\n    print(f'I have {n} {color}berries.')\r\ndescribe_berries(color=\"rasp\", n=3)\r\n\r\n# use * to define a function with an unspecified number of parameters\r\ndef print_them_all(*args):\r\n    print(args)\r\nprint_them_all('alice', 'bob', 'carol')\r\n\r\n# use ** to define a function with an unspecified number of keyword arguments\r\ndef who_am_i(**kwargs):\r\n    for kwarg in kwargs: # we'll talk more about loops in a minute\r\n        print(f'My {kwarg} is {kwargs[kwarg]}.')\r\nwho_am_i(name='dan', age=20, job='skydiving instructor')\r\n```\r\n\r\n\r\n### If-statements\r\n> If-statements in python work the same as in javascript, except that instead of `&&`, `||`, and `!`, we use `and`, `or`, and `not`.\r\n\r\n```python\r\ndef can_drink_beer(age, country):\r\n    if age >= 21 or age >= 18 and country == 'Canada':\r\n        return True\r\n    elif country == 'Antarctica':\r\n        return True\r\n    else:\r\n        return False\r\n\r\nprint(can_drink_beer(20, 'USA'))\r\nprint(can_drink_beer(21, 'USA'))\r\nprint(can_drink_beer(18, 'Canada'))\r\n\r\n\r\n```\r\n\r\n**for-loop**\r\n```python\r\n## looping over list elements\r\nmy_list = [\"a\", \"b\", \"c\"]\r\nfor x in my_list:\r\n    print(x)\r\n\r\n## loop over a range\r\nfor x in range(10):\r\n    print(x)\r\n\r\n\r\nfor i, x in enumerate(my_list):\r\n    print(i, x)\r\n\r\n## looping over dictionary entries\r\nmy_dict = {\r\n    \"donuts\": \"yummy!\",\r\n    \"green beans\": \"icky!\",\r\n}\r\nfor k in my_dict:\r\n    print(my_dict[k])\r\n\r\nfor v in my_dict.values():\r\n    print(v) # same output as the previous loop\r\n```\r\n\r\n**while-loop**\r\n```python\r\nx = 9\r\nwhile x > 0:\r\n    print(x)\r\n    x = x - 1\r\n\r\n## infinite loop\r\nx = 9\r\nwhile x > 0:\r\n    print(\"la la la\") \r\n```\r\n\r\n\r\n**Built-in Methods**\r\n> Most types of values in python have built-in methods that you can use to manipulate that value. a method is simply a function that belongs to an object. There are two types of methods that you should be aware of: destructive and non-destructive methods. Destructive methods are those that change the original data where non-destructive methods are those that do not change the original data. You have to be careful with the methods that you use as there isn't a clear indication in Python or JS as to which are destructive and which aren't. Let's take a look at the example below:\r\n```python\r\nfirst_name = 'jonathan'\r\nfirst_name.capitalize() # this is a string method that converts the first character to upper case\r\nfirst_name # we see that despite running the method above, my original data does not change\r\n\r\nlast_name = 'young'\r\nlast_name.replace('g', '123')\r\nlast_name # same case here - this is a non destructive method\r\n\r\nstaff = ['jon', 'rod', 'ankur', 'chad', 'alicia']\r\nstaff.append('tom')\r\nstaff # this is a destructive method because it alters the original\r\n## Let's fire tom. He sucks.\r\nstaff.pop()\r\nstaff # my original has been changed yet again!\r\n```\r\n\r\n## Resources\r\n- [Python Fundamentals](../page-resources/python_fundamentals.md)\r\n╬ô├▓┬╝Γö£Γöñ╬ô├╢┬úΓö£┬║╬ô├╢┬úΓö¼Γòù\r\n## Assignments\r\n- [99 Bottles](https://github.com/quebecplatoon/algo-99-Bottles) in Python\r\n- [Deaf Grandma](https://github.com/quebecplatoon/algo-deaf-grandma) in Python\r\n- [Roman Numerals](https://github.com/quebecplatoon/algo-roman-numerals) in Python\r\n- [Fibonacci](https://github.com/quebecplatoon/algo-fibonacci) in Python\r\n- [Factorial](https://github.com/quebecplatoon/algo-factorial) in Python\r\n- [Linear Search](https://github.com/quebecplatoon/algo-linear-search) in Python"
    }
  },
  {
    "model": "app.lesson",
    "pk": 10,
    "fields": {
      "topic": 7,
      "title": "Python Fundamentals",
      "description": "Understand lambda functions\r\nUnderstand list methods map(), filter(), sort(), reduce()\r\nUnderstand ternary statements\r\nUnderstand list comprehensions\r\nUnderstand Try-Except error handling",
      "lesson_file_path": "week-01/2022-02-03.md",
      "img_url": null,
      "date": "2022-05-05",
      "start_time": "2022-05-05T09:00:00Z",
      "stop_time": "2022-05-05T12:00:00Z",
      "markdown": "# Thursday, February 03, 2022\r\n\r\n## Topics Covered / Goals\r\n- Understand lambda functions\r\n- Understand list methods map(), filter(), sort(), reduce()\r\n- Understand ternary statements\r\n- Understand list comprehensions\r\n- Understand Try-Except error handling\r\n\r\n## Lesson\r\n\r\n### Lambda functions\r\n- temporary, unnamed (\"anonymous\") functions\r\n```python\r\n## typical function example\r\ndef add_one(x):\r\n    return x + 1\r\n\r\nprint(add_one(7)) # output would be 8\r\n\r\n## lambda function example\r\nadd_two = lambda x : x + 2\r\n\r\nprint(add_two(7)) # output would be 9\r\n```\r\n\r\n### List Methods\r\n**map()**\r\n- creates a new list, using a function that returns a new item\r\n```python\r\nmy_list = [1,2,3,4,5,6,7,8,9,10]\r\nnew_list = map(lambda item : item + 2, my_list)\r\nfor x in new_list:\r\n    print(x)\r\n## [3,4,5,6,7,8,9,10,11,12]\r\n```\r\n\r\n**filter()**\r\n- creates a new list, using a function that returns a bool (True => include item in new list)\r\n```python\r\nmy_list = [1,2,3,4,5,6,7,8,9,10]\r\nnew_list = filter(lambda item : item % 3 == 0, my_list)\r\nfor x in new_list:\r\n    print(x)\r\n## [3,6,9]\r\n```\r\n\r\n**reduce()**\r\n- creates a single value, using a function that aggregates values\r\n```python\r\nimport functools\r\nmy_list = [1,2,3,4,5,6,7,8,9,10]\r\nsum = functools.reduce(lambda agg, item : agg + item, my_list)\r\nprint(sum)\r\n```\r\n\r\n## Ternary Statements\r\n- inline if-statements\r\n```python\r\n## if statement\r\nx = None\r\ny = 9\r\nif y > 5:\r\n    x = \"donuts\"\r\nelse:\r\n    x = \"bagels\"\r\n\r\nprint(x)\r\n\r\n## ternary statement\r\nx = \"donuts\" if y > 5 else \"bagels\"\r\nprint(x)\r\n```\r\n\r\n### List Comprehensions\r\n```python\r\nfull_list = [a for a in range(10)]\r\nprint(full_list)\r\n\r\nevens_list = [x for x in range(10) if x % 2 == 0]\r\nprint(my_list)\r\n\r\nsome_list = [\"donuts\" if x % 2 == 0 else \"bagels\" for x in range(10) if x % 3 == 0]\r\nprint(some_list)\r\n```\r\n\r\n### Try-Except\r\n```python\r\ntry:\r\n    a = 1\r\n    b = 2\r\n    c = \"donuts\"\r\n    \r\n    d = a + b\r\n    print(d)\r\n\r\n    e = a + c # error\r\n    print(e)\r\nexcept:\r\n    # handle exception\r\n    print(\"BOO! there was an error\")\r\nelse:\r\n    # handle success\r\n    print(\"YAY! there was no error\")\r\nfinally:\r\n    # always execute regardless of exception or success\r\n    print(\"donuts are yummy!\")\r\n```\r\n\r\n## Modules, Packages, Libraries, and Frameworks\r\n\r\n- Modules, libraries, frameworks, and packages are just code that someone else wrote ahead of time to make your life as a developer easier. There is no magic here - it's just meant to make your life easier and for you to make more robust applications\r\n- There are a number of package managers to manage the different libraries we will use. The most popular package manager for Python is Pip, and the most popular (and default) package manager for Javascript is npm. \r\n- You can find some very useful libraries [here](https://pythontips.com/2013/07/30/20-python-libraries-you-cant-live-without/). We'll be using Django in the next few weeks. If you go the data science route, there are some data science heavy libraries like NumPy and Pandas\r\n\r\nYou can also write your own modules, which allows for you as the author to organize your code and group it together for ease of use. To put it very simply, a module is a file of Python code that you bring into other files. Let's take a look at an example:\r\n\r\n### Python modules\r\n\r\n```python\r\n## file1.py\r\ndef say_hello():\r\n    print('Hey there')\r\n\r\n## file2.py\r\nimport file1\r\nimport file1 as anything\r\nanything.say_hello()\r\n```\r\nWe just created two files: `file1.py` and `file2.py`. `file1.py` has a `say_hello` function. `file2.py` has nothing in it, but imports that file in as the name of the file and we can use all the methods in that file. We can also rewrite it as `import file1 as anything` and call `anything.say_hello()`. You can `import` anything into your file by providing the correct relative path to the file. More on that can be found under external resources.\r\n\r\n## Resources\r\n- [Python vs. JavaScript](https://realpython.com/python-vs-javascript/#javascript-vs-python)\r\n- [Python Modules](https://www.tutorialspoint.com/python/python_modules.htm)\r\n\r\n## Assignments\r\n\r\n- [Armstrong Numbers](https://github.com/quebecplatoon/algo-armstrong-numbers) in JS/Python\r\n- [Sum Pairs](https://github.com/quebecplatoon/algo-sum-pairs) in JS/Python\r\n- [Credit Check](https://github.com/quebecplatoon/algo-credit-check) in JS/Python\r\n- [Anagrams I](https://github.com/quebecplatoon/algo-anagrams-i) in JS/Python\r\n- [Debugging One](https://github.com/quebecplatoon/algo-debugging-one)"
    }
  },
  {
    "model": "app.lesson",
    "pk": 11,
    "fields": {
      "topic": 12,
      "title": "JS/Python Review",
      "description": "JS/Python Review",
      "lesson_file_path": "week-01/2022-02-04.md",
      "img_url": null,
      "date": "2022-05-06",
      "start_time": "2022-05-06T09:00:00Z",
      "stop_time": "2022-05-06T12:00:00Z",
      "markdown": "# Friday, February 04, 2022\r\n\r\n## Topics Covered / Goals\r\n- Review material from the week\r\n\r\n\r\n### Review\r\n\r\n## Assignments\r\n- [Practice with a Pair](https://github.com/quebecplatoon/git-pair)\r\n- [Anagrams II](https://github.com/quebecplatoon/algo-anagrams-ii) in JS/Python\r\n- [Character Count](https://github.com/quebecplatoon/algo-character-count) in JS/Python\r\n- [Palindromes](https://github.com/quebecplatoon/algo-palindromes) in JS/Python\r\n- [Calculate Mode](https://github.com/quebecplatoon/algo-calculate-mode) in JS/Python\r\n- [Pad an Array](https://github.com/quebecplatoon/algo-pad-array) in JS/Python\r\n- [Balanced Parentheses](https://github.com/quebecplatoon/algo-balanced-parentheses) in JS/Python"
    }
  },
  {
    "model": "app.lesson",
    "pk": 12,
    "fields": {
      "topic": 7,
      "title": "Object Oriented Programming in Python",
      "description": "Intro to Object Oriented Programming\r\nObject Oriented Programming (OOP) is a commonly used design paradigm. Python is an object oriented language, and so OOP is an essential piece of understanding Python.\r\nClasses\r\nClasses are structures in code that allow for developers to create more elaborate data types that can better reflect real-world objects\r\nInstantiating objects with init and self\r\nEvery class in Python should have an init method, which tells python how to construct instances of that class. The instance to be created is referred to as self.\r\nInstance methods and self\r\nClasses can define methods to be called by instances of that class, which can refer to themselves using the self keyword.\r\nDunder Methods\r\nThese are special methods that are built-in to use within classes, in Python.",
      "lesson_file_path": "week-02/2022-02-07.md",
      "img_url": null,
      "date": "2022-05-07",
      "start_time": "2022-05-07T09:00:00Z",
      "stop_time": "2022-05-07T12:00:00Z",
      "markdown": "# Monday, February 07, 2022\r\n\r\n## Topics Covered / Goals\r\n- **Intro to Object Oriented Programming**\r\n  - Object Oriented Programming (OOP) is a commonly used design paradigm. Python is an object oriented language, and so OOP is an essential piece of understanding Python.\r\n- **Classes**\r\n  - Classes are structures in code that allow for developers to create more elaborate data types that can better reflect real-world objects\r\n- **Instantiating objects with __init__ and self**\r\n  - Every class in Python should have an __init__ method, which tells python how to construct instances of that class. The instance to be created is referred to as `self`. \r\n- **Instance methods and self**\r\n  - Classes can define methods to be called by instances of that class, which can refer to themselves using the `self` keyword. \r\n- **Dunder Methods**\r\n  - These are special methods that are built-in to use within classes, in Python. \r\n\r\n\r\n## Lesson\r\n**Object Oriented Programming in Python**\r\n- Python is an object-oriented programming language where everything is an object (i.e., booleans, strings, hashes, arrays, integers, everything)\r\n- Objects are data structures that have *attributes* and *methods*. Think of objects as nouns. Most nouns have attributes (adjectives) and methods that it can do (verbs)\r\n  - For example, imagine you have a dog. Every dog has attributes such as breed or color. Every dog also has methods that it can do such as: speack, fetch, or roll over\r\n- Objects are organized by `class`-es. Classes are used to combine how data is represented and methods to manipulate that data\r\n\r\n- Features of OOP:\r\n  - Encapsulation = Data access can be restricted based on needs (covered today)\r\n  - Abstraction = Logic/Complexity is hidden, for simplicity (covered today)\r\n  - Inheritance = Sharing of similar features and attributes (covered Thursday)\r\n  - Polymorphism = Objects can take different forms depending on needs/situation (covered Thursday)\r\n\r\n### Classes Introduction\r\nCreating a class in Python is as simple as the adding the following code:\r\n```python\r\nclass Dog: # this is our class definition\r\n    pass\r\n\r\nfido = Dog() # this is how we create an instance of our Dog class\r\n```\r\n\r\nA class can be viewed as a concept, or blueprint, for some idea. When we turn that concept into reality, we create instances (or objects) of the class. It is important to understand this distinction, and become familiar with the terminology being used: A class definition -vs- an instance of a class. \r\n\r\n### __init__() method\r\nThe first thing we'll talk about is how to initialize a class with some data. Let's add on to our Dog class:\r\n\r\n```python\r\nclass Dog:\r\n\r\n    def __init__(self, name): # this method will be used to intialize our Dog instance\r\n        self.name = name\r\n\r\nfido = Dog(\"Fido\")\r\nprint(fido.name)\r\n```\r\n\r\nYou can add an ```__init__()``` method to your class to allow data to be passed in upon creation of your instance. In our Dog example, we are passing in a ```name``` value and storing it in the instance. We can access the data we've stored in the instance by calling *[instance].[attribute]*, or for our example: ```fido.name```\r\n\r\nThe ```__init__()``` method also allows us to initialize anything else we may need to for our instance. Keep in mind that Python automatically calls our ```__init__()``` method when we create our instance. You should never be calling the ```__init__()``` method yourself! Also, you MUST name your initialization method \"\\_\\_init\\_\\_\" (two leading underscores, \"init\", and two trailing underscores) because Python is looking for this method when our object is being initialized. \r\n\r\nWhat's up with that `self` parameter though? That's a good question... we'll cover that in a moment. \r\n\r\n### Instance Attributes\r\nIn nthe example above, `self.name` is what we call an instance attribute (or instance variable). This is data is belongs to the instance of Dog that is created, and is unique to each instance. In other words, every Dog instance that we create will get it's own name. Let's add a few more instance attributes to our Dog class:\r\n\r\n```python\r\nclass Dog:\r\n\r\n    def __init__(self, name, breed, sound):\r\n        self.name = name\r\n        self.breed = breed\r\n        self.color = color\r\n        self.sound = sound\r\n        \r\n        \r\nfido = Dog(\"Fido\", \"Pointer\", \"white\", \"woof!\")\r\n```\r\n\r\n### Instance Methods\r\nOur Dog class isn't too intersting right now. It currently just stores data for us, allowing us to bundle attributes together in a single object, which is great... but let's make our Dog class a little more exciting by adding in some instance methods.\r\n\r\nKeep in mind our terminology for classes:\r\n- **attributes** are variables specific to a instance\r\n- **methods** are functions that act upon the instance attributes\r\n\r\n```python\r\nclass Dog:\r\n\r\n    def __init__(self, name, breed, color, sound):\r\n        self.name = name\r\n        self.breed = breed\r\n        self.color = color\r\n        self.sound = sound\r\n\r\n    def speak(self): # example of an *instance method*\r\n        print(f\">> {self.sound}\")\r\n        \r\n    def fetch(self, item):\r\n        print(f\">> {self.name} fetched the {item}\")\r\n\r\nfido = Dog(\"Fido\", \"Pointer\", \"white\", \"woof!\")\r\nfido.speak()\r\nfido.fetch(\"ball\")\r\n```\r\n\r\nSome important things to observe about the instance methods we added in the code above:\r\n1. Notice that every instance method (including ```__init__()```) takes in a parameter named \"self\". This parameter is a reference to the instance calling the instance method. Note that we can name this parameter anything that we want to, but by naming standards, always name it \"self\". \r\n2, Notice that we do not (and should not) pass in anything for the value of \"self\" when we call our instance methods (e.g. ```fido.speak()```). Python automatically will pass a reference to the instance for us, and that is why we must provide a \"self\" parameter to all instance methods\r\n3. Notice that we are able to make use of instance attributes (and even other instance methods) via the ```self``` object. \r\n\r\n### Other Dunder methods\r\n\r\nPython classes come with a bunch of built-in methods that we can leverage for our needs. These methods are called \"dunder methods\". The reason they are called dunder methods, is because of the naming syntax that we use, which consists of leading and trailing **d**ouble **under**scores. We already introduced the ```__init__()``` method earlier, which is one (and most often used) dunder method. We won't be covering every dunder method that exists (because there are many!), but you can read up on more of them here: [here](https://www.python-course.eu/python3_magic_methods.php)\r\n\r\nWhat happens if we choose to print out our instance to the terminal?\r\n\r\n```python\r\nfido = Dog(\"Fido\", \"Pointer\", \"woof!\")\r\nprint(fido)\r\n```\r\n\r\nThe output of this shows the type of our object and the memory location where it's being stored on our computer. That's great, but this output isn't really telling us much about our instance. To control what is outputted, we can make use of the ```__str__()``` dunder method:\r\n\r\n```python\r\nclass Dog:\r\n    def __init__(self, name, breed, color, sound):\r\n        self.name = name\r\n        self.breed = breed\r\n        self.color = color\r\n        self.sound = sound\r\n\r\n    def __str__(self):\r\n        return f\"I am a {self.color} {self.breed} dog named {self.name} and I say {self.sound}!\"\r\n\r\n    def speak(self):\r\n        print(f\">> {self.sound}\")\r\n        \r\n    def fetch(self, item):\r\n        print(f\">> {self.name} fetched the {item}\")\r\n\r\nfido = Dog(\"Fido\", \"Pointer\", \"white\", \"woof!\")\r\nprint(fido) # this is a much more descriptive output! This text comes from the __str__() instance method\r\n\r\nlassie = Dog(\"Lassie\", \"Collie\", \"golden\", \"ruff!\")\r\nprint(lassie)\r\n```\r\n\r\nDunder methods are not generally meant to be called directly by our code. Python automatically will call the appropriate dunder methods for us, depending on the operation being performed.\r\n\r\n\r\n## Assignments\r\n- [Contact List](https://github.com/quebecplatoon/oop-contact-list) in Python\r\n- [App Users I](https://github.com/quebecplatoon/oop-app-users-i) in Python\r\n- [Guessing Game](https://github.com/quebecplatoon/oop-guessing-game) in Python"
    }
  },
  {
    "model": "app.lesson",
    "pk": 13,
    "fields": {
      "topic": 1,
      "title": "Javascript Prototypes vs Classes",
      "description": "Few programmers truly embrace prototype-based programming, and neither will we. We will use JS prototypes to recreate OOP.\r\nThe this keyword in javascript\r\nthe global object (window in the browser vs global in node)\r\nUsing the function keyword vs arrow functions\r\nCall/apply/bind (Very brief explanation)\r\nObject Oriented Programming in Javascript\r\nThe new keyword and constructor functions\r\nAdding instance methods to the prototpye\r\nThe classkeyword (syntactic sugar)",
      "lesson_file_path": "week-02/2022-02-08.md",
      "img_url": null,
      "date": "2022-05-08",
      "start_time": "2022-05-08T09:00:00Z",
      "stop_time": "2022-05-08T12:00:00Z",
      "markdown": "# Tuesday, February 08, 2022\r\n\r\n## Topics Covered / Goals\r\n- Few programmers truly embrace prototype-based programming, and neither will we. We will use JS prototypes to recreate OOP.\r\n- The `this` keyword in javascript\r\n    - the global object (`window` in the browser vs `global` in node)\r\n    - Using the `function` keyword vs arrow functions\r\n    - Call/apply/bind (Very brief explanation)\r\n- Object Oriented Programming in Javascript\r\n    - The `new` keyword and constructor functions\r\n    - Adding instance methods to the prototpye\r\n    - The `class`keyword (syntactic sugar)\r\n\r\n\r\n## Lesson\r\n\r\n### Prototypes vs Classes\r\n> In javascript, we don't actually have proper OOP classes like in most programming languages. Instead of classes, javascript has PROTOTYPES, which can be used to define the shared behavior of a group of objects, similarly to classes. Prototypes in javascript have some unique benefits when compared with classes in other languages, but we will not be exploring the ways that prototypes are better than or different from classes. Instead, we will learn how to recreate OOP in javascript using the tools that are available to use. \r\n\r\n### The `this` keyword\r\n> Before learning about OOP or prototypes in javascript, first we need to understand how the `this` keyword works in javascript. It's mostly the same as using `self` in python, but `this` in javascript actually has uses outside of OOP, so let's see that first. In general, when you see `this` inside of a `function(){}`, `this` refers to the object that the function is attached to. Note that fat-arrow functions `()=>{}` do not rebind the value of `this`. Only regular functions defined with the `function` keyword will affect the value of `this`. This is the primary difference between traditional functions and fat-arrow functions. \r\n\r\n```javascript\r\n// `this` is not attached to any object, so it refers to the window in browser js, or {} in node. either way, it's not what you want\r\nconsole.log(this)\r\n\r\n// This is the simplest way to use `this`. `this` appears in the function `sayHello`, which is attached to the `alice` object, so the value of `this.name` in this case would be alice.name === 'alice'\r\nconst alice = {\r\n    name: 'alice',\r\n    sayHello: function(){\r\n        console.log(`Hello, my name is ${this.name}`)\r\n    }\r\n}\r\n\r\nalice.sayHello()\r\n\r\n// arrow functions do not rebind `this`.\r\n// `this` in this function still refers to the window. not very useful. \r\nconst bob = {\r\n    name: 'bob',\r\n    sayHello: ()=>{\r\n        console.log(`My name is ${this.name}`)\r\n    }\r\n}\r\n\r\nbob.sayHello()\r\n\r\n// `this` appears in a setTimeout callback, which is not attached to any object,\r\n// so `this` will refer to the window. \r\n// It doesn't matter that `sayHello` is attached to the carol object, \r\n// because the actual function that contains `this` is not attached to any object\r\nconst carol = {\r\n    name: 'carol',\r\n    sayHello: function(){\r\n        setTimeout(function(){\r\n            console.log(`My name is ${this.name}`)\r\n        })\r\n    }\r\n}\r\n\r\ncarol.sayHello()\r\n\r\n// `this` appears in a ()=>{} function, which doesn't affect `this`.\r\n// We'll have to look for the closest function(){} that contains `this`, which is `sayHello`\r\n// `sayHello` is attached to the dan object, so `this.name` refers to dan.name. \r\nconst dan = {\r\n    name: 'dan',\r\n    sayHello: function(){\r\n        setTimeout(()=>{\r\n            console.log(`My name is ${this.name}`)\r\n       }, 100)\r\n    }\r\n}\r\n\r\ndan.sayHello()\r\n\r\n// the value of `this` depends on how the function is CALLED, not how it is DEFINED\r\nconst sayHello = function(){\r\n    console.log(this.name)\r\n}\r\n\r\n// this.name is undefined or empty string, depending on the environment\r\nsayHello()\r\n\r\nconst eve = {\r\n    name: 'eve',\r\n    sayHello: sayHello,\r\n}\r\n\r\n// in this case, `this` refers to the eve object, so `this.name` is 'eve', \r\neve.sayHello()\r\n```\r\n\r\n### Controlling the value of `this` with `call`, `apply`, and `bind`\r\n> We just saw the normal, default behavior of `this` in javascript. However, there are some ways that you can force `this` to have a specific value. All functions in javascript have three methods that affect the value of `this` (functions in javascript are also objects, and therefore can have other functions attached to them). You likely won't be using these methods often, so we'll cover them briefly, but it's important that you're aware that this is possible in javascript.\r\n\r\n> `Call()` and `apply()` are similar. They let you CALL a function with a specific value for `this`. `call` takes the same arguments as the original function, except that the first argument must be the new value for `this`, and all of the normal arguments are passed after it, offset by 1. \r\n\r\n```javascript\r\nconst greet = function(otherPerson){\r\n    console.log(`Hello, ${otherPerson}, I'm ${this.name}.`)\r\n}\r\n\r\n// `this.name` is not defined, because our function is not attached to any object when we call it\r\ngreet('Alice')\r\n\r\nconst bob = { name: 'bob' }\r\n\r\n// instead of calling `greet` normally, we call the `call` method on it. \r\n// first we pass in `bob` as our new `this`, and then we pass in other arguments afterwards.\r\n// normally 'otherPerson' would be the first argument, but all the arguments get pushed back one space, because the first argument is now our new `this` value.\r\ngreet.call(bob, 'Alice')\r\n\r\n// apply is almost the same as call, but the original arguments are passed as a single array,  instead of multiple comma separated items\r\ngreet.apply(bob, ['Alice'])\r\n\r\nconst numbers = [1,5,9,11,17,9]\r\n// Math.max is a bit awkward because it requires a comma separated list, instead of an array.\r\n// we can use Math.max.apply to make it work with an array, which is generally more useful.\r\n// the value of `this` doesn't matter in this case, so we just pass null.\r\nMath.max.apply(null, numbers)\r\n\r\n// using modern javascript, this same problem can be solved using the spread syntax\r\nMath.max(...numbers)\r\n```\r\n\r\n> `bind()` is a little different from `call()` and `apply()`. `bind()` does not immediately call your function, but instead it creates a new function, in which the value of `this` has been permanently set.\r\n\r\n```javascript\r\n// creates a new function in which `this` permanently has the value of `bob`, no matter how the function is called\r\nconst greetingFromBob = greet.bind(bob)\r\ngreetingFromBob('Alice')\r\n```\r\n\r\n> It's unlikely that you'll need to use call, apply, or bind in your own code. However, you will often have to write functions that use `this` in order to use a larger framework, like react. It's important to understand that the framework might use call, apply, or bind to change the value of `this` in your function when it is called, so you need to read the documentation for your framework to know what `this` is supposed to refer to. \r\n\r\n\r\n### The `new` keyword\r\n> In javascript, we don't use a `class` keyword for creating classes. Instead, we just use normal functions. However, if we want to use a function as a constructor for an OOP class, we call it differently, by adding the `new` keyword. This slightly changes how the function executes. \r\n\r\n```javascript\r\n// we're pretending this is a class, so we named it with a capital letter\r\nconst Person = function(name){\r\n    // const this = {}\r\n    this.name = name\r\n\r\n    // return this\r\n}\r\n\r\nconst alice = new Person('Alice')\r\n```\r\n\r\n> When we use the `new` keyword, `this` inside the function refers to a new object, which is automatically returned at the end of the function. We can define instance attributes by adding properties to `this`. We can also add methods this way, but that's not the most efficient option. If we had 1,000 objects, they would all have a copy of the same method. Instead, we will use prototypes to define methods that all instances of this class have access to. If you try to call a method that does not exist on an object, javascript will check that object's constructor's prototype, and see if the method exists there. \r\n\r\n```javascript\r\nPerson.prototype.sayHello = function(){\r\n    console.log(`Hello, my name is ${this.name}.`)\r\n}\r\n\r\nalice.sayHello()\r\n```\r\n\r\n### The `class` keyword\r\n> In modern javascript, we have the option of using the `class` keyword to set up our prototypes. This is not an entirely new feature, it's simply a cleaner, more elegant way of writing constructor functions. This is sometimes called 'syntactic sugar' because it provides us a new syntax that is enjoyable to use, but doesn't actually provide any new features. Let's recreate the above `Person` class using javascript's class keyword. \r\n\r\n```javascript\r\nclass Person {\r\n    constructor(name){\r\n        this.name = name\r\n    }\r\n    sayHello(){\r\n        console.log(`Hello, my name is ${this.name}.`)\r\n    }\r\n}\r\n\r\n// using the class keyword has no effect on how we instantiate objects from our constructor,\r\n// or how we call methods from our instances. \r\nconst bob = new Person('Bob')\r\nbob.sayHello()\r\n```\r\n\r\n> When writing modern javascript, there are several reasons to prefer using the `class` keyword instead of explicitly modifying prototypes. Using the `class` keyword lets you write OOP code that is similar to what you would write in most other languages, and it more accurately describes our intentions: we want a class, with a constructor function, and instance methods. Also, using prototypes is a little ugly because your class is defined across multiple code blocks, for the constructor function and also the prototype methods, whereas when you use the `class` keyword, the entire class is stored in the `class` block. HOWEVER, you still need to understand how prototypes work. If you write an object-oriented javascript program, and it's not behaving how you expect it to, there will be no classes for you to inspect. You'll need to debug your prototypes.\r\n\r\n## Assignments\r\n- [App Users II](https://github.com/quebecplatoon/oop-app-users-ii) in Python\r\n- [Stock Picker](https://github.com/quebecplatoon/algo-stock-picker) in JS/Python\r\n- [Pig Latin](https://github.com/quebecplatoon/algo-pig-latin) in JS/Python"
    }
  },
  {
    "model": "app.lesson",
    "pk": 14,
    "fields": {
      "topic": 7,
      "title": "Intermediate Object Oriented Programming",
      "description": "Intermediate Object Oriented Programming\r\nMuch of the value of OOP comes from calling instance methods on an object, which can refer to that object's specific data using self or this. However, there are other aspects of OOP that can be useful as well, such as, class methods, getters and setters.\r\nDecorators in Python\r\nDecorators are functions in Python that are used to modify how another function behaves. They aren't inherently related to OOP, but we'll start seeing them as we dive deeper into Python, so now is a good time to learn about them.\r\nInstance Attributes -vs- Class Attributes\r\nUnderstanding the different types of variables to use with Classes is important for encapsulating your data, so that data is available only where it needs to be.\r\nInstance Methods -vs- Class Methods -vs- Static Methods\r\nUnderstanding the different types of methods to use with Classes is important for encapsulating your data, so that data is available only where it needs to be.\r\nGetters and Setters\r\nProvide encapsulation for data in instances of our class, by separating the interface to our data from its internal representation.",
      "lesson_file_path": "week-02/2022-02-09.md",
      "img_url": null,
      "date": "2022-05-09",
      "start_time": "2022-05-09T09:00:00Z",
      "stop_time": "2022-05-09T12:00:00Z",
      "markdown": "# Wednesday, February 09, 2022\r\n\r\n## Topics Covered / Goals\r\n- **Intermediate Object Oriented Programming**\r\n  - Much of the value of OOP comes from calling instance methods on an object, which can refer to that object's specific data using `self` or `this`. However, there are other aspects of OOP that can be useful as well, such as, class methods, getters and setters. \r\n- **Decorators in Python**\r\n  - Decorators are functions in Python that are used to modify how another function behaves. They aren't inherently related to OOP, but we'll start seeing them as we dive deeper into Python, so now is a good time to learn about them. \r\n- **Instance Attributes -vs- Class Attributes**\r\n  - Understanding the different types of variables to use with Classes is important for encapsulating your data, so that data is available only where it needs to be.\r\n- **Instance Methods -vs- Class Methods -vs- Static Methods**\r\n  - Understanding the different types of methods to use with Classes is important for encapsulating your data, so that data is available only where it needs to be.\r\n- **Getters and Setters**\r\n  - Provide encapsulation for data in instances of our class, by separating the interface to our data from its internal representation.\r\n\r\n\r\n## Lesson\r\n\r\n\r\n### Decorators\r\nPython decorators are functions that allow us to modify the behavior of another function when that function is defined. It's not essential that you use decorators in your own code, but many python libraries and frameworks use decorators, so it's good to understand how they work.\r\n\r\nLike many programming languages, Python has first-class functions. This means that functions in Python can accept other functions as inputs, and return functions as output.\r\n\r\n```python\r\n# this function does not make widgets. it makes functions that create widgets\r\ndef WidgetMakerMaker(widget_color):\r\n\r\n    # this function actually makes widgets\r\n    def WidgetMaker():\r\n        return {\r\n            'type': 'widget',\r\n            'color': widget_color,\r\n        }\r\n    \r\n    # return the function we just created, so it can be used outside of WidgetMakerMaker\r\n    return WidgetMaker\r\n\r\nRedWidgetMaker = WidgetMakerMaker('red')\r\nred_widget = RedWidgetMaker()\r\nanother_red_widget = RedWidgetMaker()\r\n\r\nBlueWidgetMaker = WidgetMakerMaker('blue')\r\nblue_widget = BlueWidgetMaker()\r\nanother_blue_widget = BlueWidgetMaker()\r\n```\r\n\r\nA function that defines other functions can be useful if you have some logic that is repeated in many functions, but you don't want to write redundant code. For example, let's say we're trying to improve the performance of a slow application, so we want to print the time when every function is called to better understand what's taking so long.\r\n\r\n```python\r\nfrom datetime import datetime\r\n\r\ndef AddOne(num):\r\n    return num + 1\r\n\r\ndef MultiplyByTwo(num):\r\n    return num * 2\r\n\r\n# This function accepts a function as input, then returns a new function that behaves similarly to the one that is passed in\r\ndef PrintCurrentTimeAndAlso(func):\r\n\r\n    # this function accepts any number of positional arguments (*args) and any number of named arguments (**kwargs)\r\n    def WrapperFunction(*args, **kwargs):\r\n        print(f'Calling {func.__name__} at {datetime.now()}')\r\n        return func(*args, **kwargs)\r\n\r\n    return WrapperFunction\r\n\r\n# This creates a new, decorated function\r\nPrintCurrentTimeAndAlsoAddOne = PrintCurrentTimeAndAlso(AddOne)\r\none_plus_one = PrintCurrentTimeAndAlsoAddOne(1)\r\n\r\n\r\n# This creates a new, decorated function\r\nPrintCurrentTimeAndAlsoMultiplyByTwo = PrintCurrentTimeAndAlso(MultiplyByTwo)\r\ntwo_times_two = PrintCurrentTimeAndAlsoMultiplyByTwo(2)\r\n\r\n# Using the decorator syntax (@) allows us to create a decorated function all at once,\r\n# instead of creating an undecorated function, and then passing it into the decorator\r\n@PrintCurrentTimeAndAlso\r\ndef SubtractThree(num):\r\n    return num - 3\r\n\r\nnine_minus_three = SubtractThree(9)\r\n```\r\n\r\n\r\n### Instance Attributes -vs- Class Attributes\r\n- Instance attributes are variables that are unique to each instance of a class that is created (e.g. name)\r\n- Class attributes are variables that are shared between EVERY instance of a class that are created (e.g. dog species)\r\n\r\nLet's add some class attributes to our previous Dog class example: \r\n\r\n```python\r\nclass Dog:\r\n    species = \"Canis Lupus Familiaris\" # all dogs have the same species type => *class attribute*\r\n    legs = 4\r\n\r\n    def __init__(self, name, breed, color, sound):\r\n        self.name = name # each dog has a unique name => *instance attribute*\r\n        self.breed = breed\r\n        self.color = color\r\n        self.sound = sound\r\n\r\nfido = Dog(\"Fido\", \"Pointer\", \"white\", \"woof!\")\r\nprint(fido.name)\r\nprint(fido.species)\r\n\r\nlassie = Dog(\"Scooby\", \"Mutt\", \"Scooby-Dooby-Doo!\")\r\nprint(lassie.name)\r\nprint(lassie.species)\r\n```\r\n\r\n### Instance Methods -vs- Class Methods -vs- Static Methods\r\n\r\nTODO: add content here\r\n\r\n### Getters and Setters\r\n\r\nTODO: add content here\r\n\r\n## External Resources\r\n\r\n## Assignments\r\n- [App Users III](https://github.com/quebecplatoon/oop-app-users-iii) in Python\r\n- [Apple Trees](https://github.com/quebecplatoon/oop-apple-trees)\r\n- [Caesar Cipher](https://github.com/quebecplatoon/algo-caesar-cipher) in JS/Python"
    }
  },
  {
    "model": "app.lesson",
    "pk": 15,
    "fields": {
      "topic": 7,
      "title": "Inheritance in Python",
      "description": "Understand when and why to use inheritance in your code\r\nUnderstand the relationship between child classes and parent classes\r\nInherit classes successfully\r\nUnderstand the use of super in OOP and when to use it\r\nUnderstand different types of multiple inheritance:\r\none parent with multiple children\r\none child with multiple parents",
      "lesson_file_path": "week-02/2022-02-10.md",
      "img_url": null,
      "date": "2022-05-10",
      "start_time": "2022-05-10T09:00:00Z",
      "stop_time": "2022-05-10T12:00:00Z",
      "markdown": "# Thursday, February 10, 2022!\n\n## Topics Covered / Goals\n- Understand when and why to use inheritance in your code\n- Understand the relationship between child classes and parent classes\n- Inherit classes successfully\n- Understand the use of `super` in OOP and when to use it\n- Understand different types of multiple inheritance:\n    - one parent with multiple children\n    - one child with multiple parents\n\n## Lesson\n\n### Inheritance in Python\n> Inheritance is a relationship between two classes, a parent class and a child class (or a superclass and a subclass). Specifically, inheritance helps us model relationships where one class is a subtype of another class. For example, 'a dog is an animal. All dogs are animals, but not all animals are dogs.'\n\n\n```python\nclass Dog:\n    def __init__(self, name):\n        self.name = name\n\n    def eat(self, food):\n        print(f\"{self.name} eats a {food}.\")\n    \n    def bark(self):\n        print(\"BARK BARK!\")\n\nspot = Dog('Spot')\nspot.eat()\n```\n\n> In the example above, we say that every dog has an attribute called `name`. Every dog also has the ability to `eat` and `bark`.\n\n```python\nclass Cat:\n    def __init__(self, name):\n        self.name = name\n\n    def eat(self, food):\n        print(f\"{self.name} eats a {food}.\")\n    \n    def meow(self):\n        print(\"meow meow!\")\n\ngarfield = Cat('Spot')\ngarfield.eat()\n```\n> In the example above, we say that every cat has an attribute called `name`. Every cat also has the ability to `eat` and `meow`. This `Cat` class is pretty similar to our previous `Dog`. This isn't just a coincidence, like how a table and a horse both have four legs. Cats and dogs are both able to eat because they are both types of animals. Using inheritance, we can rewrite the above classes to avoid repeating code.\n\n```python\nclass Animal:\n    def __init__(self,name):\n        self.name = name\n    def eat(self, food):\n        print(f\"{self.name} eats a {food}.\")\n    def speak(self):\n        print(\"I'm an animal!\")\n\nclass Dog(Animal):\n    def speak(self):\n        print(\"BARK BARK!\")\n\n\nclass Cat(Animal):\n    def speak(self):\n        print(\"meow meow!\")\n\nlucky = Cat('lucky')\n# the name attribute and eat method aren't defined on the Cat class, but this works because Cat inherits them from Animal\nlucky.eat('chicken nugget') \n\n```\n> Notice how we passed the `Animal` class to the `Cat` and `Dog` classes. This indicates that `Animal` is a parent class of both `Cat` and `Dog`. As such, `Cat` and `Dog` have access to all of the methods from animal, even `__init__`. This might seem a little unintuitive because the child class is always 'bigger' than the parent. The child class has access to everything in the parent class(`__init__`, `eat`), and then also has its own method `speak`, which overrides `speak` from the parent class.\n\n> Sometimes, we'll want to define a child class that doesn't use the exact same methods as its parent, but we don't want to override it entirely, like we just did with `speak`. We can use the `super()` method to access an instance of the parent class, call any of its methods from the child class, and then add more custom logic afterwards. This is commonly used to repeat the `__init__` method from the parent class, and then add an extra property at the end. For example, a difference between dogs and cats is that a dog can be a registered service animal, whereas a cat cannot.\n\n```python\nclass Animal:\n    def __init__(self,name):\n        self.name = name\n    def eat(self, food):\n        print(f\"{self.name} eats a {food}.\")\n    def speak(self):\n        print(\"I'm an animal!\")\n\nclass Dog(Animal):\n    def __init__(self, name, is_service_animal):\n        # use the logic from the parent Animal class without duplicating code\n        parent_instance = super()\n        parent_instance.__init__(name)\n\n        # add some Dog-specific setup\n        self.is_service_animal = is_service_animal\n\n    def speak(self):\n        print(\"BARK BARK!\")\n\n\nclass Cat(Animal):\n    def speak(self):\n        print(\"meow meow!\")\n\nsparky = Dog('sparky', True)\n```\n> The example above demontrates a common use for inheritance, where you have multiple child classes that share code from a common parent class. Inheritance can also work the other way, where one child class inherits from multiple parent classes. \n\n```python\nimport math\n\nclass Person:\n    def __init__(self, name, job):\n        self.name = name\n        self.job = job\n    def work(self):\n        print(f\"{self.name} is working hard as a {self.job}.\")\n    \nclass Computer:\n    def __init__(self, number_of_cores):\n        self.number_of_cores = number_of_cores\n\n    def compute(self):\n        print(round(math.pi, self.number_of_cores))\n\ntoaster = Computer(1)\ntoaster.compute()\n\ncompy386 = Computer(4)\ncompy386.compute()\n\nclass Cyborg(Person, Computer):\n    def __init__(self, name, job, number_of_cores):\n        Person.__init__(self, name, job)\n        Computer.__init__(self, number_of_cores)\n\n    def work(self):\n        for n in range(self.number_of_cores):\n            Person.work(self)\n\nterminator = Cyborg('Arnold', 'terminator', 8)\nterminator.work()\n```\n\n### Inheritance in Javascript\n> Inheritance in javascript is pretty similar to how it works in Python. Let's recreate one of our previous examples, just so you can see the syntax.\n\n```javascript\nclass Animal {\n    constructor(name){\n        this.name = name\n    }\n    eat(food){\n        console.log(`${this.name} eats a ${food}.`)\n    }\n    speak(){\n        console.log(\"I am an animal!\")\n    }\n}\n\nclass Dog extends Animal {\n    constructor(name, is_service_animal){\n        super(name)\n        this.is_service_animal = is_service_animal\n    }\n    speak(){\n        if ( this.is_service_animal ) {\n            console.log(`My name is ${this.name}, and I'm here to help!`)\n        }\n    }\n}\n\nconst fido = new Dog('fido', true)\nfido.eat('beef')\nfido.speak()\n```\n\n**When to use inheritance**\nUse inheritance to write less code. If you are writing an object oriented program with many classes, check if there are many similarities between your classes that have caused you to write redundant code. If you have two classes that are related (e.g. Animal, Dog), but they don't actually share any redundant code, you don't need inheritance. Verify that those similarities are due to inherent is-a relationships that are unlikely to change. For example, a table and a dog both have four legs, but this is not due to an inherent relationship, and as your program becomes more complex, there will be more differences between tables and dogs, and it will make less sense for them to inherit from a common ancestor (4-legged). If you have multiple classes that share code with each other, where one is inherently a type of the other, or both of them are inherently types of a third thing, consider using inheritance in your program so that you can write less code. \n\n## External Resources\n- [Python super() method](https://realpython.com/python-super/)\n- [Method Resolution Order(MRO)](https://www.educative.io/edpresso/what-is-mro-in-python)\n\n## Assignments\n- [School Interface I](https://github.com/quebecplatoon/oop-school-interface-i)\n- [Word Guess CSV](https://github.com/quebecplatoon/algo-word-guess)\n- [Boggle I](https://github.com/quebecplatoon/oop-boggle-i)\n- Stretch challenge: [Boggle II](https://github.com/quebecplatoon/oop-boggle-ii)\n\n\n"
    }
  },
  {
    "model": "app.lesson",
    "pk": 16,
    "fields": {
      "topic": 12,
      "title": "Review Object Oriented Programming in Python",
      "description": "Review Object Oriented Programming in Python\r\nUnderstand Class Objects, Instance Variables, and Instance Methods",
      "lesson_file_path": "week-02/2022-02-11.md",
      "img_url": null,
      "date": "2022-05-11",
      "start_time": "2022-05-11T09:00:00Z",
      "stop_time": "2022-05-11T12:00:00Z",
      "markdown": "# Friday, February 11, 2022\r\n\r\n## Topics Covered / Goals\r\n- Review Object Oriented Programming in Python\r\n    - Understand Class Objects, Instance Variables, and Instance Methods\r\n\r\n### Lesson\r\n\r\n- Class Objects\r\n\r\n```python\r\nclass Person:\r\n    def __init__(self, first_name, last_name, age):\r\n        self.first_name = first_name\r\n        self.last_name = last_name\r\n        self.age = age\r\n\r\n    def say_hello(self):\r\n        return f\"Hello my name is {self.first_name} {self.last_name} and I'm {self.age} years old.\"\r\n\r\n    def celebrate_birthday(self):\r\n        self.age = self.age + 1\r\n        return f\"Wooo! It's my birthday today! I'm {self.age}!\"\r\n\r\n    def my_age(self):\r\n        return f\"My age is {self.age}.\"\r\n```\r\n\r\n## Assessment\r\n- [Assessment #1](https://github.com/quebecplatoon/assessment-1)\r\n\r\n## Assignments\r\n- [School Interface II](https://github.com/quebecplatoon/oop-school-interface-ii)\r\n- [Budget](https://github.com/quebecplatoon/oop-budget)\r\n- [Bowling](https://github.com/quebecplatoon/oop-bowling)"
    }
  },
  {
    "model": "app.lesson",
    "pk": 17,
    "fields": {
      "topic": 7,
      "title": "Call stack & recursion",
      "description": "Understand what the call stack is and how it operates\r\nUnderstand the difference between a recursive function and an iterative function\r\nImplement recursive solutions to challenges",
      "lesson_file_path": "week-03/2022-02-14.md",
      "img_url": null,
      "date": "2022-05-12",
      "start_time": "2022-05-12T06:00:00Z",
      "stop_time": "2022-05-12T12:00:00Z",
      "markdown": "# Monday, February 14, 2022\r\n\r\n\r\n## Topics Covered / Goals\r\n- Understand what the call stack is and how it operates\r\n- Understand the difference between a recursive function and an iterative function\r\n- Implement recursive solutions to challenges\r\n\r\n## Lesson\r\n\r\n### The Call Stack\r\n- [The Call Stack](https://docs.google.com/presentation/d/123b2TsW6k0OfvBOH4fmVkKUq7xT3WZ1SEWEUBpfnrqc/edit?usp=sharing)\r\n- A stack is a type of data structure, similar to a Python list. The difference is, a stack follows a Last In First Out (LIFO) model.\r\n  - Think of a deck of playing cards. The first card you're able to pick up is the last card added to the top of the deck.\r\n- The Call Stack is what keeps track of functions that are executing. When a function is invoked, it's added to the top of the stack, and removed once it's resolved.\r\n- If another function is beneath the latest one on the Call Stack, it cannot resolve until the top function has finished resolving\r\n```python\r\ndef first():\r\n    print('(PUSH) first function executing...')\r\n    second()\r\n    print('(POP)  first function resolving...')\r\n    return\r\n\r\ndef second():\r\n    print('(PUSH) second function executing...')\r\n    third()\r\n    print('(POP)  second function resolving...')\r\n    return\r\n\r\ndef third():\r\n    print('(PUSH) third function executing...')\r\n    print('Hello World!')\r\n    print('(POP)  third function resolving...')\r\n    return\r\n\r\nfirst()\r\n```\r\n\r\n- The output of this will be...\r\n```\r\n(PUSH) first function executing...\r\n(PUSH) second function executing...\r\n(PUSH) third function executing...\r\nHello World!\r\n(POP)  third function resolving...\r\n(POP)  second function resolving...\r\n(POP)  first function resolving...    \r\n```\r\n...because the first function can't resolve fully until the second function is done executing, and the second function can't fully resolve until the third function is done executing.\r\n\r\n### Recursion\r\n\r\n- [Recursion](../page-resources/recursion.pdf)\r\n- Recursion is what happens when a function invokes itself. Like an iterative loop, it'll keep invoking itself until a certain condition is met\r\n  - The finishing condition for a recursive solution is called a \"base case\", a condition where the function no longer returns itself. Without a base case, a recursive function will run until the Call Stack is completely full. In other words, a Stack Overflow.\r\n- Let's consider a simple linear search function. An iterative solution would use a for loop, like this:\r\n```python\r\ndef linear_search_iterative(my_list, search_item):\r\n    for i in range(len(my_list)_:\r\n        if my_list[i] == search_item:\r\n            return True\r\n\r\n    return False\r\n```\r\n- A recursive solution would need one or more base cases. One of them is obvious: we find the item we're looking for.\r\n  - The other one has to be something that one of our recursions will eventually hit. Perhaps this?\r\n```python\r\ndef linear_search_recursive(my_list, search_item):\r\n    if len(my_list) == 0:\r\n        return False\r\n\r\n    last_item = my_list.pop()\r\n    if last_item == search_item:\r\n        return True\r\n    else:\r\n        return linear_search_recursive(my_list)\r\n\r\n```\r\n- In this solution, `.pop()` removes the last item from the array and returns it. If the last item is a match for our `search_item`, then we can return true. If not, we invoke the function again with the shortened array. Our second base case comes when we empty the array entirely. If the array is empty, the `search_item` is not present at all, so we return false.\r\n- Any problem that can be solved with a loop can also be solved with recursion (and vice versa):\r\n```python\r\n## ------ITERATION\r\ndef space_x_countdown_iterative(num):\r\n    for i in range(num, 0, -1):\r\n        print(i)\r\n    \r\n    return console.log(\"LIFTOFF!\")\r\n\r\n## ------RECURSION\r\ndef space_x_countdown_recursive(num):\r\n    # BASE CASE\r\n    if num == 0:\r\n        return console.log(\"LIFTOFF!\")\r\n\r\n    print(num)\r\n    \r\n    # RECURSIVE CASE\r\n    return space_x_countdown_recursive(num-1)\r\n```\r\n\r\n## External Resources\r\n- [Python Tutor](http://www.pythontutor.com/visualize.html#mode=edit)\r\n  - This tool breaks down code step by step, allowing you to see the Call Stack in real-time.\r\n\r\n## Assignments\r\n- [School Interface III](https://github.com/quebecplatoon/oop-school-interface-iii)\r\n- [Recursion](https://github.com/quebecplatoon/algo-recursion)\r\n- [Binary Search](https://github.com/quebecplatoon/algo-binary-search) in JS/Python"
    }
  },
  {
    "model": "app.lesson",
    "pk": 18,
    "fields": {
      "topic": 7,
      "title": "Regular Expressions (Regex)",
      "description": "Implement Regex methods in Python",
      "lesson_file_path": "week-03/2022-02-15.md",
      "img_url": null,
      "date": "2022-05-13",
      "start_time": "2022-05-13T06:00:00Z",
      "stop_time": "2022-05-13T12:00:00Z",
      "markdown": "# Tuesday, February 15, 2022\r\n\r\n## Topics Covered / Goals\r\n\r\n- Implement Regex methods in Python\r\n\r\n## Lesson\r\n\r\n### Regular Expressions (Regex)\r\n- Regular Expressions, or regex, is the ability to use patterns to match character combinations. While every language has slightly different patterns to match these combinations, they fundamentally work the same\r\n- It basically works like this:\r\n  - A user inputs some text\r\n  - Your compiler, using whatever language you decide, reads that input and pattern-matches it.\r\n  - If it passes, do one thing. If it does not, do something else\r\n- This is useful for something like phone number inputs or social security methods because people are terrible at putting their information into a form\r\n  - For phone numbers, some people use parenthesis, others use periods, others use dashes, and others don't have any delimeters\r\n  - Regex helps with this because they look for consistent patterns. In our case, we just want the numbers associated with a phone number input and to ignore the rest of the characters\r\n- It's recommended for you to use `raw strings` instead of regular Python strings by prepending your string with `r` (e.g., `r(\"Hello\\n\\n\")`). These raw strings will interpret the escaped characters as literally escaped characters, rather than Python's usual treatment of them as new line characters. **Let's get started on this**:\r\n\r\n### Common usecases\r\n- match a literal string\r\n- require at least a certain number of characters (password length)\r\n- validate SSN is valid (may or may not have dashes)\r\n- validate a date is in the correct format\r\n\r\n```python\r\nimport re # stands for Regular Expressions and brings in the Python re library into this file\r\n## re.search() will search a string you pass in to see if it matches the regex pattern you have\r\nstring = 'June 24'\r\nregex_pattern = r\"([a-zA-Z]+) (\\d+)\" # any combination of letters, capital or not, followed by a space, followed by a digit of any length\r\nprint(re.search(regex_pattern, string)) # returns a `match` object with the thing that's matched up. This matches anywhere in the string\r\nprint(re.match(regex_pattern, string)) # same as above, but this matches the string starting from the beginning. only returns the first match\r\nprint(re.findall(regex_pattern, 'June 24 August 1 December 22')) # this returns a list of all matches\r\n```\r\n- Another example:\r\n```python\r\nimport re\r\nregex = r\"[a-zA-Z]+ \\d+\"\r\nmatches = re.findall(regex, \"June 24, August 9, Dec 12\")\r\nfor match in matches:\r\n    print(f\"Full match: {match}\")\r\n\r\n## Find and replace\r\n## replaced_string = re.sub(pattern, replacement_pattern, input_str, count, flags=0)\r\nregex = r\"([a-zA-Z]+) (\\d+)\"\r\n\r\nprint(re.sub(regex, r\"\\2 of \\1\", \"June 24, August 9, Dec 12\")) # 24 of June, 9 of August, 12 of Dec\r\n```\r\n\r\n## External Resources\r\n- [Great Tutorial](https://www.datacamp.com/community/tutorials/python-regular-expression-tutorial)\r\n- [Pythex](https://pythex.org/) Test your Python regex with this online tool.\r\n- [Regex101](https://regex101.com)\r\n- [Oldie but a goodie](https://blog.codinghorror.com/regular-expressions-now-you-have-two-problems/)\r\n- [JS Regex](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\r\n- [Data Camp Python Regex](https://www.datacamp.com/community/tutorials/python-regular-expression-tutorial) and [Learn Python](https://www.learnpython.org/en/Regular_Expressions)\r\n- [Machine Learning Plus Python Regex](https://www.machinelearningplus.com/python/python-regex-tutorial-examples/)\r\n- [Google's writeup on Python Regex](https://developers.google.com/edu/python/regular-expressions)\r\n\r\n## Assignments\r\n- [School Interface IV](https://github.com/quebecplatoon/oop-school-interface-iv)\r\n- [RegexOne](https://regexone.com/python)\r\n- [Phone Numbers](https://github.com/quebecplatoon/algo-validate-phone) in Python Regular Expressions"
    }
  },
  {
    "model": "app.lesson",
    "pk": 19,
    "fields": {
      "topic": 7,
      "title": "Algorithmic efficiency",
      "description": "Understand algorithmic efficiency\r\nKnow how to read and write notation for runtime complexity\r\nTake some simple steps to avoid writing inefficient code",
      "lesson_file_path": "week-03/2022-02-16.md",
      "img_url": null,
      "date": "2022-05-14",
      "start_time": "2022-05-14T12:00:00Z",
      "stop_time": "2022-05-14T12:00:00Z",
      "markdown": "# Wednesday, February 16, 2022\r\n\r\n\r\n## Topics Covered / Goals\r\n- Understand algorithmic efficiency\r\n- Know how to read and write notation for runtime complexity\r\n- Take some simple steps to avoid writing inefficient code\r\n\r\n## Lesson\r\nBig-O (\"big O\") notation is used in programming to describe the relative performance of a given algorithm. Note that it is not used to describe how much time a algorithm or program will take to run, but rather how it'll be affected by the change in input size. Programmers are generally are concerned with how much time an algorithm takes to run based on the input size, as well as how much memory it might require to utilize. However, time efficiency is usually what we are focused on improving. \r\n\r\n\r\n### Time Complexities\r\nHere are some common complexities that you'll encounter:\r\n\r\n| Notation | Complexity | Summary | Description |\r\n| -------- | ---------- | ------- | ----------- |\r\n| O(1) | Constant Time | Instant | The relative runtime does not change relative to the input size increasing |\r\n| O(log N) | Logarithmic Time | Quick | The relative runtime increases slowly relative to the input size increasing |\r\n| O(N) | Linear Time | Proportional | The relative runtime increases proportionally relative to the input size increasing |\r\n| O(N log N) | Log-Linear Time | Slow | The relative runtime increases quickly relative to the input size increasing |\r\n| O(N^2) | Quadratic Time | Very Slow | The relative runtime increases quadratically relative to the input size increasing |\r\n| O(2^N) | Exponential Time | Ridiculously Slow | The relative runtime increases exponentially relative to the input size increasing |\r\n\r\nLet's take a look at some simple examples below:\r\n\r\nO(1): Constant Time\r\n```python\r\nsmall_list = [4, 9, 5, 12, 2] # 5 items\r\nlarge_list = [6, 10, 9, 7, 1, 8, 17, 3, 13] # 10 items\r\n\r\ndef append_to_list(my_list, new_item):\r\n    my_list.append(new_item)\r\n\r\nappend_to_list(small_list, 77) # just adds on to end, not impacted by size of list\r\nappend_to_list(large_list, 77) # just adds on to end, not impacted by size of list\r\n```\r\n\r\nO(log N): Logarithmic Time\r\n[Binary Search](https://github.com/quebecplatoon/algo-binary-search)\r\n\r\nO(N): Linear Time\r\n```python\r\nsmall_list = [4, 9, 5, 12, 2] # 5 items\r\nlarge_list = [6, 10, 9, 7, 1, 8, 17, 3, 13] # 10 items\r\n\r\ndef find_item_greater_exists(my_list, value):\r\n    for item in my_list: # ...factor of N\r\n        if item > value:\r\n            return True\r\n\r\n    return False\r\n\r\nfind_item_greater_exists(small_list, 10) # may take up to 5 iterations\r\nfind_item_greater_exists(large_list, 10) # may take up to 10 iterations\r\n```\r\n\r\nO(N^2): Quadratic Time\r\n```python\r\nsmall_list = [4, 9, 5, 12, 2] # 5 items\r\nlarge_list = [6, 10, 9, 7, 1, 8, 17, 3, 13] # 10 items\r\n\r\ndef find_double_exists(my_list):\r\n    for x in my_list: # ...factor of N\r\n        for y in my_list: # ...factor of N => N * N\r\n            if x * 2 == y:\r\n                return True\r\n\r\n    return True\r\n\r\nfind_double_exists(small_list) # may take up to 25 (5*5) iterations\r\nfind_double_exists(large_list) # may take up to 100 (10*10) iterations\r\n```\r\n\r\nO(2^N): Exponential Time\r\n```python\r\ncalls = 0\r\ndef fibonacci_recursive(N):\r\n    global calls\r\n    calls += 1\r\n\r\n    if N == 0:\r\n        return 0\r\n    elif N == 1:\r\n        return 1\r\n\r\n    return fibonacci_recursive(N - 1) + fibonacci_recursive(N - 2)\r\n    \r\n# 0, 1, 1, 2, 3, 5, 8, 13 ...\r\nf_index = 6\r\nprint(\"fib index:\", f_index)\r\nprint(\"fib value:\", fibonacci_recursive(f_index))\r\nprint(\"total calls:\", calls, \"\\n\") \r\n\r\nf_index = 12\r\nprint(\"fib index:\", f_index)\r\nprint(\"fib value:\", fibonacci_recursive(f_index))\r\nprint(\"total calls:\", calls, \"\\n\") # the number of calls grows very quick as the f_index gets larger\r\n```\r\n\r\nHere's a great site to reference (with a useful chart) for algorithmic complexities: https://www.bigocheatsheet.com/\r\n\r\n### Making Improvements\r\n\r\nAnything that is O(N^2) or worse, is considered a bad algorithm in terms of time complexity. Sometimes, there's nothing that we can do about this, because we must solve a problem based on what it requires. Oftentimes though, we can make improvements/optimizations, that might not change our overall complexity, but improve our performance:\r\n\r\n```python\r\ndef find_double_exists(my_list):\r\n    for x in my_list: # ...factor of N\r\n        for y in my_list: # ...factor of N => N * N\r\n            if x * 2 == y or x == y * 2: # an improvement, but this algo is still O(N^2)\r\n                return True\r\n\r\n    return True\r\n```\r\n\r\nOther times, we may be able to refactor our algorithm entirely to improve our time complexity:\r\n```python\r\n# a better (more efficient) fibonacci function (non-recursive) ... O(N)!\r\ndef fibonacci(N):\r\n    f = 0\r\n    a = 0\r\n    b = 1\r\n\r\n    for _ in range(N-1):\r\n        f = a + b\r\n        a = b\r\n        b = f\r\n\r\n    return f\r\n```\r\n\r\nGoing from our naive recursive solution to an iterative one for Fibanacci, we've changed our time complexity from O(2^N) (i.e. \"terrible\") to be O(N)!\r\n\r\n### More Examples\r\n\r\nCan you analyze the code snippets below and determine what their relative time complexities are?\r\n\r\nExample 1:\r\n```python\r\ndef example_1(my_list):\r\n    total = 0\r\n    for x in my_list:\r\n        value = x ** 2\r\n        if value > 20:\r\n            for y in my_list:\r\n                if y > 0:\r\n                    total += y + value\r\n    return total\r\n```\r\n\r\nExample 2:\r\n```python\r\ndef example_2(my_list):\r\n    for item in my_list:\r\n        counter = my_list.count(item)\r\n        if counter > 2:\r\n            return True\r\n\r\n    return False\r\n```\r\n\r\nExample 3:\r\n```python\r\ndef example_3(my_list):\r\n    yummy_list = [\"donut\", \"cake\", \"pie\", \"muffin\"]\r\n\r\n    food_list = []\r\n    for item in my_list:\r\n        if isinstance(item, str):\r\n            food_list.append(item)\r\n\r\n    yummy_count = 0\r\n    for food in food_list:\r\n        for yummy in yummy_list:\r\n            if food == yummy:\r\n                yummy_count += 1\r\n\r\n    return yummy_count\r\n```\r\n\r\n## Resources\r\n**Big O Notation**\r\n- [Big O Slides](https://docs.google.com/presentation/d/1RNYAhAkNF3-UR9rzlBOaWJ0fyYundS0TAGXEYRv-Ybo/edit#slide=id.g22ef87eb09_0_23)\r\n- [More Big O Slides](../page-resources/Big_O_Notation.pdf)\r\n\r\n## Assignments\r\n- [Big O Problems 1](https://github.com/quebecplatoon/algo-big-o-i)\r\n- [Big O Problems 2](https://github.com/quebecplatoon/algo-big-o-ii)\r\n- [Bubble Sort](https://github.com/quebecplatoon/algo-bubble-sort) in JS/python"
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 17,
    "fields": {
      "lesson": 7,
      "url": "https://github.com/quebecplatoon/algo-99-bottles",
      "description": "99 Bottles in JS",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 18,
    "fields": {
      "lesson": 7,
      "url": "https://github.com/quebecplatoon/algo-deaf-grandma",
      "description": "Deaf Grandma in JS",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 19,
    "fields": {
      "lesson": 7,
      "url": "https://github.com/quebecplatoon/misc-command-line",
      "description": "Terminal Commands In Depth",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 20,
    "fields": {
      "lesson": 8,
      "url": "https://github.com/quebecplatoon/algo-roman-numerals",
      "description": "Roman Numerals in JS",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 21,
    "fields": {
      "lesson": 8,
      "url": "http://learngitbranching.js.org/",
      "description": "Git Practice",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 22,
    "fields": {
      "lesson": 8,
      "url": "https://github.com/quebecplatoon/algo-factorial",
      "description": "Factorial in JS",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 23,
    "fields": {
      "lesson": 8,
      "url": "https://github.com/quebecplatoon/algo-fibonacci",
      "description": "Fibonacci in JS",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 24,
    "fields": {
      "lesson": 8,
      "url": "https://github.com/quebecplatoon/algo-linear-search",
      "description": "Linear Search in JS",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 25,
    "fields": {
      "lesson": 8,
      "url": "https://education.github.com/git-cheat-sheet-education.pdf",
      "description": "Cheatsheet",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 26,
    "fields": {
      "lesson": 8,
      "url": "https://github.com/quebecplatoon/git-resource",
      "description": "Git Resource",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 27,
    "fields": {
      "lesson": 8,
      "url": "https://github.com/quebecplatoon/curriculum/blob/master/page-resources/javascript_control_flow.pdf",
      "description": "control flow, if/else, loops, etc",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 28,
    "fields": {
      "lesson": 9,
      "url": "https://github.com/quebecplatoon/curriculum/blob/master/page-resources/python_fundamentals.md",
      "description": "Python Fundamentals",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 29,
    "fields": {
      "lesson": 9,
      "url": "https://github.com/quebecplatoon/algo-99-Bottles",
      "description": "99 Bottles in Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 30,
    "fields": {
      "lesson": 9,
      "url": "https://github.com/quebecplatoon/algo-deaf-grandma",
      "description": "Deaf Grandma in Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 31,
    "fields": {
      "lesson": 9,
      "url": "https://github.com/quebecplatoon/algo-roman-numerals",
      "description": "Roman Numerals in Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 32,
    "fields": {
      "lesson": 9,
      "url": "https://github.com/quebecplatoon/algo-fibonacci",
      "description": "Fibonacci in Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 33,
    "fields": {
      "lesson": 9,
      "url": "https://github.com/quebecplatoon/algo-factorial",
      "description": "Factorial in Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 34,
    "fields": {
      "lesson": 9,
      "url": "https://github.com/quebecplatoon/algo-linear-search",
      "description": "Linear Search in Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 35,
    "fields": {
      "lesson": 10,
      "url": "https://realpython.com/python-vs-javascript/#javascript-vs-python",
      "description": "Python vs. JavaScript",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 36,
    "fields": {
      "lesson": 10,
      "url": "https://www.tutorialspoint.com/python/python_modules.htm",
      "description": "Python Modules",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 37,
    "fields": {
      "lesson": 10,
      "url": "https://github.com/quebecplatoon/algo-armstrong-numbers",
      "description": "Armstrong Numbers in JS/Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 38,
    "fields": {
      "lesson": 10,
      "url": "https://github.com/quebecplatoon/algo-sum-pairs",
      "description": "Sum Pairs in JS/Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 39,
    "fields": {
      "lesson": 10,
      "url": "https://github.com/quebecplatoon/algo-credit-check",
      "description": "Credit Check in JS/Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 40,
    "fields": {
      "lesson": 10,
      "url": "https://github.com/quebecplatoon/algo-anagrams-i",
      "description": "Anagrams I in JS/Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 41,
    "fields": {
      "lesson": 10,
      "url": "https://github.com/quebecplatoon/algo-debugging-one",
      "description": "Debugging One",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 42,
    "fields": {
      "lesson": 10,
      "url": "https://pythontips.com/2013/07/30/20-python-libraries-you-cant-live-without/",
      "description": "Useful libraries",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 43,
    "fields": {
      "lesson": 11,
      "url": "https://github.com/quebecplatoon/git-pair",
      "description": "Practice with a Pair",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 44,
    "fields": {
      "lesson": 11,
      "url": "https://github.com/quebecplatoon/algo-anagrams-ii",
      "description": "Anagrams II in JS/Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 45,
    "fields": {
      "lesson": 11,
      "url": "https://github.com/quebecplatoon/algo-character-count",
      "description": "Character Count",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 46,
    "fields": {
      "lesson": 11,
      "url": "https://github.com/quebecplatoon/algo-palindromes",
      "description": "Palindromes",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 47,
    "fields": {
      "lesson": 11,
      "url": "https://github.com/quebecplatoon/algo-calculate-mode",
      "description": "Calculate Mode",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 48,
    "fields": {
      "lesson": 11,
      "url": "https://github.com/quebecplatoon/algo-pad-array",
      "description": "Pad an Array",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 49,
    "fields": {
      "lesson": 11,
      "url": "https://github.com/quebecplatoon/algo-balanced-parentheses",
      "description": "Balanced Parentheses",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 50,
    "fields": {
      "lesson": 9,
      "url": "http://www.google.com",
      "description": null,
      "originator": null,
      "link_type": 3
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 51,
    "fields": {
      "lesson": 12,
      "url": "https://github.com/quebecplatoon/oop-contact-list",
      "description": "Contact List",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 52,
    "fields": {
      "lesson": 12,
      "url": "https://github.com/quebecplatoon/oop-app-users-i",
      "description": "App Users I in Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 53,
    "fields": {
      "lesson": 12,
      "url": "https://github.com/quebecplatoon/oop-guessing-game",
      "description": "Guessing Game in Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 54,
    "fields": {
      "lesson": 13,
      "url": "https://github.com/quebecplatoon/oop-app-users-ii",
      "description": "App Users II in Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 55,
    "fields": {
      "lesson": 13,
      "url": "https://github.com/quebecplatoon/algo-stock-picker",
      "description": "Stock Picker in JS/Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 56,
    "fields": {
      "lesson": 13,
      "url": "https://github.com/quebecplatoon/algo-pig-latin",
      "description": "Pig Latin in JS/Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 57,
    "fields": {
      "lesson": 14,
      "url": "https://github.com/quebecplatoon/oop-app-users-iii",
      "description": "App Users III in Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 58,
    "fields": {
      "lesson": 14,
      "url": "https://github.com/quebecplatoon/oop-apple-trees",
      "description": "Apple Trees",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 59,
    "fields": {
      "lesson": 14,
      "url": "https://github.com/quebecplatoon/algo-caesar-cipher",
      "description": "Caesar Cipher in JS/Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 60,
    "fields": {
      "lesson": 15,
      "url": "https://realpython.com/python-super/",
      "description": "Python super() method",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 61,
    "fields": {
      "lesson": 15,
      "url": "https://www.educative.io/edpresso/what-is-mro-in-python",
      "description": "Method Resolution Order(MRO)",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 62,
    "fields": {
      "lesson": 15,
      "url": "https://github.com/quebecplatoon/oop-school-interface-i",
      "description": "School Interface I",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 63,
    "fields": {
      "lesson": 15,
      "url": "https://github.com/quebecplatoon/algo-word-guess",
      "description": "Word Guess CSV",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 64,
    "fields": {
      "lesson": 15,
      "url": "https://github.com/quebecplatoon/oop-boggle-i",
      "description": "Boggle I",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 65,
    "fields": {
      "lesson": 15,
      "url": "https://github.com/quebecplatoon/oop-boggle-ii",
      "description": "Stretch challenge: Boggle II",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 66,
    "fields": {
      "lesson": 16,
      "url": "https://github.com/quebecplatoon/assessment-1",
      "description": "Assessment #1",
      "originator": null,
      "link_type": 2
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 67,
    "fields": {
      "lesson": 16,
      "url": "https://github.com/quebecplatoon/oop-school-interface-ii",
      "description": "School Interface II",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 68,
    "fields": {
      "lesson": 16,
      "url": "https://github.com/quebecplatoon/oop-budget",
      "description": "Budget",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 69,
    "fields": {
      "lesson": 16,
      "url": "https://github.com/quebecplatoon/oop-bowling",
      "description": "Bowling",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 70,
    "fields": {
      "lesson": 17,
      "url": "http://www.pythontutor.com/visualize.html#mode=edit",
      "description": "Python Tutor",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 71,
    "fields": {
      "lesson": 17,
      "url": "https://github.com/quebecplatoon/oop-school-interface-iii",
      "description": "School Interface III",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 72,
    "fields": {
      "lesson": 17,
      "url": "https://github.com/quebecplatoon/algo-recursion",
      "description": "Recursion",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 73,
    "fields": {
      "lesson": 17,
      "url": "https://github.com/quebecplatoon/algo-binary-search",
      "description": "Binary Search in JS/Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 74,
    "fields": {
      "lesson": 18,
      "url": "https://pythex.org/",
      "description": "Test your Python regex",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 75,
    "fields": {
      "lesson": 18,
      "url": "https://www.datacamp.com/community/tutorials/python-regular-expression-tutorial",
      "description": "Great Tutorial",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 76,
    "fields": {
      "lesson": 18,
      "url": "https://github.com/quebecplatoon/oop-school-interface-iv",
      "description": "School Interface IV",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 77,
    "fields": {
      "lesson": 18,
      "url": "https://regexone.com/python",
      "description": "RegexOne",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 78,
    "fields": {
      "lesson": 18,
      "url": "https://github.com/quebecplatoon/algo-validate-phone",
      "description": "Phone Numbers regex",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 79,
    "fields": {
      "lesson": 19,
      "url": "https://docs.google.com/presentation/d/1RNYAhAkNF3-UR9rzlBOaWJ0fyYundS0TAGXEYRv-Ybo/edit#slide=id.g22ef87eb09_0_23",
      "description": "Big O Slides",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 80,
    "fields": {
      "lesson": 19,
      "url": "https://github.com/quebecplatoon/curriculum/blob/master/page-resources/Big_O_Notation.pdf",
      "description": "More Big O Slides",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 81,
    "fields": {
      "lesson": 19,
      "url": "https://github.com/quebecplatoon/algo-big-o-i",
      "description": "Big O Problems 1",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 82,
    "fields": {
      "lesson": 19,
      "url": "https://github.com/quebecplatoon/algo-big-o-ii",
      "description": "Big O Problems 2",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 83,
    "fields": {
      "lesson": 19,
      "url": "https://github.com/quebecplatoon/algo-bubble-sort",
      "description": "Bubble Sort in JS/python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.feedback",
    "pk": 7,
    "fields": {
      "user": 6,
      "title": "So difficult",
      "description": "I hate that the material is so difficult, but Rafael and Ankur are pretty awesome and do as good a job as they possibly can under the circumstances of an expedited bootcamp. If we had any other instructor (IΓÇÖve watched some of the other instructors on old YouTube videos), IΓÇÖd be struggling even more.",
      "date": "2022-05-07",
      "topic": 0,
      "category": 0
    }
  },
  {
    "model": "app.feedback",
    "pk": 8,
    "fields": {
      "user": 7,
      "title": "Animal facts",
      "description": "Animal facts should be a full on podcast",
      "date": "2022-05-07",
      "topic": 3,
      "category": 0
    }
  },
  {
    "model": "app.feedback",
    "pk": 9,
    "fields": {
      "user": 8,
      "title": "Seeing a full deployment in AWS",
      "description": "Seeing a full deployment in AWS",
      "date": "2022-05-07",
      "topic": 0,
      "category": 0
    }
  },
  {
    "model": "app.feedback",
    "pk": 10,
    "fields": {
      "user": 9,
      "title": "Agile training",
      "description": "Free Agile training is very appreciated but would recommend moving to an earlier week for next cohort. Going from a week of very dense lectures to another week of very dense lectures with no days off from zoom school in between was very draining",
      "date": "2022-05-07",
      "topic": 1,
      "category": 1
    }
  },
  {
    "model": "app.feedback",
    "pk": 11,
    "fields": {
      "user": 11,
      "title": "Student Interaction",
      "description": "More encouragement for students to connect with each other more. Have yet to speak with several students in this class",
      "date": "2022-05-07",
      "topic": 4,
      "category": 1
    }
  },
  {
    "model": "app.feedback",
    "pk": 12,
    "fields": {
      "user": 9,
      "title": "Back/Front end integration",
      "description": "It was good that we covered both ways of integrating front- and back-ends. Would find it particularly valuable if we could compare the two methods: separate front- and back-ends v. nested front- and back-ends in a single project. i.e. also explore the nested method in AnkurΓÇÖs to-do list example",
      "date": "2022-05-07",
      "topic": 0,
      "category": 2
    }
  },
  {
    "model": "app.feedback",
    "pk": 13,
    "fields": {
      "user": 11,
      "title": "Challenges",
      "description": "Due to the pace of class, many students are forced to skip lots of challenges and never have time to go back to them. It would be helpful to have instructors periodically speak with each of us and take \"inventory\" of what weΓÇÖve turned in and let us know if weΓÇÖve been skipping challenges or concepts that are particularly important and spending too much time on others that are not as necessary. I feel like IΓÇÖve spent too much time on challenges that wonΓÇÖt help me with the project, and it caused me to miss out on stuff that couldΓÇÖve helped me on the project. But I didnΓÇÖt realize it until it was too late",
      "date": "2022-05-07",
      "topic": 1,
      "category": 2
    }
  },
  {
    "model": "app.feedback",
    "pk": 14,
    "fields": {
      "user": 8,
      "title": "News-Site",
      "description": "The entire news-site challenge needs to be redone. ThereΓÇÖs little cohesion from news-site-i to news-site-ii to news-site-iii, etc., and the instructions are lacking. The notes on the provided code say to do one thing (such as use React RouterΓÇÖs history.push to change pages), but the lecture videos and lecture notes talk about entirely different methods to change pages. News-site-ii uses HashRouter, but then if we use the provided code for news-site-iii, we suddenly find ourselves using BrowserRouter. Screenshots of what the rendered page should look like at each step of the homework instructions would be helpful. When I followed the news-site-iii instructions I found myself staring at a page that contained just a styled Navbar, and I thought that was correct because the challenge was to work with the Navbar routing/linking, but later I discovered I should have had the entire ArticleList working that whole time but I apparently had a bug I didnΓÇÖt realize was a bug and so I continued onward like a dummy",
      "date": "2022-05-07",
      "topic": 0,
      "category": 2
    }
  },
  {
    "model": "app.feedback",
    "pk": 15,
    "fields": {
      "user": 6,
      "title": "Organization",
      "description": "A completed/organized/planned curriculum prior to the cohortΓÇÖs start date would be really helpful",
      "date": "2022-05-07",
      "topic": 0,
      "category": 2
    }
  },
  {
    "model": "app.feedback",
    "pk": 16,
    "fields": {
      "user": 6,
      "title": "Ankur and Raphael plus the TAs",
      "description": "Ankur and Raphael plus the TAs for getting us this far",
      "date": "2022-05-07",
      "topic": 1,
      "category": 3
    }
  },
  {
    "model": "app.feedback",
    "pk": 17,
    "fields": {
      "user": 6,
      "title": "SAFe Agile training",
      "description": "People who attended the SAFe Agile training and collaborated on the exam",
      "date": "2022-05-07",
      "topic": 0,
      "category": 3
    }
  },
  {
    "model": "app.feedback",
    "pk": 18,
    "fields": {
      "user": 11,
      "title": "Ankur",
      "description": "love Ankur's lectures, worth watching over and over again on Youtube",
      "date": "2022-05-07",
      "topic": 0,
      "category": 3
    }
  },
  {
    "model": "app.feedback",
    "pk": 19,
    "fields": {
      "user": 14,
      "title": "This is PAPA",
      "description": "Platoon",
      "date": "2022-05-07",
      "topic": 0,
      "category": 3
    }
  },
  {
    "model": "app.vote",
    "pk": 13,
    "fields": {
      "user": 7,
      "is_agreed": true,
      "feedback": 7
    }
  },
  {
    "model": "app.vote",
    "pk": 14,
    "fields": {
      "user": 7,
      "is_agreed": true,
      "feedback": 16
    }
  },
  {
    "model": "app.vote",
    "pk": 15,
    "fields": {
      "user": 7,
      "is_agreed": true,
      "feedback": 17
    }
  },
  {
    "model": "app.vote",
    "pk": 16,
    "fields": {
      "user": 7,
      "is_agreed": true,
      "feedback": 12
    }
  },
  {
    "model": "app.vote",
    "pk": 17,
    "fields": {
      "user": 7,
      "is_agreed": true,
      "feedback": 11
    }
  },
  {
    "model": "app.vote",
    "pk": 18,
    "fields": {
      "user": 7,
      "is_agreed": false,
      "feedback": 14
    }
  },
  {
    "model": "app.vote",
    "pk": 19,
    "fields": {
      "user": 7,
      "is_agreed": false,
      "feedback": 10
    }
  },
  {
    "model": "app.vote",
    "pk": 21,
    "fields": {
      "user": 7,
      "is_agreed": true,
      "feedback": 18
    }
  },
  {
    "model": "app.vote",
    "pk": 22,
    "fields": {
      "user": 6,
      "is_agreed": true,
      "feedback": 8
    }
  },
  {
    "model": "app.vote",
    "pk": 23,
    "fields": {
      "user": 6,
      "is_agreed": true,
      "feedback": 14
    }
  },
  {
    "model": "app.vote",
    "pk": 24,
    "fields": {
      "user": 6,
      "is_agreed": false,
      "feedback": 10
    }
  },
  {
    "model": "app.vote",
    "pk": 25,
    "fields": {
      "user": 6,
      "is_agreed": true,
      "feedback": 12
    }
  },
  {
    "model": "app.vote",
    "pk": 26,
    "fields": {
      "user": 6,
      "is_agreed": false,
      "feedback": 11
    }
  },
  {
    "model": "app.vote",
    "pk": 27,
    "fields": {
      "user": 8,
      "is_agreed": true,
      "feedback": 10
    }
  },
  {
    "model": "app.vote",
    "pk": 28,
    "fields": {
      "user": 8,
      "is_agreed": true,
      "feedback": 12
    }
  },
  {
    "model": "app.vote",
    "pk": 29,
    "fields": {
      "user": 8,
      "is_agreed": false,
      "feedback": 11
    }
  },
  {
    "model": "app.vote",
    "pk": 30,
    "fields": {
      "user": 8,
      "is_agreed": false,
      "feedback": 17
    }
  },
  {
    "model": "app.vote",
    "pk": 31,
    "fields": {
      "user": 8,
      "is_agreed": true,
      "feedback": 8
    }
  },
  {
    "model": "app.vote",
    "pk": 32,
    "fields": {
      "user": 9,
      "is_agreed": true,
      "feedback": 8
    }
  },
  {
    "model": "app.vote",
    "pk": 33,
    "fields": {
      "user": 9,
      "is_agreed": true,
      "feedback": 17
    }
  },
  {
    "model": "app.vote",
    "pk": 34,
    "fields": {
      "user": 9,
      "is_agreed": true,
      "feedback": 16
    }
  },
  {
    "model": "app.vote",
    "pk": 35,
    "fields": {
      "user": 9,
      "is_agreed": true,
      "feedback": 15
    }
  },
  {
    "model": "app.vote",
    "pk": 36,
    "fields": {
      "user": 9,
      "is_agreed": true,
      "feedback": 7
    }
  },
  {
    "model": "app.vote",
    "pk": 37,
    "fields": {
      "user": 9,
      "is_agreed": true,
      "feedback": 9
    }
  },
  {
    "model": "app.vote",
    "pk": 38,
    "fields": {
      "user": 9,
      "is_agreed": true,
      "feedback": 14
    }
  },
  {
    "model": "app.vote",
    "pk": 39,
    "fields": {
      "user": 9,
      "is_agreed": true,
      "feedback": 11
    }
  },
  {
    "model": "app.vote",
    "pk": 40,
    "fields": {
      "user": 9,
      "is_agreed": true,
      "feedback": 13
    }
  },
  {
    "model": "app.vote",
    "pk": 41,
    "fields": {
      "user": 9,
      "is_agreed": true,
      "feedback": 18
    }
  },
  {
    "model": "app.vote",
    "pk": 42,
    "fields": {
      "user": 10,
      "is_agreed": true,
      "feedback": 16
    }
  },
  {
    "model": "app.vote",
    "pk": 43,
    "fields": {
      "user": 10,
      "is_agreed": true,
      "feedback": 15
    }
  },
  {
    "model": "app.vote",
    "pk": 44,
    "fields": {
      "user": 10,
      "is_agreed": true,
      "feedback": 17
    }
  },
  {
    "model": "app.vote",
    "pk": 45,
    "fields": {
      "user": 10,
      "is_agreed": false,
      "feedback": 8
    }
  },
  {
    "model": "app.vote",
    "pk": 46,
    "fields": {
      "user": 10,
      "is_agreed": true,
      "feedback": 9
    }
  },
  {
    "model": "app.vote",
    "pk": 47,
    "fields": {
      "user": 10,
      "is_agreed": false,
      "feedback": 14
    }
  },
  {
    "model": "app.vote",
    "pk": 48,
    "fields": {
      "user": 10,
      "is_agreed": false,
      "feedback": 10
    }
  },
  {
    "model": "app.vote",
    "pk": 49,
    "fields": {
      "user": 10,
      "is_agreed": true,
      "feedback": 12
    }
  },
  {
    "model": "app.vote",
    "pk": 50,
    "fields": {
      "user": 10,
      "is_agreed": true,
      "feedback": 11
    }
  },
  {
    "model": "app.vote",
    "pk": 51,
    "fields": {
      "user": 10,
      "is_agreed": true,
      "feedback": 18
    }
  },
  {
    "model": "app.vote",
    "pk": 52,
    "fields": {
      "user": 11,
      "is_agreed": true,
      "feedback": 12
    }
  },
  {
    "model": "app.vote",
    "pk": 53,
    "fields": {
      "user": 11,
      "is_agreed": true,
      "feedback": 14
    }
  },
  {
    "model": "app.vote",
    "pk": 54,
    "fields": {
      "user": 11,
      "is_agreed": true,
      "feedback": 9
    }
  },
  {
    "model": "app.vote",
    "pk": 55,
    "fields": {
      "user": 11,
      "is_agreed": true,
      "feedback": 8
    }
  },
  {
    "model": "app.vote",
    "pk": 56,
    "fields": {
      "user": 11,
      "is_agreed": false,
      "feedback": 17
    }
  },
  {
    "model": "app.activity",
    "pk": 59,
    "fields": {
      "group": 1,
      "name": "Pairs 05-02",
      "date": "2022-05-02",
      "size": 2
    }
  },
  {
    "model": "app.activitygroup",
    "pk": 225,
    "fields": {
      "activity": 59,
      "group_number": null,
      "members": [
        6,
        10
      ]
    }
  },
  {
    "model": "app.activitygroup",
    "pk": 226,
    "fields": {
      "activity": 59,
      "group_number": null,
      "members": [
        7,
        28
      ]
    }
  },
  {
    "model": "app.activitygroup",
    "pk": 227,
    "fields": {
      "activity": 59,
      "group_number": null,
      "members": [
        8,
        9
      ]
    }
  },
  {
    "model": "app.activitygroup",
    "pk": 228,
    "fields": {
      "activity": 59,
      "group_number": null,
      "members": [
        26,
        27
      ]
    }
  },
  {
    "model": "app.cohort",
    "pk": 1,
    "fields": {
      "github_key": "5554565dd",
      "metadata": {
        "course_roadmap": "https://somelink.com/y",
        "youtube": "https://www.youtube.com/channel/UCASZ7zW_Egu0T4KG3YEdGfw/playlists",
        "calendar": "https://docs.google.com/spreadsheets/d/1lOA3uPlX6tU0QvSAZmdCxPBvCpLcfm0H-0DSCMhjn5s/edit?usp=sharing",
        "student_handbook": "https://docs.google.com/document/d/1KgNFbDhihSJv6OGYjFDhESaDJ6ljOyVoRQse7oQH1I0/edit?usp=sharing",
        "student_wiki": "https://docs.google.com/spreadsheets/d/1nX1ylt8AOWVnwZ5v-naN7K2bfhlfZm8TRzepOuXdqWw/edit#gid=0"
      },
      "calendar_key": "c_4lkirg4ugcjlpde4pm7gu4atfo%40group.calendar.google.com"
    }
  },
  {
    "model": "app.cohort",
    "pk": 2,
    "fields": {
      "github_key": "asdfdf33ddddfasdfasdfsdf*#H#N33",
      "metadata": {
        "course_roadmap": "https://somelink.com",
        "youtube": "https://www.youtube.com/channel/UCASZ7zW_Egu0T4KG3YEdGfw/playlists",
        "calendar": "https://docs.google.com/spreadsheets/d/1lOA3uPlX6tU0QvSAZmdCxPBvCpLcfm0H-0DSCMhjn5s/edit?usp=sharing",
        "student_handbook": "https://docs.google.com/document/d/1KgNFbDhihSJv6OGYjFDhESaDJ6ljOyVoRQse7oQH1I0/edit?usp=sharing",
        "student_wiki": "https://docs.google.com/spreadsheets/d/1nX1ylt8AOWVnwZ5v-naN7K2bfhlfZm8TRzepOuXdqWw/edit#gid=0"
      },
      "calendar_key": "ddf3333d3d"
    }
  },
  {
    "model": "app.cohort",
    "pk": 3,
    "fields": {
      "github_key": "asdfdf33dd*#H#N33",
      "metadata": {
        "course_roadmap": "https://somelink.com",
        "youtube": "https://www.youtube.com/channel/UCASZ7zW_Egu0T4KG3YEdGfw/playlists",
        "calendar": "https://docs.google.com/spreadsheets/d/1lOA3uPlX6tU0QvSAZmdCxPBvCpLcfm0H-0DSCMhjn5s/edit?usp=sharing",
        "student_handbook": "https://docs.google.com/document/d/1KgNFbDhihSJv6OGYjFDhESaDJ6ljOyVoRQse7oQH1I0/edit?usp=sharing",
        "student_wiki": "https://docs.google.com/spreadsheets/d/1nX1ylt8AOWVnwZ5v-naN7K2bfhlfZm8TRzepOuXdqWw/edit#gid=0"
      },
      "calendar_key": null
    }
  },
  {
    "model": "app.forum",
    "pk": 1,
    "fields": {
      "name": "Logic/Algo"
    }
  },
  {
    "model": "app.forum",
    "pk": 2,
    "fields": {
      "name": "IDE"
    }
  },
  {
    "model": "app.forum",
    "pk": 3,
    "fields": {
      "name": "Javascript/React"
    }
  },
  {
    "model": "app.forum",
    "pk": 4,
    "fields": {
      "name": "Python/Django"
    }
  },
  {
    "model": "app.forum",
    "pk": 5,
    "fields": {
      "name": "Networking/API"
    }
  },
  {
    "model": "app.forum",
    "pk": 6,
    "fields": {
      "name": "Database/ERD"
    }
  },
  {
    "model": "app.forum",
    "pk": 7,
    "fields": {
      "name": "Scheduling/Calendar"
    }
  },
  {
    "model": "app.forum",
    "pk": 8,
    "fields": {
      "name": "Styling/CSS"
    }
  },
  {
    "model": "app.forumpost",
    "pk": 1,
    "fields": {
      "forum": 7,
      "title": "March Break",
      "body": "This was probably already discussed at some point, but did we ever find out definitively what the break/assessment schedule was for march? I recall that we have March 17/18 and March 24/25 off of class, but I thought that there was mention of an assessment over one of those weekends? Do we know which weekend if (True)?",
      "originator": 6,
      "images": []
    }
  },
  {
    "model": "app.forumpost",
    "pk": 2,
    "fields": {
      "forum": 8,
      "title": "CSS File load",
      "body": "IΓÇÖm trying to troubleshoot why I canΓÇÖt get a CSS file to load in a certain Django project (returns a 404 in the browser console despite Bootstrap working as intended from a different file) and am coming up blank.  Read a lot of documentation and looked at other peopleΓÇÖs code and still canΓÇÖt figure it out, if someone might be able to assist that would be cool.",
      "originator": 7,
      "images": []
    }
  },
  {
    "model": "app.forumpost",
    "pk": 3,
    "fields": {
      "forum": 5,
      "title": "Bootstrap CDN",
      "body": "IΓÇÖm a little confused for how we go about using Bootstrap.  Are we using the CDN, and if so IΓÇÖm not really sure how to go about that since we canΓÇÖt add the file to the Static folder.  Would anyone be willing to provide some clarification?  I donΓÇÖt think IΓÇÖm searching the right things on Google.  TIA",
      "originator": 8,
      "images": []
    }
  },
  {
    "model": "app.forumpost",
    "pk": 4,
    "fields": {
      "forum": 8,
      "title": "CSS styling",
      "body": "trying to figure out css styling an included block of html. link the stylesheet in the main file that has the include statement or to the file that has the included file block....or something else?",
      "originator": 8,
      "images": []
    }
  },
  {
    "model": "app.forumpost",
    "pk": 5,
    "fields": {
      "forum": 8,
      "title": "Navbar",
      "body": "I am trying to get my bootstrap navbar to show in each of my templates using {$ extends 'layout.html'} but I cant seem to  get the navbar to display. Any tips?",
      "originator": 25,
      "images": []
    }
  },
  {
    "model": "app.forumpost",
    "pk": 6,
    "fields": {
      "forum": 4,
      "title": "see code",
      "body": "def staff_detail(request, employee_id):\r\n    employee = School.find_staff_by_id(employee_id)\r\n    return render(request, 'pages/staff_detail.html', {'staff_detail': employee})",
      "originator": 9,
      "images": []
    }
  },
  {
    "model": "app.forumcomment",
    "pk": 1,
    "fields": {
      "post": 4,
      "originator": 12,
      "body": "I think it would be best to have the css in the main file/layout file.",
      "accepted_answer": true,
      "images": []
    }
  },
  {
    "model": "app.forumcomment",
    "pk": 2,
    "fields": {
      "post": 4,
      "originator": 9,
      "body": "I believe that it would be linked in the file that is being included, though extends would be more applicable since its intended for the layout of every page.",
      "accepted_answer": false,
      "images": []
    }
  },
  {
    "model": "app.forumcomment",
    "pk": 3,
    "fields": {
      "post": 5,
      "originator": 2,
      "body": "try extends (plural)",
      "accepted_answer": false,
      "images": []
    }
  },
  {
    "model": "app.forumcomment",
    "pk": 4,
    "fields": {
      "post": 5,
      "originator": 25,
      "body": "sorry had a typo, I do have extends in my code.",
      "accepted_answer": false,
      "images": []
    }
  },
  {
    "model": "app.forumcomment",
    "pk": 5,
    "fields": {
      "post": 5,
      "originator": 8,
      "body": "Could your layout.html be nested within a pages folder? for mines I had to put pages/layout.html",
      "accepted_answer": false,
      "images": []
    }
  },
  {
    "model": "app.forumcomment",
    "pk": 6,
    "fields": {
      "post": 5,
      "originator": 8,
      "body": "also, the formatting should be  {% extends \"page\" %}",
      "accepted_answer": false,
      "images": []
    }
  },
  {
    "model": "app.forumcomment",
    "pk": 7,
    "fields": {
      "post": 5,
      "originator": 25,
      "body": "I added {% extends 'online_store/layout.html'%}, still cannot get the nav bar to display",
      "accepted_answer": false,
      "images": []
    }
  },
  {
    "model": "app.forumcomment",
    "pk": 8,
    "fields": {
      "post": 5,
      "originator": 2,
      "body": "Problem: I had my navbar.html extending from layout.html. This caused the layout to never display the navbar.\r\nSolution: I put {% include 'navbar.htm' %} in the body of the layout.html. This makes it so every page that uses the \"main\" markup in layout.html will include the navbar.\r\n(just for reference, his layout.html item here is his \"base template\" ...i.e. the template that all other pages will use)",
      "accepted_answer": true,
      "images": []
    }
  },
  {
    "model": "app.forumcomment",
    "pk": 9,
    "fields": {
      "post": 6,
      "originator": 2,
      "body": "I'm unavailable to drop in at the moment but question for you.... is find_staff_by_id() a class method or instance method?",
      "accepted_answer": true,
      "images": []
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 1,
    "fields": {
      "user": 6,
      "jti": "d76479da26714f7d9902263b28ee9286",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTQ5NTU5NSwiaWF0IjoxNjUxNzE5NTk1LCJqdGkiOiJkNzY0NzlkYTI2NzE0ZjdkOTkwMjI2M2IyOGVlOTI4NiIsInVzZXJfaWQiOjZ9.tvKw_D0Fv1NEJ1wEj8pfOzyqtHB1_blB2y4KHVeS69E",
      "created_at": "2022-05-05T02:59:55.050Z",
      "expires_at": "2022-08-03T02:59:55Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 2,
    "fields": {
      "user": 6,
      "jti": "d1c8d0aad0924281b97922e1fc470a6d",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU0MTc5NiwiaWF0IjoxNjUxNzY1Nzk2LCJqdGkiOiJkMWM4ZDBhYWQwOTI0MjgxYjk3OTIyZTFmYzQ3MGE2ZCIsInVzZXJfaWQiOjZ9.VtSx_2aBLKkn_OkrHRf6OFor7sCibw8RVMD5-307jzk",
      "created_at": "2022-05-05T15:49:56.105Z",
      "expires_at": "2022-08-03T15:49:56Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 3,
    "fields": {
      "user": 6,
      "jti": "9adb74540e50405c97ebe150ff15a102",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU0Mjk3OCwiaWF0IjoxNjUxNzY2OTc4LCJqdGkiOiI5YWRiNzQ1NDBlNTA0MDVjOTdlYmUxNTBmZjE1YTEwMiIsInVzZXJfaWQiOjZ9.gzSEfYfhovj0C5b7aP61LequMnclEMJVJ8_fQq0luPE",
      "created_at": "2022-05-05T16:09:38.281Z",
      "expires_at": "2022-08-03T16:09:38Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 4,
    "fields": {
      "user": 6,
      "jti": "a713694aa9bc4815b3a0aae460c27ce4",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU0NTQ4MSwiaWF0IjoxNjUxNzY5NDgxLCJqdGkiOiJhNzEzNjk0YWE5YmM0ODE1YjNhMGFhZTQ2MGMyN2NlNCIsInVzZXJfaWQiOjZ9.IN1afLG4jwGZYfVjYOSNKPBxutWe0PdVnaGHq9YyN2Y",
      "created_at": "2022-05-05T16:51:21.396Z",
      "expires_at": "2022-08-03T16:51:21Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 5,
    "fields": {
      "user": 2,
      "jti": "e89bb66834594d818229b5c24f182eca",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU0NzE4MSwiaWF0IjoxNjUxNzcxMTgxLCJqdGkiOiJlODliYjY2ODM0NTk0ZDgxODIyOWI1YzI0ZjE4MmVjYSIsInVzZXJfaWQiOjJ9.x3oVDoOdOoe3k81_0X7CCYLmEunK1bEiNhDg-d1RJhE",
      "created_at": "2022-05-05T17:19:41.498Z",
      "expires_at": "2022-08-03T17:19:41Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 6,
    "fields": {
      "user": 11,
      "jti": "fd1fe8f944474cdfa61b0656689d942a",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU1MzM1NiwiaWF0IjoxNjUxNzc3MzU2LCJqdGkiOiJmZDFmZThmOTQ0NDc0Y2RmYTYxYjA2NTY2ODlkOTQyYSIsInVzZXJfaWQiOjExfQ.kq_MBaE4p4-CKhrPsaDx39mf_K2CGXMy9dc-kOjSaMQ",
      "created_at": "2022-05-05T19:02:36.237Z",
      "expires_at": "2022-08-03T19:02:36Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 7,
    "fields": {
      "user": 8,
      "jti": "b2243627b613404d91337d7fb2fcc782",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU1MzQzMiwiaWF0IjoxNjUxNzc3NDMyLCJqdGkiOiJiMjI0MzYyN2I2MTM0MDRkOTEzMzdkN2ZiMmZjYzc4MiIsInVzZXJfaWQiOjh9.wMKdOFc27WZHiwMfG_DKvbirf2H_D4o4UhnXjMP7A34",
      "created_at": "2022-05-05T19:03:52.345Z",
      "expires_at": "2022-08-03T19:03:52Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 8,
    "fields": {
      "user": 6,
      "jti": "765dd63752e8440b96f5f64220de1845",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU1MzQ1MiwiaWF0IjoxNjUxNzc3NDUyLCJqdGkiOiI3NjVkZDYzNzUyZTg0NDBiOTZmNWY2NDIyMGRlMTg0NSIsInVzZXJfaWQiOjZ9.dIPcz4Pzyo6IxKSZBiDMTmlBpP_3BpJ5HQp40e0B31I",
      "created_at": "2022-05-05T19:04:12.501Z",
      "expires_at": "2022-08-03T19:04:12Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 9,
    "fields": {
      "user": 15,
      "jti": "eacb39af2a834c45808255667703e7f9",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU1MzQ3NSwiaWF0IjoxNjUxNzc3NDc1LCJqdGkiOiJlYWNiMzlhZjJhODM0YzQ1ODA4MjU1NjY3NzAzZTdmOSIsInVzZXJfaWQiOjE1fQ.qdT5Owqp3wvUaPbadH3dNCQvoK377WEwpS82MWD0lWE",
      "created_at": "2022-05-05T19:04:35.072Z",
      "expires_at": "2022-08-03T19:04:35Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 10,
    "fields": {
      "user": 6,
      "jti": "2b283620ae434a269e2247fd8e5d6dd7",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU1NDAxMCwiaWF0IjoxNjUxNzc4MDEwLCJqdGkiOiIyYjI4MzYyMGFlNDM0YTI2OWUyMjQ3ZmQ4ZTVkNmRkNyIsInVzZXJfaWQiOjZ9.DowAuKD-RkMSnG4fclHoVSKdnVBJSQROD_Mnj2Nat0s",
      "created_at": "2022-05-05T19:13:30.635Z",
      "expires_at": "2022-08-03T19:13:30Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 11,
    "fields": {
      "user": 2,
      "jti": "74f5b76f788048cc80c7955b17dac726",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU1NDY5MSwiaWF0IjoxNjUxNzc4NjkxLCJqdGkiOiI3NGY1Yjc2Zjc4ODA0OGNjODBjNzk1NWIxN2RhYzcyNiIsInVzZXJfaWQiOjJ9.WBfwniMMsrrcmYeD6Ktcnh0Hq4ZdJxT668lnoVdcGwQ",
      "created_at": "2022-05-05T19:24:51.588Z",
      "expires_at": "2022-08-03T19:24:51Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 12,
    "fields": {
      "user": 2,
      "jti": "f5ca69404ac64f74b02ac6ea5eef28e7",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU1OTc0NywiaWF0IjoxNjUxNzgzNzQ3LCJqdGkiOiJmNWNhNjk0MDRhYzY0Zjc0YjAyYWM2ZWE1ZWVmMjhlNyIsInVzZXJfaWQiOjJ9.2NytdKsfRm2a15F_mlm-Rs_hySTmXtoojlGKOVwJCV8",
      "created_at": "2022-05-05T20:49:07.804Z",
      "expires_at": "2022-08-03T20:49:07Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 13,
    "fields": {
      "user": 2,
      "jti": "5461fa3b7839436c9179c0b69e735511",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU1OTgwMSwiaWF0IjoxNjUxNzgzODAxLCJqdGkiOiI1NDYxZmEzYjc4Mzk0MzZjOTE3OWMwYjY5ZTczNTUxMSIsInVzZXJfaWQiOjJ9.0DzrAnJ9zsIaSRlJsUe6jEavdI_eAxcPBGwTN9KbvJQ",
      "created_at": "2022-05-05T20:50:01.586Z",
      "expires_at": "2022-08-03T20:50:01Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 14,
    "fields": {
      "user": 2,
      "jti": "0dabad9b19f54733b10d85e8ac69b2df",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU1OTg1MCwiaWF0IjoxNjUxNzgzODUwLCJqdGkiOiIwZGFiYWQ5YjE5ZjU0NzMzYjEwZDg1ZThhYzY5YjJkZiIsInVzZXJfaWQiOjJ9.j8rAAvc6yQXlY7kzNsByXORO-loMzBMMPeENE_uFVo8",
      "created_at": "2022-05-05T20:50:50.248Z",
      "expires_at": "2022-08-03T20:50:50Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 15,
    "fields": {
      "user": 6,
      "jti": "773f9cda63224535b6ea5a47b467f3bd",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU1OTg5MSwiaWF0IjoxNjUxNzgzODkxLCJqdGkiOiI3NzNmOWNkYTYzMjI0NTM1YjZlYTVhNDdiNDY3ZjNiZCIsInVzZXJfaWQiOjZ9.TmTGP4GqsIRmSQmYlCKUTnwSOOZOtvk_hGV3a-FmUvU",
      "created_at": "2022-05-05T20:51:31.265Z",
      "expires_at": "2022-08-03T20:51:31Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 16,
    "fields": {
      "user": 2,
      "jti": "f2cc888693a64ab6b2d5ce007d33058a",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU2MTY0NywiaWF0IjoxNjUxNzg1NjQ3LCJqdGkiOiJmMmNjODg4NjkzYTY0YWI2YjJkNWNlMDA3ZDMzMDU4YSIsInVzZXJfaWQiOjJ9.3HpECg4dLCdM5olq_jwpr-jDHPMkjXKrE3RmLEEY8sA",
      "created_at": "2022-05-05T21:20:47.365Z",
      "expires_at": "2022-08-03T21:20:47Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 17,
    "fields": {
      "user": 6,
      "jti": "543de48cfa01474080cc2baaa189352c",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU3NDk3NSwiaWF0IjoxNjUxNzk4OTc1LCJqdGkiOiI1NDNkZTQ4Y2ZhMDE0NzQwODBjYzJiYWFhMTg5MzUyYyIsInVzZXJfaWQiOjZ9.QJthR-9SpgzCFxg_Ccqt5116IgvvRNMv0N7F2qSnWnE",
      "created_at": "2022-05-06T01:02:55.851Z",
      "expires_at": "2022-08-04T01:02:55Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 18,
    "fields": {
      "user": 2,
      "jti": "45a505379a8f4fa8873bd70e84131c0c",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU3NTQ4MCwiaWF0IjoxNjUxNzk5NDgwLCJqdGkiOiI0NWE1MDUzNzlhOGY0ZmE4ODczYmQ3MGU4NDEzMWMwYyIsInVzZXJfaWQiOjJ9.bqci6_E2dcNkYf8LqEQbnE_fEuypX6DMVab8U9bNcgY",
      "created_at": "2022-05-06T01:11:20.875Z",
      "expires_at": "2022-08-04T01:11:20Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 19,
    "fields": {
      "user": 6,
      "jti": "8843313ec07a4a35bfbefe5fce826cc7",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU4Mzc4NywiaWF0IjoxNjUxODA3Nzg3LCJqdGkiOiI4ODQzMzEzZWMwN2E0YTM1YmZiZWZlNWZjZTgyNmNjNyIsInVzZXJfaWQiOjZ9.uet597LFn-2UIAWZyfIDvR682ulFT4QQfWoMyJBJl_k",
      "created_at": "2022-05-06T03:29:47.982Z",
      "expires_at": "2022-08-04T03:29:47Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 20,
    "fields": {
      "user": 2,
      "jti": "0b9e15a430e140389ade74b7862fd772",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU4MzgxNSwiaWF0IjoxNjUxODA3ODE1LCJqdGkiOiIwYjllMTVhNDMwZTE0MDM4OWFkZTc0Yjc4NjJmZDc3MiIsInVzZXJfaWQiOjJ9.vcECPWNujueRh2f4adFYgYvjFVRmRd9XFHd-wjHBKl8",
      "created_at": "2022-05-06T03:30:15.143Z",
      "expires_at": "2022-08-04T03:30:15Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 21,
    "fields": {
      "user": 6,
      "jti": "7312c1c6418c457eb17387dd90d7ccb2",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU4MzgyNSwiaWF0IjoxNjUxODA3ODI1LCJqdGkiOiI3MzEyYzFjNjQxOGM0NTdlYjE3Mzg3ZGQ5MGQ3Y2NiMiIsInVzZXJfaWQiOjZ9.BvGhPD0D6TATmUi6t4YjTQfEZo27aMYGg2VFHdqo0EQ",
      "created_at": "2022-05-06T03:30:25.382Z",
      "expires_at": "2022-08-04T03:30:25Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 22,
    "fields": {
      "user": 2,
      "jti": "2ca8ed10bb08481e9b261b2482374af6",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU4NTExNywiaWF0IjoxNjUxODA5MTE3LCJqdGkiOiIyY2E4ZWQxMGJiMDg0ODFlOWIyNjFiMjQ4MjM3NGFmNiIsInVzZXJfaWQiOjJ9.sH7u237EzrOg3VSb3P6VEgNYieaz6kAJSXHunQgEbY8",
      "created_at": "2022-05-06T03:51:57.443Z",
      "expires_at": "2022-08-04T03:51:57Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 23,
    "fields": {
      "user": 2,
      "jti": "c66234fb56794550b08e7107815ef978",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU4NTIwMSwiaWF0IjoxNjUxODA5MjAxLCJqdGkiOiJjNjYyMzRmYjU2Nzk0NTUwYjA4ZTcxMDc4MTVlZjk3OCIsInVzZXJfaWQiOjJ9.ZiSEppX4nnlDYa07o_B56Iw47OqtsNBTdeVgVSad_VU",
      "created_at": "2022-05-06T03:53:21.588Z",
      "expires_at": "2022-08-04T03:53:21Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 24,
    "fields": {
      "user": 6,
      "jti": "011906484d1b474b9f3da4db733f86a3",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU4NjYxMCwiaWF0IjoxNjUxODEwNjEwLCJqdGkiOiIwMTE5MDY0ODRkMWI0NzRiOWYzZGE0ZGI3MzNmODZhMyIsInVzZXJfaWQiOjZ9.YNdBMhzCbNxBDQvUIPq5Ya2K40r3_hnfuCd1n9sH790",
      "created_at": "2022-05-06T04:16:50.534Z",
      "expires_at": "2022-08-04T04:16:50Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 25,
    "fields": {
      "user": 7,
      "jti": "869fb4b6442a4fa2a5d0459acc6f8f56",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU4NjY1OCwiaWF0IjoxNjUxODEwNjU4LCJqdGkiOiI4NjlmYjRiNjQ0MmE0ZmEyYTVkMDQ1OWFjYzZmOGY1NiIsInVzZXJfaWQiOjd9.05WKgpV9IF71VID-WUIO8O53VyPYXY8WEaR98k8jGnA",
      "created_at": "2022-05-06T04:17:38.696Z",
      "expires_at": "2022-08-04T04:17:38Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 26,
    "fields": {
      "user": 10,
      "jti": "737aaf39d86541efb85148c73fb0b9bb",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU4Njg3MiwiaWF0IjoxNjUxODEwODcyLCJqdGkiOiI3MzdhYWYzOWQ4NjU0MWVmYjg1MTQ4YzczZmIwYjliYiIsInVzZXJfaWQiOjEwfQ.ZW8bF5IFRjPoBR_ioImD5iVWDCbAig2Qtfx9UX-HfPg",
      "created_at": "2022-05-06T04:21:12.390Z",
      "expires_at": "2022-08-04T04:21:12Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 27,
    "fields": {
      "user": 2,
      "jti": "0c7720b0a204480a82c232e6ce3dd8d7",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU4Njg4MywiaWF0IjoxNjUxODEwODgzLCJqdGkiOiIwYzc3MjBiMGEyMDQ0ODBhODJjMjMyZTZjZTNkZDhkNyIsInVzZXJfaWQiOjJ9.gDaFxAoXYHujf6cZRnzGgItyKW_27cDvplMsdD6nVt0",
      "created_at": "2022-05-06T04:21:23.901Z",
      "expires_at": "2022-08-04T04:21:23Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 28,
    "fields": {
      "user": 8,
      "jti": "d8cff3e11cdb4f90bb3c3dfdb6604ccd",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU4NzU4MCwiaWF0IjoxNjUxODExNTgwLCJqdGkiOiJkOGNmZjNlMTFjZGI0ZjkwYmIzYzNkZmRiNjYwNGNjZCIsInVzZXJfaWQiOjh9.xapnj48ebEjHuVee9WPChsSBsKwPmWYcbbNWZLNRoI8",
      "created_at": "2022-05-06T04:33:00.569Z",
      "expires_at": "2022-08-04T04:33:00Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 29,
    "fields": {
      "user": 6,
      "jti": "430a92377ef14c2eb9402bd84dfacd1c",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU4NzgxOSwiaWF0IjoxNjUxODExODE5LCJqdGkiOiI0MzBhOTIzNzdlZjE0YzJlYjk0MDJiZDg0ZGZhY2QxYyIsInVzZXJfaWQiOjZ9.8VxxuxD6Ti89mMEiElKPuqDz6sTMB4KhICJEiYKnXfU",
      "created_at": "2022-05-06T04:36:59.928Z",
      "expires_at": "2022-08-04T04:36:59Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 30,
    "fields": {
      "user": 6,
      "jti": "68b2d8345a4d4ca88da437798c05c089",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYxNzcwMSwiaWF0IjoxNjUxODQxNzAxLCJqdGkiOiI2OGIyZDgzNDVhNGQ0Y2E4OGRhNDM3Nzk4YzA1YzA4OSIsInVzZXJfaWQiOjZ9.twdjb1KRSjzhSkuuTvlXbZ2twVHPw90ZaLlsmE9bo_4",
      "created_at": "2022-05-06T12:55:01.138Z",
      "expires_at": "2022-08-04T12:55:01Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 31,
    "fields": {
      "user": 2,
      "jti": "191c8735176b4d2cb96dc8a1e0f67d14",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYxNzcyMiwiaWF0IjoxNjUxODQxNzIyLCJqdGkiOiIxOTFjODczNTE3NmI0ZDJjYjk2ZGM4YTFlMGY2N2QxNCIsInVzZXJfaWQiOjJ9.Qlk-8VfQdu6SK9DVomGaVnsEITqiPvqLV4kMkDW_ErY",
      "created_at": "2022-05-06T12:55:22.673Z",
      "expires_at": "2022-08-04T12:55:22Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 32,
    "fields": {
      "user": 6,
      "jti": "d59f85e6babb481fb81bef00db8326da",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYxNzgyNCwiaWF0IjoxNjUxODQxODI0LCJqdGkiOiJkNTlmODVlNmJhYmI0ODFmYjgxYmVmMDBkYjgzMjZkYSIsInVzZXJfaWQiOjZ9.R0EYQRbAsSK4CjLJr4sv_4bP6NeOap9zq2Thoq5O-RA",
      "created_at": "2022-05-06T12:57:04.347Z",
      "expires_at": "2022-08-04T12:57:04Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 33,
    "fields": {
      "user": 6,
      "jti": "7356f304c90e401d8074f4d9ad682c31",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYxODI0NSwiaWF0IjoxNjUxODQyMjQ1LCJqdGkiOiI3MzU2ZjMwNGM5MGU0MDFkODA3NGY0ZDlhZDY4MmMzMSIsInVzZXJfaWQiOjZ9.WMspn-4sRyYcXu77m7FC8L4BuPfk5GMpPhKr1Otpnik",
      "created_at": "2022-05-06T13:04:05.291Z",
      "expires_at": "2022-08-04T13:04:05Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 34,
    "fields": {
      "user": 6,
      "jti": "7df125a021a24088a7e721af4d2f6c62",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYxODU4NywiaWF0IjoxNjUxODQyNTg3LCJqdGkiOiI3ZGYxMjVhMDIxYTI0MDg4YTdlNzIxYWY0ZDJmNmM2MiIsInVzZXJfaWQiOjZ9.vycQO0gGKz_r1VdC3fuXERQ6HrFcpnMs4HEWjvhJGQw",
      "created_at": "2022-05-06T13:09:47.619Z",
      "expires_at": "2022-08-04T13:09:47Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 35,
    "fields": {
      "user": 6,
      "jti": "1dad609271564d36823554c346622cef",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYxOTA5MCwiaWF0IjoxNjUxODQzMDkwLCJqdGkiOiIxZGFkNjA5MjcxNTY0ZDM2ODIzNTU0YzM0NjYyMmNlZiIsInVzZXJfaWQiOjZ9.Rfama4AQphSLIrVdLGI6KYCSCfauHQz0RB5naGBq3eo",
      "created_at": "2022-05-06T13:18:10.548Z",
      "expires_at": "2022-08-04T13:18:10Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 36,
    "fields": {
      "user": 6,
      "jti": "c196b3512c1e4fdb99bc45da088a96f1",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYxOTEwNSwiaWF0IjoxNjUxODQzMTA1LCJqdGkiOiJjMTk2YjM1MTJjMWU0ZmRiOTliYzQ1ZGEwODhhOTZmMSIsInVzZXJfaWQiOjZ9.tIjDItepmInlLOXKcsC8JG0bUY-CLQ0UnZamW7QbFFA",
      "created_at": "2022-05-06T13:18:25.148Z",
      "expires_at": "2022-08-04T13:18:25Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 37,
    "fields": {
      "user": 28,
      "jti": "dd78ccc92aee48db86b849be68a608c2",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYyMDcwNCwiaWF0IjoxNjUxODQ0NzA0LCJqdGkiOiJkZDc4Y2NjOTJhZWU0OGRiODZiODQ5YmU2OGE2MDhjMiIsInVzZXJfaWQiOjI4fQ.gO1slD8fqNxx6VxsTIiT781evPEJrp8e3YB_XnZ7UQ4",
      "created_at": "2022-05-06T13:45:04.829Z",
      "expires_at": "2022-08-04T13:45:04Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 38,
    "fields": {
      "user": 28,
      "jti": "64a7c4cb1a6e4486a576dfb04b5ca6ab",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYyMDg0OCwiaWF0IjoxNjUxODQ0ODQ4LCJqdGkiOiI2NGE3YzRjYjFhNmU0NDg2YTU3NmRmYjA0YjVjYTZhYiIsInVzZXJfaWQiOjI4fQ.hs_c7DIJHjfp1f4J0ZxlE647olPoKi3mFPU8O18SjGA",
      "created_at": "2022-05-06T13:47:28.621Z",
      "expires_at": "2022-08-04T13:47:28Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 39,
    "fields": {
      "user": 28,
      "jti": "ab404bdaf216423ab217c85427523ebb",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYyMDkwMCwiaWF0IjoxNjUxODQ0OTAwLCJqdGkiOiJhYjQwNGJkYWYyMTY0MjNhYjIxN2M4NTQyNzUyM2ViYiIsInVzZXJfaWQiOjI4fQ.F3AZT8qrN8jaGo2nTtP5xFRqqNe43LyiGeupgewe5QM",
      "created_at": "2022-05-06T13:48:20.590Z",
      "expires_at": "2022-08-04T13:48:20Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 40,
    "fields": {
      "user": 2,
      "jti": "ee997388d3b0474cbcbd5dc6f4a750c2",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYyMzM5NSwiaWF0IjoxNjUxODQ3Mzk1LCJqdGkiOiJlZTk5NzM4OGQzYjA0NzRjYmNiZDVkYzZmNGE3NTBjMiIsInVzZXJfaWQiOjJ9.Aom6v5GKI2jMam6hFCifbu3HmFmLOt49tM-Ao_3IliQ",
      "created_at": "2022-05-06T14:29:55.600Z",
      "expires_at": "2022-08-04T14:29:55Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 41,
    "fields": {
      "user": 3,
      "jti": "c6d342cd9321434eb87b915b3b77d9a0",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYyMzQxMCwiaWF0IjoxNjUxODQ3NDEwLCJqdGkiOiJjNmQzNDJjZDkzMjE0MzRlYjg3YjkxNWIzYjc3ZDlhMCIsInVzZXJfaWQiOjN9.2Pe-nvRzTgMMS2Anlz9cAG-9OTLXHn49hfoBBKj_JgQ",
      "created_at": "2022-05-06T14:30:10.311Z",
      "expires_at": "2022-08-04T14:30:10Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 42,
    "fields": {
      "user": 3,
      "jti": "75887524111c45168b67570aa1426c8d",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYyMzQ0MSwiaWF0IjoxNjUxODQ3NDQxLCJqdGkiOiI3NTg4NzUyNDExMWM0NTE2OGI2NzU3MGFhMTQyNmM4ZCIsInVzZXJfaWQiOjN9.Kb_tgUMvLVO7f7GPjYfGA-z-kBQDU_zjevpJblhPALI",
      "created_at": "2022-05-06T14:30:41.043Z",
      "expires_at": "2022-08-04T14:30:41Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 43,
    "fields": {
      "user": 3,
      "jti": "c057dd20e44a4e93bb80b5b6a4dab6fa",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYyNTA0OSwiaWF0IjoxNjUxODQ5MDQ5LCJqdGkiOiJjMDU3ZGQyMGU0NGE0ZTkzYmI4MGI1YjZhNGRhYjZmYSIsInVzZXJfaWQiOjN9.VXsQDF1zUjKaHwd7u2YkcBXohfLz9pJzymtkoyGIR38",
      "created_at": "2022-05-06T14:57:29.130Z",
      "expires_at": "2022-08-04T14:57:29Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 44,
    "fields": {
      "user": 2,
      "jti": "e98d014c2df641b1bd56423fc7e40dac",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYyNTA2MCwiaWF0IjoxNjUxODQ5MDYwLCJqdGkiOiJlOThkMDE0YzJkZjY0MWIxYmQ1NjQyM2ZjN2U0MGRhYyIsInVzZXJfaWQiOjJ9.ssMZCt3w3bJ1fZS1ufRg-XTioF4_6TUY116-SpCvVDQ",
      "created_at": "2022-05-06T14:57:40.937Z",
      "expires_at": "2022-08-04T14:57:40Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 45,
    "fields": {
      "user": 28,
      "jti": "11b3889e13804c6fa401fd5d28d7713c",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYyNTA4MywiaWF0IjoxNjUxODQ5MDgzLCJqdGkiOiIxMWIzODg5ZTEzODA0YzZmYTQwMWZkNWQyOGQ3NzEzYyIsInVzZXJfaWQiOjI4fQ.uet8MpMBc9CoC6cWZnad0bc9UN17pYrxRa9nm_-2c8k",
      "created_at": "2022-05-06T14:58:03.892Z",
      "expires_at": "2022-08-04T14:58:03Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 46,
    "fields": {
      "user": 28,
      "jti": "93a0ad8667934b90b4939e5ae761b1b5",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYyNjI5OSwiaWF0IjoxNjUxODUwMjk5LCJqdGkiOiI5M2EwYWQ4NjY3OTM0YjkwYjQ5MzllNWFlNzYxYjFiNSIsInVzZXJfaWQiOjI4fQ.gGguANvcRpK4HysvFmPP03_xPaCsgRH1RHfR1sn5KCc",
      "created_at": "2022-05-06T15:18:19.461Z",
      "expires_at": "2022-08-04T15:18:19Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 47,
    "fields": {
      "user": 2,
      "jti": "29c4565eb13a4736a82a8b3e99558eb9",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYyNjMxMiwiaWF0IjoxNjUxODUwMzEyLCJqdGkiOiIyOWM0NTY1ZWIxM2E0NzM2YTgyYThiM2U5OTU1OGViOSIsInVzZXJfaWQiOjJ9.WyPtt-WQMG3R_9k8pHVu2BuxaWeyvrruIqDDFEGRdrI",
      "created_at": "2022-05-06T15:18:32.948Z",
      "expires_at": "2022-08-04T15:18:32Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 48,
    "fields": {
      "user": 28,
      "jti": "f3c0f9f6987c4684b1f2a375bf73139c",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYyNjMyNSwiaWF0IjoxNjUxODUwMzI1LCJqdGkiOiJmM2MwZjlmNjk4N2M0Njg0YjFmMmEzNzViZjczMTM5YyIsInVzZXJfaWQiOjI4fQ.XEPUkG03EtWEJMdVq4WCa5f-blFtNpwxJVqL-nULgQw",
      "created_at": "2022-05-06T15:18:45.550Z",
      "expires_at": "2022-08-04T15:18:45Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 49,
    "fields": {
      "user": 2,
      "jti": "70c83999721b4c2bbb63ca8680a3cb8e",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYyNjMzNywiaWF0IjoxNjUxODUwMzM3LCJqdGkiOiI3MGM4Mzk5OTcyMWI0YzJiYmI2M2NhODY4MGEzY2I4ZSIsInVzZXJfaWQiOjJ9.6PSij7DGBjhgpHoL8dDlvHS8OjxOiSImgxP98nqA7FE",
      "created_at": "2022-05-06T15:18:57.873Z",
      "expires_at": "2022-08-04T15:18:57Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 50,
    "fields": {
      "user": 28,
      "jti": "69f327def8504cf2baf3e1de2fa0ca14",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYyOTA2MywiaWF0IjoxNjUxODUzMDYzLCJqdGkiOiI2OWYzMjdkZWY4NTA0Y2YyYmFmM2UxZGUyZmEwY2ExNCIsInVzZXJfaWQiOjI4fQ.W-3LZdryE316Hf6cVO2AuO6ms7Y4zs4uysqh-HgpIzk",
      "created_at": "2022-05-06T16:04:23.201Z",
      "expires_at": "2022-08-04T16:04:23Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 51,
    "fields": {
      "user": 2,
      "jti": "5a20dd87b42f44509f65cabeecf147a0",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYzMzYyNSwiaWF0IjoxNjUxODU3NjI1LCJqdGkiOiI1YTIwZGQ4N2I0MmY0NDUwOWY2NWNhYmVlY2YxNDdhMCIsInVzZXJfaWQiOjJ9.qGe96NWqfPuYwMQdI1mDccUo7EimaaIkxnPv12W9DUM",
      "created_at": "2022-05-06T17:20:25.071Z",
      "expires_at": "2022-08-04T17:20:25Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 52,
    "fields": {
      "user": 28,
      "jti": "7dc586090eef404fa8e29146250b5bcc",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYzMzY1NywiaWF0IjoxNjUxODU3NjU3LCJqdGkiOiI3ZGM1ODYwOTBlZWY0MDRmYThlMjkxNDYyNTBiNWJjYyIsInVzZXJfaWQiOjI4fQ.6EaJucXzK8jm2hSUx9AevDIcgOwliQgqfmbsb0iW_yk",
      "created_at": "2022-05-06T17:20:57.914Z",
      "expires_at": "2022-08-04T17:20:57Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 53,
    "fields": {
      "user": 28,
      "jti": "53d429542c3842caae774d87eb63489e",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTYzNjA3NiwiaWF0IjoxNjUxODYwMDc2LCJqdGkiOiI1M2Q0Mjk1NDJjMzg0MmNhYWU3NzRkODdlYjYzNDg5ZSIsInVzZXJfaWQiOjI4fQ.wuYplYgroW0U01v12IOzDq3HvPN1IbHxhDzDGNxaaVo",
      "created_at": "2022-05-06T18:01:16.785Z",
      "expires_at": "2022-08-04T18:01:16Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 54,
    "fields": {
      "user": 2,
      "jti": "15e80c296cef493da71c65df8bdba9ca",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0MzMxOCwiaWF0IjoxNjUxODY3MzE4LCJqdGkiOiIxNWU4MGMyOTZjZWY0OTNkYTcxYzY1ZGY4YmRiYTljYSIsInVzZXJfaWQiOjJ9.wyS5CfUfEstzBfwWs4nNoYUOYRHKlRqLxVlDw0cAJM4",
      "created_at": "2022-05-06T20:01:58.725Z",
      "expires_at": "2022-08-04T20:01:58Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 55,
    "fields": {
      "user": 28,
      "jti": "c93636400348465288c89bd0e3bc8794",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0MzM3MywiaWF0IjoxNjUxODY3MzczLCJqdGkiOiJjOTM2MzY0MDAzNDg0NjUyODhjODliZDBlM2JjODc5NCIsInVzZXJfaWQiOjI4fQ.2eftfDhIFFqYrPhf2rJv78c-wTuK7bQ4NyHva-QSkcw",
      "created_at": "2022-05-06T20:02:53.733Z",
      "expires_at": "2022-08-04T20:02:53Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 56,
    "fields": {
      "user": 2,
      "jti": "9ef6e2ab2ed44d99a57f373198d4308a",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0Mzg3NiwiaWF0IjoxNjUxODY3ODc2LCJqdGkiOiI5ZWY2ZTJhYjJlZDQ0ZDk5YTU3ZjM3MzE5OGQ0MzA4YSIsInVzZXJfaWQiOjJ9.5r7Vj28vSa94GpOcBtsr4I_JM1z3VxNPxwka8458fnU",
      "created_at": "2022-05-06T20:11:16.788Z",
      "expires_at": "2022-08-04T20:11:16Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 57,
    "fields": {
      "user": 25,
      "jti": "048afafb211641bf9e4c31a3fe6c7e65",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0MzkxMSwiaWF0IjoxNjUxODY3OTExLCJqdGkiOiIwNDhhZmFmYjIxMTY0MWJmOWU0YzMxYTNmZTZjN2U2NSIsInVzZXJfaWQiOjI1fQ.Yo2fuXqLWTzNoXTiO2_dvUo9GY4EthS7-lVnSX-xccE",
      "created_at": "2022-05-06T20:11:51.937Z",
      "expires_at": "2022-08-04T20:11:51Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 58,
    "fields": {
      "user": 27,
      "jti": "45ec2ac177404cb5a91c0277bf5791fe",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0Mzk1OCwiaWF0IjoxNjUxODY3OTU4LCJqdGkiOiI0NWVjMmFjMTc3NDA0Y2I1YTkxYzAyNzdiZjU3OTFmZSIsInVzZXJfaWQiOjI3fQ.NxkvecJZR6WMcWH9ZgK99UHqa2OO44J1rAJsT_aQM94",
      "created_at": "2022-05-06T20:12:38.797Z",
      "expires_at": "2022-08-04T20:12:38Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 59,
    "fields": {
      "user": 6,
      "jti": "b0b67961086e48459d9d72c1dcce59cb",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0Mzk3MSwiaWF0IjoxNjUxODY3OTcxLCJqdGkiOiJiMGI2Nzk2MTA4NmU0ODQ1OWQ5ZDcyYzFkY2NlNTljYiIsInVzZXJfaWQiOjZ9.Er5K4LF9UtHsD9mOP1FWjXPwGnkmzO836zoQXeijYLQ",
      "created_at": "2022-05-06T20:12:51.145Z",
      "expires_at": "2022-08-04T20:12:51Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 60,
    "fields": {
      "user": 6,
      "jti": "2fc5639441e14857b897b67872d0a20c",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0NDEyNSwiaWF0IjoxNjUxODY4MTI1LCJqdGkiOiIyZmM1NjM5NDQxZTE0ODU3Yjg5N2I2Nzg3MmQwYTIwYyIsInVzZXJfaWQiOjZ9.K0OLloCjjU_0AMOS7Lm47b2rXSKV3IN8aedMFDxilCI",
      "created_at": "2022-05-06T20:15:25.192Z",
      "expires_at": "2022-08-04T20:15:25Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 61,
    "fields": {
      "user": 2,
      "jti": "4492ed129c3f43bdbf21d6d7d17a822a",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0NDQ3OCwiaWF0IjoxNjUxODY4NDc4LCJqdGkiOiI0NDkyZWQxMjljM2Y0M2JkYmYyMWQ2ZDdkMTdhODIyYSIsInVzZXJfaWQiOjJ9.eCA_EOoIIaTN3wr5R7knvrLwV4SUTh4_fq70HfGshMI",
      "created_at": "2022-05-06T20:21:18.375Z",
      "expires_at": "2022-08-04T20:21:18Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 62,
    "fields": {
      "user": 28,
      "jti": "16791b6e2e47431993f41248abdd9436",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0NDcxNywiaWF0IjoxNjUxODY4NzE3LCJqdGkiOiIxNjc5MWI2ZTJlNDc0MzE5OTNmNDEyNDhhYmRkOTQzNiIsInVzZXJfaWQiOjI4fQ.Iwqy7DZ5zMK6sflnQcSwCONkh8Kgym4nMn0I498BgKE",
      "created_at": "2022-05-06T20:25:17.582Z",
      "expires_at": "2022-08-04T20:25:17Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 63,
    "fields": {
      "user": 27,
      "jti": "047a7846c02f45d1bb5ad6b6abd63f29",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0NDcyNCwiaWF0IjoxNjUxODY4NzI0LCJqdGkiOiIwNDdhNzg0NmMwMmY0NWQxYmI1YWQ2YjZhYmQ2M2YyOSIsInVzZXJfaWQiOjI3fQ.B5_rbOc4EMZgvQ7jSu2kSPruF03ACZ1QiXNWz2kjeCE",
      "created_at": "2022-05-06T20:25:24.136Z",
      "expires_at": "2022-08-04T20:25:24Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 64,
    "fields": {
      "user": 26,
      "jti": "4426cd4d77be454da9997db9ce679b4f",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0NDczMSwiaWF0IjoxNjUxODY4NzMxLCJqdGkiOiI0NDI2Y2Q0ZDc3YmU0NTRkYTk5OTdkYjljZTY3OWI0ZiIsInVzZXJfaWQiOjI2fQ.8H-viA7bhbgbEJTpcMhC8moQKfGVH5S7i4lV2ZBIfgo",
      "created_at": "2022-05-06T20:25:31.114Z",
      "expires_at": "2022-08-04T20:25:31Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 65,
    "fields": {
      "user": 2,
      "jti": "991ba56776a64b7e8a256ae49956ccaa",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0NDczNywiaWF0IjoxNjUxODY4NzM3LCJqdGkiOiI5OTFiYTU2Nzc2YTY0YjdlOGEyNTZhZTQ5OTU2Y2NhYSIsInVzZXJfaWQiOjJ9.s_SV4Sdf5XMimmN9xbtvuHHdMaSsPt4bnGYZlGwdqPA",
      "created_at": "2022-05-06T20:25:37.955Z",
      "expires_at": "2022-08-04T20:25:37Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 66,
    "fields": {
      "user": 28,
      "jti": "6c8ec34d33444878843ccc43edf30261",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0NDc5NywiaWF0IjoxNjUxODY4Nzk3LCJqdGkiOiI2YzhlYzM0ZDMzNDQ0ODc4ODQzY2NjNDNlZGYzMDI2MSIsInVzZXJfaWQiOjI4fQ.BGeeAzSXEnXEPx-xe7I4hwnh6XL5VLiYscH_QJ6izeU",
      "created_at": "2022-05-06T20:26:37.388Z",
      "expires_at": "2022-08-04T20:26:37Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 67,
    "fields": {
      "user": 2,
      "jti": "5da6c3a09e6245d78be5ae36b00c50db",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0NDg0NCwiaWF0IjoxNjUxODY4ODQ0LCJqdGkiOiI1ZGE2YzNhMDllNjI0NWQ3OGJlNWFlMzZiMDBjNTBkYiIsInVzZXJfaWQiOjJ9.RuibcRPqLw95B4s44-c_eH30WPbOouutL6KWb8412gY",
      "created_at": "2022-05-06T20:27:24.145Z",
      "expires_at": "2022-08-04T20:27:24Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 68,
    "fields": {
      "user": 2,
      "jti": "394ef1fb17f848129c997a283502d7fe",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0NjM2OCwiaWF0IjoxNjUxODcwMzY4LCJqdGkiOiIzOTRlZjFmYjE3Zjg0ODEyOWM5OTdhMjgzNTAyZDdmZSIsInVzZXJfaWQiOjJ9.KxxQA8TH4ApqKZ9BrpGMJd-qDJhlTnk-Qa9LZkPFfMY",
      "created_at": "2022-05-06T20:52:48.426Z",
      "expires_at": "2022-08-04T20:52:48Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 69,
    "fields": {
      "user": 28,
      "jti": "c33a9aba4e654fcd90b4e53b9b65b976",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0NjU2NywiaWF0IjoxNjUxODcwNTY3LCJqdGkiOiJjMzNhOWFiYTRlNjU0ZmNkOTBiNGU1M2I5YjY1Yjk3NiIsInVzZXJfaWQiOjI4fQ.nI8dQ216s1YUQMYXIlI4ImyS-HW57_GA6f3DHqYW6-g",
      "created_at": "2022-05-06T20:56:07.793Z",
      "expires_at": "2022-08-04T20:56:07Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 70,
    "fields": {
      "user": 12,
      "jti": "3698baee045a409393169d191251a0a6",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0NjgzNywiaWF0IjoxNjUxODcwODM3LCJqdGkiOiIzNjk4YmFlZTA0NWE0MDkzOTMxNjlkMTkxMjUxYTBhNiIsInVzZXJfaWQiOjEyfQ.ekl6kZzcGi4O3QlzbEMcXq1ZCSpvkLSBtNiWW2dcACU",
      "created_at": "2022-05-06T21:00:37.172Z",
      "expires_at": "2022-08-04T21:00:37Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 71,
    "fields": {
      "user": 9,
      "jti": "45520657620048f48e4067df948283cd",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0Njg0NCwiaWF0IjoxNjUxODcwODQ0LCJqdGkiOiI0NTUyMDY1NzYyMDA0OGY0OGU0MDY3ZGY5NDgyODNjZCIsInVzZXJfaWQiOjl9.v827a5YrMZ-uMqbTXJmYJd4YTk5Y5jNBwH0klB9VSCg",
      "created_at": "2022-05-06T21:00:44.803Z",
      "expires_at": "2022-08-04T21:00:44Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 72,
    "fields": {
      "user": 10,
      "jti": "15f36a37a70c4231b6afc443331836bf",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0NzA1NywiaWF0IjoxNjUxODcxMDU3LCJqdGkiOiIxNWYzNmEzN2E3MGM0MjMxYjZhZmM0NDMzMzE4MzZiZiIsInVzZXJfaWQiOjEwfQ.0eufotgsmnAvba8GhEtR-GzZmGubWILGS6kc99HF-qo",
      "created_at": "2022-05-06T21:04:17.230Z",
      "expires_at": "2022-08-04T21:04:17Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 73,
    "fields": {
      "user": 2,
      "jti": "63d3fd3abbf14f128668ed3b4088bb21",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0NzI3NiwiaWF0IjoxNjUxODcxMjc2LCJqdGkiOiI2M2QzZmQzYWJiZjE0ZjEyODY2OGVkM2I0MDg4YmIyMSIsInVzZXJfaWQiOjJ9.rGb7_hBdp2yZwiaAgUezear-3nY882WsLJoPqqWsi04",
      "created_at": "2022-05-06T21:07:56.389Z",
      "expires_at": "2022-08-04T21:07:56Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 74,
    "fields": {
      "user": 28,
      "jti": "2b10f81f92ed4b6e90127dcd12b124d6",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0NzMyNSwiaWF0IjoxNjUxODcxMzI1LCJqdGkiOiIyYjEwZjgxZjkyZWQ0YjZlOTAxMjdkY2QxMmIxMjRkNiIsInVzZXJfaWQiOjI4fQ.Pnh67UpAPo4Sbrd4A1odjyWnb9VTh-iG7tNPtiXxU2A",
      "created_at": "2022-05-06T21:08:45.105Z",
      "expires_at": "2022-08-04T21:08:45Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 75,
    "fields": {
      "user": 2,
      "jti": "002d2bb7a6e642719504f025d8bfa01b",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0NzgxNiwiaWF0IjoxNjUxODcxODE2LCJqdGkiOiIwMDJkMmJiN2E2ZTY0MjcxOTUwNGYwMjVkOGJmYTAxYiIsInVzZXJfaWQiOjJ9.2iS5Ds9mdsHwTw8DwTnk0Y3j4P2ggmiMD5ZsjqCpa4M",
      "created_at": "2022-05-06T21:16:56.763Z",
      "expires_at": "2022-08-04T21:16:56Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 76,
    "fields": {
      "user": 2,
      "jti": "3a29c46e29d34a6f96f076117731eee4",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0Nzg4MywiaWF0IjoxNjUxODcxODgzLCJqdGkiOiIzYTI5YzQ2ZTI5ZDM0YTZmOTZmMDc2MTE3NzMxZWVlNCIsInVzZXJfaWQiOjJ9.uNK3azaodfrX-uhTtRDf2jJJj0czN70DdRTkKr7aeO4",
      "created_at": "2022-05-06T21:18:03.861Z",
      "expires_at": "2022-08-04T21:18:03Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 77,
    "fields": {
      "user": 6,
      "jti": "4c8ef49db0664706aa1e6a6a3b6cb816",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0ODA1MiwiaWF0IjoxNjUxODcyMDUyLCJqdGkiOiI0YzhlZjQ5ZGIwNjY0NzA2YWExZTZhNmEzYjZjYjgxNiIsInVzZXJfaWQiOjZ9.fxd7-wc75Gx8suKZ7KzLEXurvVl0cxvsThlQs9qiCVw",
      "created_at": "2022-05-06T21:20:52.947Z",
      "expires_at": "2022-08-04T21:20:52Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 78,
    "fields": {
      "user": 2,
      "jti": "3d50ab7d7deb4936b8843904cca12e3b",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0ODI0NywiaWF0IjoxNjUxODcyMjQ3LCJqdGkiOiIzZDUwYWI3ZDdkZWI0OTM2Yjg4NDM5MDRjY2ExMmUzYiIsInVzZXJfaWQiOjJ9.hbT9q5iv-N1HAZRHHxwqf3-fFFKqkW-oAXjI2Bas2bo",
      "created_at": "2022-05-06T21:24:07.381Z",
      "expires_at": "2022-08-04T21:24:07Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 79,
    "fields": {
      "user": 16,
      "jti": "dc399a1f18194c1998128f9c4fbe16b4",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0ODMyNCwiaWF0IjoxNjUxODcyMzI0LCJqdGkiOiJkYzM5OWExZjE4MTk0YzE5OTgxMjhmOWM0ZmJlMTZiNCIsInVzZXJfaWQiOjE2fQ.dPdUlxEMIBM6G4SrLpto9JyW1tor1JIXUU2OleIFL_c",
      "created_at": "2022-05-06T21:25:24.662Z",
      "expires_at": "2022-08-04T21:25:24Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 80,
    "fields": {
      "user": 26,
      "jti": "97c24d676e8b4764927a7b3dd19dbba6",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0ODMzMSwiaWF0IjoxNjUxODcyMzMxLCJqdGkiOiI5N2MyNGQ2NzZlOGI0NzY0OTI3YTdiM2RkMTlkYmJhNiIsInVzZXJfaWQiOjI2fQ.EG17nPrAOhdjMQHQh4ax1ki95su2OkvO1ff13Z3sjKU",
      "created_at": "2022-05-06T21:25:31.787Z",
      "expires_at": "2022-08-04T21:25:31Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 81,
    "fields": {
      "user": 6,
      "jti": "2cdb66c033b44b6781ea97134b702f90",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0ODQ1NCwiaWF0IjoxNjUxODcyNDU0LCJqdGkiOiIyY2RiNjZjMDMzYjQ0YjY3ODFlYTk3MTM0YjcwMmY5MCIsInVzZXJfaWQiOjZ9.UPNSsGcXVQI8RxMj6N3yQlcwo8EhTt-XWvB7gI4fGX4",
      "created_at": "2022-05-06T21:27:34.605Z",
      "expires_at": "2022-08-04T21:27:34Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 82,
    "fields": {
      "user": 2,
      "jti": "5dc5547a3b424a0094f5bddeadcfaf36",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0ODg3OSwiaWF0IjoxNjUxODcyODc5LCJqdGkiOiI1ZGM1NTQ3YTNiNDI0YTAwOTRmNWJkZGVhZGNmYWYzNiIsInVzZXJfaWQiOjJ9.9fJSBbQ06Yq5hvlDnLJA1XqavgnNUrW7tyBI6Ux6cSE",
      "created_at": "2022-05-06T21:34:39.817Z",
      "expires_at": "2022-08-04T21:34:39Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 83,
    "fields": {
      "user": 2,
      "jti": "2e50783378d34d448ed3ac5adb3072e4",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0ODk2MSwiaWF0IjoxNjUxODcyOTYxLCJqdGkiOiIyZTUwNzgzMzc4ZDM0ZDQ0OGVkM2FjNWFkYjMwNzJlNCIsInVzZXJfaWQiOjJ9.1U4RLZLcG5FTizGmdZ2_D8ZjL_8Z9XSippP2gvwjCt4",
      "created_at": "2022-05-06T21:36:01.183Z",
      "expires_at": "2022-08-04T21:36:01Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 84,
    "fields": {
      "user": 6,
      "jti": "824fb8f365f8430dbaca89d4b5c636d7",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0ODk2NSwiaWF0IjoxNjUxODcyOTY1LCJqdGkiOiI4MjRmYjhmMzY1Zjg0MzBkYmFjYTg5ZDRiNWM2MzZkNyIsInVzZXJfaWQiOjZ9.h8l5VuFZDrZheCq4ufRJxPXloSEfik_bQvGZQHmsYfg",
      "created_at": "2022-05-06T21:36:05.057Z",
      "expires_at": "2022-08-04T21:36:05Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 85,
    "fields": {
      "user": 27,
      "jti": "cb430056562c4854ab9c26ee0f72ba4a",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTY0OTEwOCwiaWF0IjoxNjUxODczMTA4LCJqdGkiOiJjYjQzMDA1NjU2MmM0ODU0YWI5YzI2ZWUwZjcyYmE0YSIsInVzZXJfaWQiOjI3fQ.AxekVHpHyi5ezZeiQSkkc8C5VZug2iIzOgf305i4FXY",
      "created_at": "2022-05-06T21:38:28.753Z",
      "expires_at": "2022-08-04T21:38:28Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 86,
    "fields": {
      "user": 27,
      "jti": "0a238da37c5f45aba959a90031f62eea",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTcwNzkwNCwiaWF0IjoxNjUxOTMxOTA0LCJqdGkiOiIwYTIzOGRhMzdjNWY0NWFiYTk1OWE5MDAzMWY2MmVlYSIsInVzZXJfaWQiOjI3fQ.ir7LwR5HHJuopSUj-fj3T-T38j1c6XQpx2HMgz9xf7g",
      "created_at": "2022-05-07T13:58:24.212Z",
      "expires_at": "2022-08-05T13:58:24Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 87,
    "fields": {
      "user": 25,
      "jti": "5c3ea6bd6ed842719b4005ecd4937d72",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTcwNzkyMCwiaWF0IjoxNjUxOTMxOTIwLCJqdGkiOiI1YzNlYTZiZDZlZDg0MjcxOWI0MDA1ZWNkNDkzN2Q3MiIsInVzZXJfaWQiOjI1fQ.vJ_xdc0Ds_0jK8_9tX4MM4ju191kMVRfx7RVhNw1c5I",
      "created_at": "2022-05-07T13:58:40.075Z",
      "expires_at": "2022-08-05T13:58:40Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 88,
    "fields": {
      "user": 27,
      "jti": "7e9e7ed002254e63b71f9ff6e4b79ca3",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTcwODg5MiwiaWF0IjoxNjUxOTMyODkyLCJqdGkiOiI3ZTllN2VkMDAyMjU0ZTYzYjcxZjlmZjZlNGI3OWNhMyIsInVzZXJfaWQiOjI3fQ.KqRjXmDCgIv5njCrZWsfskPwGiMBbAVfPM7Ye_SoAOU",
      "created_at": "2022-05-07T14:14:52.828Z",
      "expires_at": "2022-08-05T14:14:52Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 89,
    "fields": {
      "user": 28,
      "jti": "1f206457c5e54c17a01f2cf3d674400b",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTcwODk1NywiaWF0IjoxNjUxOTMyOTU3LCJqdGkiOiIxZjIwNjQ1N2M1ZTU0YzE3YTAxZjJjZjNkNjc0NDAwYiIsInVzZXJfaWQiOjI4fQ.YxEL_kxntkHyEnup3f-FdfKMJCogUr1cSC6IJEwXTuU",
      "created_at": "2022-05-07T14:15:57.357Z",
      "expires_at": "2022-08-05T14:15:57Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 90,
    "fields": {
      "user": 6,
      "jti": "d6fd4979da204497a3a23886fd207dd4",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTcxMDMyOSwiaWF0IjoxNjUxOTM0MzI5LCJqdGkiOiJkNmZkNDk3OWRhMjA0NDk3YTNhMjM4ODZmZDIwN2RkNCIsInVzZXJfaWQiOjZ9._aP5RfLqHIa0oDwxsy6YQ7DLQPEe2HoX_d9UkxZRHnA",
      "created_at": "2022-05-07T14:38:49.051Z",
      "expires_at": "2022-08-05T14:38:49Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 91,
    "fields": {
      "user": 3,
      "jti": "9e3dc2c6d92c4ad08fd8b85a95b8b15e",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTcxMTc1MSwiaWF0IjoxNjUxOTM1NzUxLCJqdGkiOiI5ZTNkYzJjNmQ5MmM0YWQwOGZkOGI4NWE5NWI4YjE1ZSIsInVzZXJfaWQiOjN9.qBGu_OCegwj91b3ysmkP4DDbfTBtPuEIjkgUwn2hEoI",
      "created_at": "2022-05-07T15:02:31.008Z",
      "expires_at": "2022-08-05T15:02:31Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 92,
    "fields": {
      "user": 28,
      "jti": "28969fc9b1d44e40aef0a9bef8f33b84",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTcxMTc2NCwiaWF0IjoxNjUxOTM1NzY0LCJqdGkiOiIyODk2OWZjOWIxZDQ0ZTQwYWVmMGE5YmVmOGYzM2I4NCIsInVzZXJfaWQiOjI4fQ.qRbuJD_KzJWCVs4saWTgYewfQzt9k-Wjc5oXG9RbjL8",
      "created_at": "2022-05-07T15:02:44.365Z",
      "expires_at": "2022-08-05T15:02:44Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 93,
    "fields": {
      "user": 6,
      "jti": "cd87c8ec096f46838296ba2b79735982",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTcxMTkyOCwiaWF0IjoxNjUxOTM1OTI4LCJqdGkiOiJjZDg3YzhlYzA5NmY0NjgzODI5NmJhMmI3OTczNTk4MiIsInVzZXJfaWQiOjZ9.fo7AXx6gajSlSyP-YJQLIZ-_XXSDKhFrWuXMsuRDorg",
      "created_at": "2022-05-07T15:05:28.895Z",
      "expires_at": "2022-08-05T15:05:28Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 94,
    "fields": {
      "user": 7,
      "jti": "fa7ecb23b2984b95a3aa9a7ef8faca4a",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTcxMTk0NSwiaWF0IjoxNjUxOTM1OTQ1LCJqdGkiOiJmYTdlY2IyM2IyOTg0Yjk1YTNhYTlhN2VmOGZhY2E0YSIsInVzZXJfaWQiOjd9.lFTOZBG-zbY3-95wPFxKBUGdEsZPnADrEueuq59QjYM",
      "created_at": "2022-05-07T15:05:45.264Z",
      "expires_at": "2022-08-05T15:05:45Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 95,
    "fields": {
      "user": 7,
      "jti": "fb98aeeabbd4476b912fd706ac5fbb68",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTcxMjAyMywiaWF0IjoxNjUxOTM2MDIzLCJqdGkiOiJmYjk4YWVlYWJiZDQ0NzZiOTEyZmQ3MDZhYzVmYmI2OCIsInVzZXJfaWQiOjd9.VFnQ58HsJOtgeRmTFuADB7AxnOqckeZyWm358sHRId0",
      "created_at": "2022-05-07T15:07:03.755Z",
      "expires_at": "2022-08-05T15:07:03Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 96,
    "fields": {
      "user": 6,
      "jti": "9589cece9cb34de9a2264f9be3e7a946",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTcxMjAzMSwiaWF0IjoxNjUxOTM2MDMxLCJqdGkiOiI5NTg5Y2VjZTljYjM0ZGU5YTIyNjRmOWJlM2U3YTk0NiIsInVzZXJfaWQiOjZ9.-Hh1FxxLwx2GfDe-sbI0KxfGAqlR0hh957uPv5euHj4",
      "created_at": "2022-05-07T15:07:11.854Z",
      "expires_at": "2022-08-05T15:07:11Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 97,
    "fields": {
      "user": 8,
      "jti": "433a8ea38c6749dd9537c19ec9352f49",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTcxMjA0OSwiaWF0IjoxNjUxOTM2MDQ5LCJqdGkiOiI0MzNhOGVhMzhjNjc0OWRkOTUzN2MxOWVjOTM1MmY0OSIsInVzZXJfaWQiOjh9.VBBIq5MVfoeQVO2FIt3LncJOApEFskSA5fh1wAB6pmE",
      "created_at": "2022-05-07T15:07:29.324Z",
      "expires_at": "2022-08-05T15:07:29Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 98,
    "fields": {
      "user": 9,
      "jti": "c1c280ce1d8144b69dc2f05fa84d833b",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTcxMjA2OSwiaWF0IjoxNjUxOTM2MDY5LCJqdGkiOiJjMWMyODBjZTFkODE0NGI2OWRjMmYwNWZhODRkODMzYiIsInVzZXJfaWQiOjl9.aQAEx-7hSzC6DjdkQiCtB64iB2tX0k5_XwfMjL-AON4",
      "created_at": "2022-05-07T15:07:49.742Z",
      "expires_at": "2022-08-05T15:07:49Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 99,
    "fields": {
      "user": 10,
      "jti": "8f5ff65ef7fc4e87ac06dda0dc2dc5fd",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTcxMjA5MCwiaWF0IjoxNjUxOTM2MDkwLCJqdGkiOiI4ZjVmZjY1ZWY3ZmM0ZTg3YWMwNmRkYTBkYzJkYzVmZCIsInVzZXJfaWQiOjEwfQ.3cSPqN5c3GCiUCy9SSB4_klyWgvF63SaH4GbfchDe8o",
      "created_at": "2022-05-07T15:08:10.524Z",
      "expires_at": "2022-08-05T15:08:10Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 100,
    "fields": {
      "user": 11,
      "jti": "7b0f9160bd24497a947c3205b031a82a",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTcxMjExMywiaWF0IjoxNjUxOTM2MTEzLCJqdGkiOiI3YjBmOTE2MGJkMjQ0OTdhOTQ3YzMyMDViMDMxYTgyYSIsInVzZXJfaWQiOjExfQ.c3aeLnFLBGNmDhY0i2pyttynVq8ynLp7Kip8ZnCm1tc",
      "created_at": "2022-05-07T15:08:33.424Z",
      "expires_at": "2022-08-05T15:08:33Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 101,
    "fields": {
      "user": 28,
      "jti": "26f04f9909754bea8672c737184b69c1",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTczMTQwNSwiaWF0IjoxNjUxOTU1NDA1LCJqdGkiOiIyNmYwNGY5OTA5NzU0YmVhODY3MmM3MzcxODRiNjljMSIsInVzZXJfaWQiOjI4fQ.7oLvrQNwizU1bj_c6idxuVytLjH0M9n1EGqvGJwPYYg",
      "created_at": "2022-05-07T20:30:05.060Z",
      "expires_at": "2022-08-05T20:30:05Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 102,
    "fields": {
      "user": 28,
      "jti": "8b20d43d40a341038e03e0d866b53e7c",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTc0MjExOCwiaWF0IjoxNjUxOTY2MTE4LCJqdGkiOiI4YjIwZDQzZDQwYTM0MTAzOGUwM2UwZDg2NmI1M2U3YyIsInVzZXJfaWQiOjI4fQ.1QIpdQRV55pPSpB-uAz_QPKGPaBg0cyBhBcNPEvC528",
      "created_at": "2022-05-07T23:28:38.865Z",
      "expires_at": "2022-08-05T23:28:38Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 103,
    "fields": {
      "user": 2,
      "jti": "3a7a13aad90f4e278baac3d5abe1e568",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTc5MzE0NiwiaWF0IjoxNjUyMDE3MTQ2LCJqdGkiOiIzYTdhMTNhYWQ5MGY0ZTI3OGJhYWMzZDVhYmUxZTU2OCIsInVzZXJfaWQiOjJ9.wrFsRbMDY4nSLI94dwwRa-VL4-C2C2FmrYr_XxOYQ2E",
      "created_at": "2022-05-08T13:39:06.228Z",
      "expires_at": "2022-08-06T13:39:06Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 104,
    "fields": {
      "user": 28,
      "jti": "28b8fa4f1ca545299dd9aa1dd943f0ee",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTc5ODk3NCwiaWF0IjoxNjUyMDIyOTc0LCJqdGkiOiIyOGI4ZmE0ZjFjYTU0NTI5OWRkOWFhMWRkOTQzZjBlZSIsInVzZXJfaWQiOjI4fQ.pXVDmgB0XQCYdQe6Zcorv-Ef22-21P94Qc58Y96sQCQ",
      "created_at": "2022-05-08T15:16:14.605Z",
      "expires_at": "2022-08-06T15:16:14Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 105,
    "fields": {
      "user": 2,
      "jti": "72418e0bcbc44a8d82bc17efa9cc162e",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTc5OTIwOSwiaWF0IjoxNjUyMDIzMjA5LCJqdGkiOiI3MjQxOGUwYmNiYzQ0YThkODJiYzE3ZWZhOWNjMTYyZSIsInVzZXJfaWQiOjJ9.csXeUkZVPBmfYqlsCQZ3XM-l1bu0dQYa0WMpcMssGwg",
      "created_at": "2022-05-08T15:20:09.592Z",
      "expires_at": "2022-08-06T15:20:09Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 106,
    "fields": {
      "user": 2,
      "jti": "b11d8d162d804eada79a79ddc53eff92",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTgwMDU2MCwiaWF0IjoxNjUyMDI0NTYwLCJqdGkiOiJiMTFkOGQxNjJkODA0ZWFkYTc5YTc5ZGRjNTNlZmY5MiIsInVzZXJfaWQiOjJ9.niyBgQDbL3q6qox0L9CIUNgteQDso5jBPvnaxZd2KgY",
      "created_at": "2022-05-08T15:42:40.716Z",
      "expires_at": "2022-08-06T15:42:40Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 107,
    "fields": {
      "user": 28,
      "jti": "b17685b927d04abcaf9163212aefe6d4",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTgwMDU4NywiaWF0IjoxNjUyMDI0NTg3LCJqdGkiOiJiMTc2ODViOTI3ZDA0YWJjYWY5MTYzMjEyYWVmZTZkNCIsInVzZXJfaWQiOjI4fQ.sxyaGDftUdRDMyaGNPE65IkhRarZUCfb5HysFYSyChQ",
      "created_at": "2022-05-08T15:43:07.242Z",
      "expires_at": "2022-08-06T15:43:07Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 108,
    "fields": {
      "user": 25,
      "jti": "395cfbae1d074514b9e38b5267196422",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTgwMDU5MSwiaWF0IjoxNjUyMDI0NTkxLCJqdGkiOiIzOTVjZmJhZTFkMDc0NTE0YjllMzhiNTI2NzE5NjQyMiIsInVzZXJfaWQiOjI1fQ.tdjP6mybsER8O5E_YbE0bAcdgOs3TLX3USt60tN4O3A",
      "created_at": "2022-05-08T15:43:11.303Z",
      "expires_at": "2022-08-06T15:43:11Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 109,
    "fields": {
      "user": 26,
      "jti": "6bb1adb6f0e147639612effee12f7af4",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTgwMDU5NSwiaWF0IjoxNjUyMDI0NTk1LCJqdGkiOiI2YmIxYWRiNmYwZTE0NzYzOTYxMmVmZmVlMTJmN2FmNCIsInVzZXJfaWQiOjI2fQ.shcLr85qE83jqRZsBwjmLAUnubydU5Po4WBRoORWETE",
      "created_at": "2022-05-08T15:43:15.784Z",
      "expires_at": "2022-08-06T15:43:15Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 110,
    "fields": {
      "user": 28,
      "jti": "e15d7d1b418b4c08a8864ae380db6c9c",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTgwMDYwMSwiaWF0IjoxNjUyMDI0NjAxLCJqdGkiOiJlMTVkN2QxYjQxOGI0YzA4YTg4NjRhZTM4MGRiNmM5YyIsInVzZXJfaWQiOjI4fQ.DcWIgaSY6EDtlygc-L67ic_dbfN1ur7IZLoO2GHQ5P0",
      "created_at": "2022-05-08T15:43:21.610Z",
      "expires_at": "2022-08-06T15:43:21Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 111,
    "fields": {
      "user": 25,
      "jti": "d0578cb0dc02476596d6557adbec46dd",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTgwMDYwOCwiaWF0IjoxNjUyMDI0NjA4LCJqdGkiOiJkMDU3OGNiMGRjMDI0NzY1OTZkNjU1N2FkYmVjNDZkZCIsInVzZXJfaWQiOjI1fQ.qKnUmHFqhYhOvt1VTyqmd0yK0m_ffz93pBe-4mhj8SY",
      "created_at": "2022-05-08T15:43:28.228Z",
      "expires_at": "2022-08-06T15:43:28Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 112,
    "fields": {
      "user": 2,
      "jti": "9be01a256fcf4eb89a4ddaacaa971120",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTgxOTIwMCwiaWF0IjoxNjUyMDQzMjAwLCJqdGkiOiI5YmUwMWEyNTZmY2Y0ZWI4OWE0ZGRhYWNhYTk3MTEyMCIsInVzZXJfaWQiOjJ9.41qgO0zxFMPZ8vf6RWYu54TlqgvtTraPM1PPFrwU2XM",
      "created_at": "2022-05-08T20:53:20.522Z",
      "expires_at": "2022-08-06T20:53:20Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 113,
    "fields": {
      "user": 2,
      "jti": "b91702b4ef084fdea1cbe3a02c677c25",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg3NjMwNiwiaWF0IjoxNjUyMTAwMzA2LCJqdGkiOiJiOTE3MDJiNGVmMDg0ZmRlYTFjYmUzYTAyYzY3N2MyNSIsInVzZXJfaWQiOjJ9.N0cP9hYXZ7YpG27rwxXvxWBWZioUm7mmnsZAylJZ6Bs",
      "created_at": "2022-05-09T12:45:06.558Z",
      "expires_at": "2022-08-07T12:45:06Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 114,
    "fields": {
      "user": 2,
      "jti": "6b4e667d4d624c0e9b3d56baf24a53f7",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg3NjYzOCwiaWF0IjoxNjUyMTAwNjM4LCJqdGkiOiI2YjRlNjY3ZDRkNjI0YzBlOWIzZDU2YmFmMjRhNTNmNyIsInVzZXJfaWQiOjJ9.PEixS8qkRyj3fQqDA3xmY5k_WvZv3CLOlkCjhSelgFA",
      "created_at": "2022-05-09T12:50:38.838Z",
      "expires_at": "2022-08-07T12:50:38Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 115,
    "fields": {
      "user": 2,
      "jti": "1f67c695c8a840ae9e40382d580c1394",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg3NjcwOCwiaWF0IjoxNjUyMTAwNzA4LCJqdGkiOiIxZjY3YzY5NWM4YTg0MGFlOWU0MDM4MmQ1ODBjMTM5NCIsInVzZXJfaWQiOjJ9.0eno7-Pj9bKdaTVclL4a4xWW6U1jlHbB-dabwAIC4LY",
      "created_at": "2022-05-09T12:51:48.881Z",
      "expires_at": "2022-08-07T12:51:48Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 116,
    "fields": {
      "user": 28,
      "jti": "8cf1c49726e04d8f92f40dca3bd7e17f",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg3ODA5NywiaWF0IjoxNjUyMTAyMDk3LCJqdGkiOiI4Y2YxYzQ5NzI2ZTA0ZDhmOTJmNDBkY2EzYmQ3ZTE3ZiIsInVzZXJfaWQiOjI4fQ._qR3i3C_GPmOFAJSsHBq2ckS01-t5nw2lJ7Fx_il1s0",
      "created_at": "2022-05-09T13:14:57.270Z",
      "expires_at": "2022-08-07T13:14:57Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 117,
    "fields": {
      "user": 2,
      "jti": "cf093ab30f28449c83b372e6c49dcd85",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg3ODYyMiwiaWF0IjoxNjUyMTAyNjIyLCJqdGkiOiJjZjA5M2FiMzBmMjg0NDljODNiMzcyZTZjNDlkY2Q4NSIsInVzZXJfaWQiOjJ9.p-NR5mE3MhaaVX24DPRFRC3HYsQGkb0JC0LF1b6heBo",
      "created_at": "2022-05-09T13:23:42.653Z",
      "expires_at": "2022-08-07T13:23:42Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 118,
    "fields": {
      "user": 3,
      "jti": "89934bbb0b294fa6a484e0016ea7f3ab",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg3OTg0NywiaWF0IjoxNjUyMTAzODQ3LCJqdGkiOiI4OTkzNGJiYjBiMjk0ZmE2YTQ4NGUwMDE2ZWE3ZjNhYiIsInVzZXJfaWQiOjN9.owNnSZw7WuybCO8IBqpI1wxKMIVeYVnV8-B41n39Uss",
      "created_at": "2022-05-09T13:44:07.068Z",
      "expires_at": "2022-08-07T13:44:07Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 119,
    "fields": {
      "user": 2,
      "jti": "c4d46d7c31834e4199f0c57c5a398380",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg3OTg1NCwiaWF0IjoxNjUyMTAzODU0LCJqdGkiOiJjNGQ0NmQ3YzMxODM0ZTQxOTlmMGM1N2M1YTM5ODM4MCIsInVzZXJfaWQiOjJ9.1EUf3ymiEOMNUFyXe-s7HAA1N_3s3aOocMLDoHbvh3k",
      "created_at": "2022-05-09T13:44:14.990Z",
      "expires_at": "2022-08-07T13:44:14Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 120,
    "fields": {
      "user": 2,
      "jti": "3b25b4751dce4037bcd2f05b36113172",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg3OTkxOSwiaWF0IjoxNjUyMTAzOTE5LCJqdGkiOiIzYjI1YjQ3NTFkY2U0MDM3YmNkMmYwNWIzNjExMzE3MiIsInVzZXJfaWQiOjJ9.E2NPPn-thdbDZczZnRnPfh2JYj5zDCyZ-GcqlfxfuuM",
      "created_at": "2022-05-09T13:45:19.750Z",
      "expires_at": "2022-08-07T13:45:19Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 121,
    "fields": {
      "user": 28,
      "jti": "60189f56458d427db04795e6fc8d2fae",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg4MDEzMywiaWF0IjoxNjUyMTA0MTMzLCJqdGkiOiI2MDE4OWY1NjQ1OGQ0MjdkYjA0Nzk1ZTZmYzhkMmZhZSIsInVzZXJfaWQiOjI4fQ.stYv1nsan22nAFB_KiIyI_hcOCgYBVZqYn1mEVFuBSg",
      "created_at": "2022-05-09T13:48:53.391Z",
      "expires_at": "2022-08-07T13:48:53Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 122,
    "fields": {
      "user": 2,
      "jti": "0a84be9ea36342318341ec2b25571a5d",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg4MDQxNywiaWF0IjoxNjUyMTA0NDE3LCJqdGkiOiIwYTg0YmU5ZWEzNjM0MjMxODM0MWVjMmIyNTU3MWE1ZCIsInVzZXJfaWQiOjJ9.zjpZbmyKCnmvBHIg3TV_JLnuSLgPwBzwuhG3gGsTKO0",
      "created_at": "2022-05-09T13:53:37.275Z",
      "expires_at": "2022-08-07T13:53:37Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 123,
    "fields": {
      "user": 28,
      "jti": "5ed27442db8a47019420f07f5183036d",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg4MjE5NCwiaWF0IjoxNjUyMTA2MTk0LCJqdGkiOiI1ZWQyNzQ0MmRiOGE0NzAxOTQyMGYwN2Y1MTgzMDM2ZCIsInVzZXJfaWQiOjI4fQ.Qw0qaAPQpP0z3jNvYVQPJy_29pxoLHy_XPGMEL8qcUg",
      "created_at": "2022-05-09T14:23:14.230Z",
      "expires_at": "2022-08-07T14:23:14Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 124,
    "fields": {
      "user": 2,
      "jti": "9a1f2b8013ec4958b62ce944e973f9eb",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg4MjIzNiwiaWF0IjoxNjUyMTA2MjM2LCJqdGkiOiI5YTFmMmI4MDEzZWM0OTU4YjYyY2U5NDRlOTczZjllYiIsInVzZXJfaWQiOjJ9.9W35g3Etltsm23U50dsIbMvPbS7dzqgmVUnWoEsWrck",
      "created_at": "2022-05-09T14:23:56.049Z",
      "expires_at": "2022-08-07T14:23:56Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 125,
    "fields": {
      "user": 25,
      "jti": "3826495c4a6548c896b0d42da8fca9d4",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg4MzU0NywiaWF0IjoxNjUyMTA3NTQ3LCJqdGkiOiIzODI2NDk1YzRhNjU0OGM4OTZiMGQ0MmRhOGZjYTlkNCIsInVzZXJfaWQiOjI1fQ.6KzYU5lEbOkoSlnsBQfdgdk2h0OCyiG2sZTcZPE9hPg",
      "created_at": "2022-05-09T14:45:47.664Z",
      "expires_at": "2022-08-07T14:45:47Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 126,
    "fields": {
      "user": 6,
      "jti": "ef55eb3dac40474ea67cd0d1dd9d1111",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg4NDE3MywiaWF0IjoxNjUyMTA4MTczLCJqdGkiOiJlZjU1ZWIzZGFjNDA0NzRlYTY3Y2QwZDFkZDlkMTExMSIsInVzZXJfaWQiOjZ9.-5yYVfIcHXYSdoHyCeRfBlg_h7Q4iTJw8DDjojcSJzU",
      "created_at": "2022-05-09T14:56:13.943Z",
      "expires_at": "2022-08-07T14:56:13Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 127,
    "fields": {
      "user": 2,
      "jti": "99d2705c578f41abb22503c3f749e895",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg4NDE5NiwiaWF0IjoxNjUyMTA4MTk2LCJqdGkiOiI5OWQyNzA1YzU3OGY0MWFiYjIyNTAzYzNmNzQ5ZTg5NSIsInVzZXJfaWQiOjJ9.M5Ukk0pjWfSvUgMdmZB8djMzBqoBJrV5lltt99oARiw",
      "created_at": "2022-05-09T14:56:36.100Z",
      "expires_at": "2022-08-07T14:56:36Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 128,
    "fields": {
      "user": 6,
      "jti": "4b6279db5a864bbfbe8c7b49ff8acab9",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg4NDIwMywiaWF0IjoxNjUyMTA4MjAzLCJqdGkiOiI0YjYyNzlkYjVhODY0YmJmYmU4YzdiNDlmZjhhY2FiOSIsInVzZXJfaWQiOjZ9.lJz6DRX1JwCQFgXqhS0lS94uLQ9yTVQsbqj3IJfty7Y",
      "created_at": "2022-05-09T14:56:43.866Z",
      "expires_at": "2022-08-07T14:56:43Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 129,
    "fields": {
      "user": 28,
      "jti": "639eca6f226a43989b2b399b99f1ffae",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg4NDM0MywiaWF0IjoxNjUyMTA4MzQzLCJqdGkiOiI2MzllY2E2ZjIyNmE0Mzk4OWIyYjM5OWI5OWYxZmZhZSIsInVzZXJfaWQiOjI4fQ.GBmAzkg-IPgUAd-33zBHdjGXDXkAh730Ae4LsWdu0_w",
      "created_at": "2022-05-09T14:59:03.811Z",
      "expires_at": "2022-08-07T14:59:03Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 130,
    "fields": {
      "user": 28,
      "jti": "3874bd2bca984380ae825e3ec439b522",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg5MDA2OSwiaWF0IjoxNjUyMTE0MDY5LCJqdGkiOiIzODc0YmQyYmNhOTg0MzgwYWU4MjVlM2VjNDM5YjUyMiIsInVzZXJfaWQiOjI4fQ.IUiPyhFr1GAtiRQx1JCLjAazY8TKuvjmCJwfF4AbQZ4",
      "created_at": "2022-05-09T16:34:29.284Z",
      "expires_at": "2022-08-07T16:34:29Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 131,
    "fields": {
      "user": 25,
      "jti": "ec9a38407f66483ebff9eb20b8b4cf2f",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg5MDA4NiwiaWF0IjoxNjUyMTE0MDg2LCJqdGkiOiJlYzlhMzg0MDdmNjY0ODNlYmZmOWViMjBiOGI0Y2YyZiIsInVzZXJfaWQiOjI1fQ.2VTe9Z1F6_b-U0chtXQxPuLo8-8rClF2hbG2noR_p9k",
      "created_at": "2022-05-09T16:34:46.899Z",
      "expires_at": "2022-08-07T16:34:46Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 132,
    "fields": {
      "user": 28,
      "jti": "d15e01403fe44f9b806520abda915293",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg5MDI0NSwiaWF0IjoxNjUyMTE0MjQ1LCJqdGkiOiJkMTVlMDE0MDNmZTQ0ZjliODA2NTIwYWJkYTkxNTI5MyIsInVzZXJfaWQiOjI4fQ.E9P6Hgb9g2oLdiksnJy9dUvtkGKJUZuYG3gWYUWAwDA",
      "created_at": "2022-05-09T16:37:25.590Z",
      "expires_at": "2022-08-07T16:37:25Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 133,
    "fields": {
      "user": 28,
      "jti": "bb57e02cc8f140dbb9108075a9d94154",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg5MDMxMCwiaWF0IjoxNjUyMTE0MzEwLCJqdGkiOiJiYjU3ZTAyY2M4ZjE0MGRiYjkxMDgwNzVhOWQ5NDE1NCIsInVzZXJfaWQiOjI4fQ.X_poT-MHFqW3YoBb4hLwXDMKtECKLvAQmfb0lU8On4U",
      "created_at": "2022-05-09T16:38:30.354Z",
      "expires_at": "2022-08-07T16:38:30Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 134,
    "fields": {
      "user": 2,
      "jti": "f40c1f7388bc451db7574c74f7e74c96",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg5MDc3MSwiaWF0IjoxNjUyMTE0NzcxLCJqdGkiOiJmNDBjMWY3Mzg4YmM0NTFkYjc1NzRjNzRmN2U3NGM5NiIsInVzZXJfaWQiOjJ9.iUf-5TAMQUV2UlkB01t1oROIyAe2WkBFMz7SNVSE9po",
      "created_at": "2022-05-09T16:46:11.956Z",
      "expires_at": "2022-08-07T16:46:11Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 135,
    "fields": {
      "user": 28,
      "jti": "ea43bfb048614c76aba5902ab13e42ef",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg5MTI2NywiaWF0IjoxNjUyMTE1MjY3LCJqdGkiOiJlYTQzYmZiMDQ4NjE0Yzc2YWJhNTkwMmFiMTNlNDJlZiIsInVzZXJfaWQiOjI4fQ.EZulygZ24hXI8gR-Xls-sakyoQ_LemsWhVSV7iYqr9Y",
      "created_at": "2022-05-09T16:54:27.882Z",
      "expires_at": "2022-08-07T16:54:27Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 136,
    "fields": {
      "user": 2,
      "jti": "ee5a497d36bc40389acebacdbabdad76",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg5MTI3OSwiaWF0IjoxNjUyMTE1Mjc5LCJqdGkiOiJlZTVhNDk3ZDM2YmM0MDM4OWFjZWJhY2RiYWJkYWQ3NiIsInVzZXJfaWQiOjJ9.Hr-AMcbV5_xVUnIT0f6kvFIGUISFQX-UkZSYpbJJWDw",
      "created_at": "2022-05-09T16:54:39.687Z",
      "expires_at": "2022-08-07T16:54:39Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 137,
    "fields": {
      "user": 6,
      "jti": "daa1bdef38ad4aae9384d0c6c9b6f0d5",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg5MTMxOSwiaWF0IjoxNjUyMTE1MzE5LCJqdGkiOiJkYWExYmRlZjM4YWQ0YWFlOTM4NGQwYzZjOWI2ZjBkNSIsInVzZXJfaWQiOjZ9.TYWWUNulpW3vVevzZGWSo7vynpzRcI5YrB4eFS5h3-0",
      "created_at": "2022-05-09T16:55:19.255Z",
      "expires_at": "2022-08-07T16:55:19Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 138,
    "fields": {
      "user": 2,
      "jti": "2f1ad8c350a64fb090d81760308f9c7e",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg5MTM2MCwiaWF0IjoxNjUyMTE1MzYwLCJqdGkiOiIyZjFhZDhjMzUwYTY0ZmIwOTBkODE3NjAzMDhmOWM3ZSIsInVzZXJfaWQiOjJ9.7Wj2L7jskLBYSoDEfmJBWHvL6-yW9kB2sOHshoTOm_s",
      "created_at": "2022-05-09T16:56:00.519Z",
      "expires_at": "2022-08-07T16:56:00Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 139,
    "fields": {
      "user": 28,
      "jti": "b526560fb84f46e78f301c3ddb248ee5",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg5MTQwNSwiaWF0IjoxNjUyMTE1NDA1LCJqdGkiOiJiNTI2NTYwZmI4NGY0NmU3OGYzMDFjM2RkYjI0OGVlNSIsInVzZXJfaWQiOjI4fQ.0ZlGIsUjekYaUUJtg2BRhusQZzB8n-cBbDLDQ5vTjiw",
      "created_at": "2022-05-09T16:56:45.483Z",
      "expires_at": "2022-08-07T16:56:45Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 140,
    "fields": {
      "user": 2,
      "jti": "7aeaf5f80cce49148bd9360f333249fa",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg5MTQ5MywiaWF0IjoxNjUyMTE1NDkzLCJqdGkiOiI3YWVhZjVmODBjY2U0OTE0OGJkOTM2MGYzMzMyNDlmYSIsInVzZXJfaWQiOjJ9.jT8fFVFb4Kn8iSlfF8VL0XrhPVDTmYJPIEew-CPonQg",
      "created_at": "2022-05-09T16:58:13.816Z",
      "expires_at": "2022-08-07T16:58:13Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 141,
    "fields": {
      "user": 2,
      "jti": "e7f812107c0e4c21a3e9de1a01ef3e66",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg5Nzg3MSwiaWF0IjoxNjUyMTIxODcxLCJqdGkiOiJlN2Y4MTIxMDdjMGU0YzIxYTNlOWRlMWEwMWVmM2U2NiIsInVzZXJfaWQiOjJ9.5h8F1qKAUEhWc8snb0Go0ubH8WPuAsXm2zK32Fepx9s",
      "created_at": "2022-05-09T18:44:31.833Z",
      "expires_at": "2022-08-07T18:44:31Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 142,
    "fields": {
      "user": 28,
      "jti": "bffbb604f83d4457a9993d49a69966ab",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg5OTg0NCwiaWF0IjoxNjUyMTIzODQ0LCJqdGkiOiJiZmZiYjYwNGY4M2Q0NDU3YTk5OTNkNDlhNjk5NjZhYiIsInVzZXJfaWQiOjI4fQ.DCsnQHFt3o3ntCZx7yjZm4dCSE6va1vCdezw58_BdFQ",
      "created_at": "2022-05-09T19:17:24.412Z",
      "expires_at": "2022-08-07T19:17:24Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 143,
    "fields": {
      "user": 28,
      "jti": "04bc247999c74e5a8efa8cc038757294",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTg5OTk3MCwiaWF0IjoxNjUyMTIzOTcwLCJqdGkiOiIwNGJjMjQ3OTk5Yzc0ZTVhOGVmYThjYzAzODc1NzI5NCIsInVzZXJfaWQiOjI4fQ.qC9to7640vBljvPU-RpNmeDzuPmpuVN8xlKGsRcEjm0",
      "created_at": "2022-05-09T19:19:30.184Z",
      "expires_at": "2022-08-07T19:19:30Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 144,
    "fields": {
      "user": 2,
      "jti": "ae7eafe86d5e4284a4dba17749043c79",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTkwMDIwNSwiaWF0IjoxNjUyMTI0MjA1LCJqdGkiOiJhZTdlYWZlODZkNWU0Mjg0YTRkYmExNzc0OTA0M2M3OSIsInVzZXJfaWQiOjJ9.bFMRUOBc-s2Q_MGkUzFedE3BGKFifrvlMDjACrVAVpY",
      "created_at": "2022-05-09T19:23:25.205Z",
      "expires_at": "2022-08-07T19:23:25Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 145,
    "fields": {
      "user": 25,
      "jti": "f05d19b2e8154b43a8e6d9b72fb8f209",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTkwMTA3OCwiaWF0IjoxNjUyMTI1MDc4LCJqdGkiOiJmMDVkMTliMmU4MTU0YjQzYThlNmQ5YjcyZmI4ZjIwOSIsInVzZXJfaWQiOjI1fQ.5KXfd2FuVPmR5UpNpHKoVq19PxoqlZ2XzZluL8rirF4",
      "created_at": "2022-05-09T19:37:58.686Z",
      "expires_at": "2022-08-07T19:37:58Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 146,
    "fields": {
      "user": 2,
      "jti": "4b7e7d35221c4c8a898e76e87410770e",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTkwMTA5MiwiaWF0IjoxNjUyMTI1MDkyLCJqdGkiOiI0YjdlN2QzNTIyMWM0YzhhODk4ZTc2ZTg3NDEwNzcwZSIsInVzZXJfaWQiOjJ9.1g70oJhF42jXc2a8UdMCcqDsOa2zmMHcz91zquAC314",
      "created_at": "2022-05-09T19:38:12.580Z",
      "expires_at": "2022-08-07T19:38:12Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 147,
    "fields": {
      "user": 2,
      "jti": "be58c975f96e43788b62cda266a6549a",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTkwMTQwMiwiaWF0IjoxNjUyMTI1NDAyLCJqdGkiOiJiZTU4Yzk3NWY5NmU0Mzc4OGI2MmNkYTI2NmE2NTQ5YSIsInVzZXJfaWQiOjJ9.h3EcWWKja5SfPz6MI3j5CxvJyOwJrjjR3xM7p5aaRSc",
      "created_at": "2022-05-09T19:43:22.502Z",
      "expires_at": "2022-08-07T19:43:22Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 148,
    "fields": {
      "user": 28,
      "jti": "c65b3dd2ed854318888dfab224a6ba9f",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTkwMTQxOCwiaWF0IjoxNjUyMTI1NDE4LCJqdGkiOiJjNjViM2RkMmVkODU0MzE4ODg4ZGZhYjIyNGE2YmE5ZiIsInVzZXJfaWQiOjI4fQ.OAjb1BDR5UiLSUvq_DjUPfV8rd2XhUrLM7enlbPdfdg",
      "created_at": "2022-05-09T19:43:38.232Z",
      "expires_at": "2022-08-07T19:43:38Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 149,
    "fields": {
      "user": 2,
      "jti": "cdce2ca8318d468996d7070824022f7b",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTkwNTQwMywiaWF0IjoxNjUyMTI5NDAzLCJqdGkiOiJjZGNlMmNhODMxOGQ0Njg5OTZkNzA3MDgyNDAyMmY3YiIsInVzZXJfaWQiOjJ9.zyMEIh4Rug5lCjb8JZRgrONUPk2LRI1p7jZYvi3Mctk",
      "created_at": "2022-05-09T20:50:03.629Z",
      "expires_at": "2022-08-07T20:50:03Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 150,
    "fields": {
      "user": 28,
      "jti": "263c15b89ac2458295f9e9ef714726ff",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTkwNTQyMywiaWF0IjoxNjUyMTI5NDIzLCJqdGkiOiIyNjNjMTViODlhYzI0NTgyOTVmOWU5ZWY3MTQ3MjZmZiIsInVzZXJfaWQiOjI4fQ.fruYJ_WxUyNNsUf9FUZvLbsE5ukB5wwKjOCoDE8gwV0",
      "created_at": "2022-05-09T20:50:23.220Z",
      "expires_at": "2022-08-07T20:50:23Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 151,
    "fields": {
      "user": 25,
      "jti": "77625d866e5b4b449240729b75ad6a1d",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTkwNTQzMiwiaWF0IjoxNjUyMTI5NDMyLCJqdGkiOiI3NzYyNWQ4NjZlNWI0YjQ0OTI0MDcyOWI3NWFkNmExZCIsInVzZXJfaWQiOjI1fQ.3N7EcMmS-Eh8qV1EwzynPoa6AxiBi9OY1sTbOXOHLzg",
      "created_at": "2022-05-09T20:50:32.127Z",
      "expires_at": "2022-08-07T20:50:32Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 152,
    "fields": {
      "user": 28,
      "jti": "e46685c839394fd19055a4f40992e71e",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTkwNjkxNiwiaWF0IjoxNjUyMTMwOTE2LCJqdGkiOiJlNDY2ODVjODM5Mzk0ZmQxOTA1NWE0ZjQwOTkyZTcxZSIsInVzZXJfaWQiOjI4fQ.rd1ekYi6XzXNdd6dtOZ14LtZDyi4lXKmVdc5nMb1_LA",
      "created_at": "2022-05-09T21:15:16.881Z",
      "expires_at": "2022-08-07T21:15:16Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 153,
    "fields": {
      "user": 27,
      "jti": "fbaa0976f59b4f6ba2311fd5528a7ed0",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTkwNzU3NiwiaWF0IjoxNjUyMTMxNTc2LCJqdGkiOiJmYmFhMDk3NmY1OWI0ZjZiYTIzMTFmZDU1MjhhN2VkMCIsInVzZXJfaWQiOjI3fQ.7IfOroxlStyG66p1spVKyGj_EI4Tc2gnhgcbwYEy11o",
      "created_at": "2022-05-09T21:26:16.206Z",
      "expires_at": "2022-08-07T21:26:16Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 154,
    "fields": {
      "user": 28,
      "jti": "e460e4c6284d4300997c2598227dd8a8",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTkwODA3MiwiaWF0IjoxNjUyMTMyMDcyLCJqdGkiOiJlNDYwZTRjNjI4NGQ0MzAwOTk3YzI1OTgyMjdkZDhhOCIsInVzZXJfaWQiOjI4fQ.9ASrk5LUd9i7McUTEheKS8Vhd49e90qTNcSF87vUs6k",
      "created_at": "2022-05-09T21:34:32.252Z",
      "expires_at": "2022-08-07T21:34:32Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 155,
    "fields": {
      "user": 2,
      "jti": "58ccbdf12c424b798397b868c84eeaf0",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTkwODA5MiwiaWF0IjoxNjUyMTMyMDkyLCJqdGkiOiI1OGNjYmRmMTJjNDI0Yjc5ODM5N2I4NjhjODRlZWFmMCIsInVzZXJfaWQiOjJ9.wssQAysYceFEXezbAAbS_P4bLmiHgYfVHxpmkzpdRYU",
      "created_at": "2022-05-09T21:34:52.878Z",
      "expires_at": "2022-08-07T21:34:52Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 156,
    "fields": {
      "user": 28,
      "jti": "95c0bc5e8cc045d3a9ff370cae53cf39",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTkwODkzNywiaWF0IjoxNjUyMTMyOTM3LCJqdGkiOiI5NWMwYmM1ZThjYzA0NWQzYTlmZjM3MGNhZTUzY2YzOSIsInVzZXJfaWQiOjI4fQ.WmiiYPByz9UfnhKzpy1ojSJqPYMiPdDzR1bTWUMBXB4",
      "created_at": "2022-05-09T21:48:57.189Z",
      "expires_at": "2022-08-07T21:48:57Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 157,
    "fields": {
      "user": 2,
      "jti": "7f8cee27994c44529d33e6d736072fa4",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTkwODk2OSwiaWF0IjoxNjUyMTMyOTY5LCJqdGkiOiI3ZjhjZWUyNzk5NGM0NDUyOWQzM2U2ZDczNjA3MmZhNCIsInVzZXJfaWQiOjJ9.-GCVIKhs2WxV4GxTizVtmVl8yLfaBFIyOWzJElmTbrQ",
      "created_at": "2022-05-09T21:49:29.097Z",
      "expires_at": "2022-08-07T21:49:29Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 158,
    "fields": {
      "user": 2,
      "jti": "ebd1705c149144b3988200dae4c7fca6",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTkwOTEyNywiaWF0IjoxNjUyMTMzMTI3LCJqdGkiOiJlYmQxNzA1YzE0OTE0NGIzOTg4MjAwZGFlNGM3ZmNhNiIsInVzZXJfaWQiOjJ9.5_J5dgJ-X1oVEvjuAGdzcL8r8iifqOR5-MN1q3yznGA",
      "created_at": "2022-05-09T21:52:07.283Z",
      "expires_at": "2022-08-07T21:52:07Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 159,
    "fields": {
      "user": 28,
      "jti": "4490bac7602b47de84f9862a27fa4d76",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTkxMDU5OSwiaWF0IjoxNjUyMTM0NTk5LCJqdGkiOiI0NDkwYmFjNzYwMmI0N2RlODRmOTg2MmEyN2ZhNGQ3NiIsInVzZXJfaWQiOjI4fQ.36_S2_tEBLHV1mR8M3yUSZXdrFNei3APW8NFp02L3sY",
      "created_at": "2022-05-09T22:16:39.414Z",
      "expires_at": "2022-08-07T22:16:39Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 160,
    "fields": {
      "user": 28,
      "jti": "92f9b677df9146998c522a102842d919",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk2MDg4MiwiaWF0IjoxNjUyMTg0ODgyLCJqdGkiOiI5MmY5YjY3N2RmOTE0Njk5OGM1MjJhMTAyODQyZDkxOSIsInVzZXJfaWQiOjI4fQ.wxtdLNXvgb3pM2tbr8NeuKnKIk4_L7z8ZucDXmpYfUg",
      "created_at": "2022-05-10T12:14:42.309Z",
      "expires_at": "2022-08-08T12:14:42Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 161,
    "fields": {
      "user": 28,
      "jti": "359ba3f8fd1f4b30ba950fe018599e7a",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk2MzExMSwiaWF0IjoxNjUyMTg3MTExLCJqdGkiOiIzNTliYTNmOGZkMWY0YjMwYmE5NTBmZTAxODU5OWU3YSIsInVzZXJfaWQiOjI4fQ.ObPUpCuY0-EEyui4B5a6PsqqNzu56-vIJ_s-ShcU4m8",
      "created_at": "2022-05-10T12:51:51.689Z",
      "expires_at": "2022-08-08T12:51:51Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 162,
    "fields": {
      "user": 2,
      "jti": "d83860b76f2443528675df9c4a5000fb",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk2MzU1OCwiaWF0IjoxNjUyMTg3NTU4LCJqdGkiOiJkODM4NjBiNzZmMjQ0MzUyODY3NWRmOWM0YTUwMDBmYiIsInVzZXJfaWQiOjJ9.9pd3rGvR6hz0B5kput0eCiaar4pCvvh9jYVCi0vuWN8",
      "created_at": "2022-05-10T12:59:18.157Z",
      "expires_at": "2022-08-08T12:59:18Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 163,
    "fields": {
      "user": 2,
      "jti": "4567c8f99a124be5a8a0104bd9f60418",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk2MzY2NiwiaWF0IjoxNjUyMTg3NjY2LCJqdGkiOiI0NTY3YzhmOTlhMTI0YmU1YThhMDEwNGJkOWY2MDQxOCIsInVzZXJfaWQiOjJ9.vDtUXot9iRUxZkq71fa_Wpy2BlrQO8xbB7oWRcpGlYI",
      "created_at": "2022-05-10T13:01:06.235Z",
      "expires_at": "2022-08-08T13:01:06Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 164,
    "fields": {
      "user": 2,
      "jti": "bf2a4bd828eb478c9874af261c0f02f1",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk2MzcwMCwiaWF0IjoxNjUyMTg3NzAwLCJqdGkiOiJiZjJhNGJkODI4ZWI0NzhjOTg3NGFmMjYxYzBmMDJmMSIsInVzZXJfaWQiOjJ9.l0kBOBRgtg4xfbADYVD4_dBygELr7RNm5-HGDZ6utvM",
      "created_at": "2022-05-10T13:01:40.140Z",
      "expires_at": "2022-08-08T13:01:40Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 165,
    "fields": {
      "user": 28,
      "jti": "8142271e87ef476c8e8fbe34e0f6b640",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk2NDI4NywiaWF0IjoxNjUyMTg4Mjg3LCJqdGkiOiI4MTQyMjcxZTg3ZWY0NzZjOGU4ZmJlMzRlMGY2YjY0MCIsInVzZXJfaWQiOjI4fQ.W9kY17wu8a3SGJurbTrO-pSurq-ZdxBFKaXUEieBbCI",
      "created_at": "2022-05-10T13:11:27.481Z",
      "expires_at": "2022-08-08T13:11:27Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 166,
    "fields": {
      "user": 2,
      "jti": "ac450f9bd05e423fb9d6bfdc66bdc98e",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk2NzExNiwiaWF0IjoxNjUyMTkxMTE2LCJqdGkiOiJhYzQ1MGY5YmQwNWU0MjNmYjlkNmJmZGM2NmJkYzk4ZSIsInVzZXJfaWQiOjJ9.qded_0VV70gbZhPfnivHMoHCkSkkXVXsGU5LDDYrzgw",
      "created_at": "2022-05-10T13:58:36.741Z",
      "expires_at": "2022-08-08T13:58:36Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 167,
    "fields": {
      "user": 28,
      "jti": "63a340d4b57e4b30a222050360044f4f",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk2NzEyNiwiaWF0IjoxNjUyMTkxMTI2LCJqdGkiOiI2M2EzNDBkNGI1N2U0YjMwYTIyMjA1MDM2MDA0NGY0ZiIsInVzZXJfaWQiOjI4fQ.I2AnOW72yQlozVNYOa4GNQ3i_d3tYkc8TCc99bpeCCM",
      "created_at": "2022-05-10T13:58:46.475Z",
      "expires_at": "2022-08-08T13:58:46Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 168,
    "fields": {
      "user": 2,
      "jti": "91c082b4b9394cb2beed13c5bad49d50",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk2NzE1NSwiaWF0IjoxNjUyMTkxMTU1LCJqdGkiOiI5MWMwODJiNGI5Mzk0Y2IyYmVlZDEzYzViYWQ0OWQ1MCIsInVzZXJfaWQiOjJ9.wU91HFb4FNnlrPIU8wJeZRhSzJ47xy-doI5sdKRkHvU",
      "created_at": "2022-05-10T13:59:15.009Z",
      "expires_at": "2022-08-08T13:59:15Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 169,
    "fields": {
      "user": 28,
      "jti": "eb1ecb89cc574d85be0e78e4313f7234",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk2NzgwNiwiaWF0IjoxNjUyMTkxODA2LCJqdGkiOiJlYjFlY2I4OWNjNTc0ZDg1YmUwZTc4ZTQzMTNmNzIzNCIsInVzZXJfaWQiOjI4fQ.vi1KFZg1vQfrSY23z-uddfTrU6tYe1giwmJTyQlmhS8",
      "created_at": "2022-05-10T14:10:06.834Z",
      "expires_at": "2022-08-08T14:10:06Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 170,
    "fields": {
      "user": 25,
      "jti": "96f366ac7d3048918feeae408107348c",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk2NzkxMSwiaWF0IjoxNjUyMTkxOTExLCJqdGkiOiI5NmYzNjZhYzdkMzA0ODkxOGZlZWFlNDA4MTA3MzQ4YyIsInVzZXJfaWQiOjI1fQ.Y6J3i2fJMKw3thVo66ltYhBu-qWaD8A1FkvnsTtMydk",
      "created_at": "2022-05-10T14:11:51.861Z",
      "expires_at": "2022-08-08T14:11:51Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 171,
    "fields": {
      "user": 2,
      "jti": "4daa3b6728b043d5b66a4f5097a4a7fe",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk2ODkxOSwiaWF0IjoxNjUyMTkyOTE5LCJqdGkiOiI0ZGFhM2I2NzI4YjA0M2Q1YjY2YTRmNTA5N2E0YTdmZSIsInVzZXJfaWQiOjJ9.yaU4rf6W8-Rp7dyqCl61M_gfBrRo9gLYPY8nT9jcres",
      "created_at": "2022-05-10T14:28:39.654Z",
      "expires_at": "2022-08-08T14:28:39Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 172,
    "fields": {
      "user": 28,
      "jti": "e0fc97e4db85433299c323aed28df3a9",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk2OTU2OSwiaWF0IjoxNjUyMTkzNTY5LCJqdGkiOiJlMGZjOTdlNGRiODU0MzMyOTljMzIzYWVkMjhkZjNhOSIsInVzZXJfaWQiOjI4fQ.SNeyznW8O4wZgjZ9v7KGcS6-L3_oIfDcM537fHCSlMo",
      "created_at": "2022-05-10T14:39:29.111Z",
      "expires_at": "2022-08-08T14:39:29Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 173,
    "fields": {
      "user": 2,
      "jti": "66c6573a91dd4a548740237244e7e11e",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk2OTgxNiwiaWF0IjoxNjUyMTkzODE2LCJqdGkiOiI2NmM2NTczYTkxZGQ0YTU0ODc0MDIzNzI0NGU3ZTExZSIsInVzZXJfaWQiOjJ9.HjRtsSI7zoBzOqUTPen5x45Bpfudbyy64K4HR6zRmik",
      "created_at": "2022-05-10T14:43:36.116Z",
      "expires_at": "2022-08-08T14:43:36Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 174,
    "fields": {
      "user": 26,
      "jti": "4459d29123424dbd82484f649a6f1957",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk2OTgzNCwiaWF0IjoxNjUyMTkzODM0LCJqdGkiOiI0NDU5ZDI5MTIzNDI0ZGJkODI0ODRmNjQ5YTZmMTk1NyIsInVzZXJfaWQiOjI2fQ.xNEXBdYKFcBbgkJeTvvAgEtqW8jGJxBkHqMA530sJBY",
      "created_at": "2022-05-10T14:43:54.110Z",
      "expires_at": "2022-08-08T14:43:54Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 175,
    "fields": {
      "user": 2,
      "jti": "06fe98ef2aee433494ce79c6d2ef0cfe",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk3MDM0MywiaWF0IjoxNjUyMTk0MzQzLCJqdGkiOiIwNmZlOThlZjJhZWU0MzM0OTRjZTc5YzZkMmVmMGNmZSIsInVzZXJfaWQiOjJ9.5tdZlQk2BTf83klBF9uAYS9AaMz1rh8P2DZd7hl1cAM",
      "created_at": "2022-05-10T14:52:23.354Z",
      "expires_at": "2022-08-08T14:52:23Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 176,
    "fields": {
      "user": 27,
      "jti": "0b74ddf1ed7e4645b266729712cebd28",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk3MDY5MywiaWF0IjoxNjUyMTk0NjkzLCJqdGkiOiIwYjc0ZGRmMWVkN2U0NjQ1YjI2NjcyOTcxMmNlYmQyOCIsInVzZXJfaWQiOjI3fQ.ifDaYIPvzRweCYOkejuHDuQeMdyqqdX1X6ATZqUH3hA",
      "created_at": "2022-05-10T14:58:13.419Z",
      "expires_at": "2022-08-08T14:58:13Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 177,
    "fields": {
      "user": 26,
      "jti": "3e7b86799aeb48d1bf949e1f732f8027",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk3MDgzMiwiaWF0IjoxNjUyMTk0ODMyLCJqdGkiOiIzZTdiODY3OTlhZWI0OGQxYmY5NDllMWY3MzJmODAyNyIsInVzZXJfaWQiOjI2fQ.WrM9kiTQg07Q-JbqpDMs9_NQzbFWnx3JGIRaJ8fVOxY",
      "created_at": "2022-05-10T15:00:32.934Z",
      "expires_at": "2022-08-08T15:00:32Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 178,
    "fields": {
      "user": 10,
      "jti": "deb1e5d8345549b297586a4066d26c69",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk3MDkzNSwiaWF0IjoxNjUyMTk0OTM1LCJqdGkiOiJkZWIxZTVkODM0NTU0OWIyOTc1ODZhNDA2NmQyNmM2OSIsInVzZXJfaWQiOjEwfQ.ohWbcWeoNjvbQnfkyRsH-Yh2tN8ZbjJ3erwLFHZ_KZM",
      "created_at": "2022-05-10T15:02:15.415Z",
      "expires_at": "2022-08-08T15:02:15Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 179,
    "fields": {
      "user": 2,
      "jti": "1a7681af7127485a8c5cb85bc280c0a9",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk3MTE1NywiaWF0IjoxNjUyMTk1MTU3LCJqdGkiOiIxYTc2ODFhZjcxMjc0ODVhOGM1Y2I4NWJjMjgwYzBhOSIsInVzZXJfaWQiOjJ9.c1g9xSPxBeu6WjinRVVIAgKS59sRRZoT1kGaEygvN9Y",
      "created_at": "2022-05-10T15:05:57.396Z",
      "expires_at": "2022-08-08T15:05:57Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 180,
    "fields": {
      "user": 28,
      "jti": "dbb1fd81776a43abb03d7f6490719fc7",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk3MzQ2NCwiaWF0IjoxNjUyMTk3NDY0LCJqdGkiOiJkYmIxZmQ4MTc3NmE0M2FiYjAzZDdmNjQ5MDcxOWZjNyIsInVzZXJfaWQiOjI4fQ.IcXLZmn4XXztRDLo1McF8adheHQcxznyptwOSuwnMqs",
      "created_at": "2022-05-10T15:44:24.875Z",
      "expires_at": "2022-08-08T15:44:24Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 181,
    "fields": {
      "user": 9,
      "jti": "7b5078108f804065bcb921de9e32e074",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk3MzQ3MywiaWF0IjoxNjUyMTk3NDczLCJqdGkiOiI3YjUwNzgxMDhmODA0MDY1YmNiOTIxZGU5ZTMyZTA3NCIsInVzZXJfaWQiOjl9.PojrAT2jpEF1XQPbVKYK1zTH1Ao6qaxUwTPwuq4rWk0",
      "created_at": "2022-05-10T15:44:33.727Z",
      "expires_at": "2022-08-08T15:44:33Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 182,
    "fields": {
      "user": 2,
      "jti": "d96409d317aa4571961a9fe0ba1d7a9f",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk4MDUxMiwiaWF0IjoxNjUyMjA0NTEyLCJqdGkiOiJkOTY0MDlkMzE3YWE0NTcxOTYxYTlmZTBiYTFkN2E5ZiIsInVzZXJfaWQiOjJ9.PVDWLmZoC95Cc2c2Q7kL1beNz3OTw9xxdDiKcepoh3k",
      "created_at": "2022-05-10T17:41:52.138Z",
      "expires_at": "2022-08-08T17:41:52Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 183,
    "fields": {
      "user": 2,
      "jti": "2e1755d3054947fbbd1fa1d945d3a909",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk4MDg0MSwiaWF0IjoxNjUyMjA0ODQxLCJqdGkiOiIyZTE3NTVkMzA1NDk0N2ZiYmQxZmExZDk0NWQzYTkwOSIsInVzZXJfaWQiOjJ9.Gp3uYS-PKH6rl8K-avZxvft2gXwf2OnmwbAZd-er8O8",
      "created_at": "2022-05-10T17:47:21.554Z",
      "expires_at": "2022-08-08T17:47:21Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 184,
    "fields": {
      "user": 2,
      "jti": "88f14fd1946e4ad6874dafc640398d77",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTk4Mjk2MCwiaWF0IjoxNjUyMjA2OTYwLCJqdGkiOiI4OGYxNGZkMTk0NmU0YWQ2ODc0ZGFmYzY0MDM5OGQ3NyIsInVzZXJfaWQiOjJ9.vx5B2uHs41LVIdd6cBp1IOmu-VaLboS1CvXdA-1KsmU",
      "created_at": "2022-05-10T18:22:40.582Z",
      "expires_at": "2022-08-08T18:22:40Z"
    }
  }
]
