[
  {
    "model": "auth.group",
    "pk": 1,
    "fields": {
      "name": "Quebec",
      "permissions": []
    }
  },
  {
    "model": "auth.group",
    "pk": 2,
    "fields": {
      "name": "Papa",
      "permissions": []
    }
  },
  {
    "model": "auth.group",
    "pk": 3,
    "fields": {
      "name": "November",
      "permissions": []
    }
  },
  {
    "model": "sessions.session",
    "pk": "ozxi963skn6p18bs2k4l5gmvuglg5n0y",
    "fields": {
      "session_data": ".eJxVjDsOwyAQBe9CHSG-S0iZ3mdAmF2CkwgkY1dR7m5bcpG0b2beh4W4LiWsneYwIbsxyS6_2xjTi-oB8Bnro_HU6jJPIz8UftLOh4b0vp_u30GJvew1gbTZoSYgiSiVQQtGCYMOSNlkck4RtPfgtUNpQTsnhEDlr5C19Zl9N9S9Nv4:1nkX9F:i5gcYBIao0ka0RVHwFMv9wR3gXxeFNq3IZ6Jr8Z-2CU",
      "expire_date": "2022-05-13T20:23:29.506Z"
    }
  },
  {
    "model": "app.user",
    "pk": 2,
    "fields": {
      "password": "pbkdf2_sha256$320000$7eNwVKJOZvPtl1TRcZE6Zl$3EhHwvVamwzmCO4r801NzoG6qHjbf8DPRICjNBc48Ko=",
      "last_login": null,
      "is_superuser": true,
      "username": "ankur@codeplatoon.org",
      "first_name": "Ankur",
      "last_name": "Shah",
      "email": "ankur@codeplatoon.org",
      "is_staff": true,
      "is_active": true,
      "date_joined": "2022-05-01T13:29:44Z",
      "avatar": "me.png",
      "metadata": {
        "favorite_food": "donuts"
      },
      "default_group": 1,
      "markdown": "# hello\r\n\r\n## hi\r\n\r\n~~~\r\nhhh\r\n~~~",
      "timezone": "CST",
      "groups": [
        1,
        3
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 3,
    "fields": {
      "password": "pbkdf2_sha256$320000$Im8rnH8wyp4UVRspcBBMNc$kYuEtnCs1nOKQsvWdbHZ78Knznpuj3wmAWtt6I2TXqw=",
      "last_login": null,
      "is_superuser": true,
      "username": "raphael@codeplatoon.org",
      "first_name": "Raphael",
      "last_name": "Serota",
      "email": "raphael@codeplatoon.org",
      "is_staff": true,
      "is_active": true,
      "date_joined": "2022-05-01T13:30:00Z",
      "avatar": "default.png",
      "metadata": null,
      "default_group": 1,
      "markdown": "",
      "timezone": "CST",
      "groups": [
        1,
        2
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 4,
    "fields": {
      "password": "pbkdf2_sha256$320000$rxlYMI7IROSM7jgrrYNYdE$pfS9QxgHjEfG9bGW/zqDWD+GNXDF+tLfno37l5XGats=",
      "last_login": null,
      "is_superuser": true,
      "username": "jon@codeplatoon.org",
      "first_name": "Jonathan",
      "last_name": "Young",
      "email": "jon@codeplatoon.org",
      "is_staff": true,
      "is_active": true,
      "date_joined": "2022-05-01T13:30:30Z",
      "avatar": "default.png",
      "metadata": null,
      "default_group": null,
      "markdown": "",
      "timezone": "CST",
      "groups": [],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 5,
    "fields": {
      "password": "pbkdf2_sha256$320000$lS4ozFtv1Gdj1qqOwPOc5x$j/C10gCOX90VynQRpQcVaXI2/neHQ0jnf29KPb/zbVY=",
      "last_login": null,
      "is_superuser": true,
      "username": "rod@codeplatoon.org",
      "first_name": "Rodrigo",
      "last_name": "Levy",
      "email": "rod@codeplatoon.org",
      "is_staff": true,
      "is_active": true,
      "date_joined": "2022-05-01T13:30:40Z",
      "avatar": "default.png",
      "metadata": null,
      "default_group": null,
      "markdown": "",
      "timezone": "CST",
      "groups": [],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 6,
    "fields": {
      "password": "pbkdf2_sha256$320000$quqZKdyq2n7ks4HJXSIonc$tdYqdlzhkiaeTQATuzsmwkeB+jIb4RpKsHPyY63s9EU=",
      "last_login": null,
      "is_superuser": false,
      "username": "quebec_student_1@email.com",
      "first_name": "Q One",
      "last_name": "Student",
      "email": "quebec_student_1@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-01T14:04:11Z",
      "avatar": "default.png",
      "metadata": null,
      "default_group": 1,
      "markdown": "",
      "timezone": "CST",
      "groups": [
        1
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 7,
    "fields": {
      "password": "pbkdf2_sha256$320000$2ZPGFr5ZDcQH39qXBuxymh$pY8afbT8hesLJVc3K9r5Db306xp5Szaixz0OFwVkoEo=",
      "last_login": null,
      "is_superuser": false,
      "username": "quebec_student_2@email.com",
      "first_name": "Q Two",
      "last_name": "Student",
      "email": "quebec_student_2@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-01T14:04:25Z",
      "avatar": "default.png",
      "metadata": null,
      "default_group": 1,
      "markdown": "",
      "timezone": "CST",
      "groups": [
        1
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 8,
    "fields": {
      "password": "pbkdf2_sha256$320000$rDFJ0FZ91frpH0MyCXoEzn$o8AVXi9tZ5cdUYewqc41/CIGjnSYImxxN5Lp6pTXLkQ=",
      "last_login": null,
      "is_superuser": false,
      "username": "quebec_student_3@email.com",
      "first_name": "Q Three",
      "last_name": "Student",
      "email": "quebec_student_3@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-01T14:04:48Z",
      "avatar": "breakpoint.png",
      "metadata": {
        "favorite_food2": "don",
        "boo": "two",
        "see": "thdree"
      },
      "default_group": 1,
      "markdown": "# asdft\r\n\r\n## Hello.",
      "timezone": "CST",
      "groups": [
        1
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 9,
    "fields": {
      "password": "pbkdf2_sha256$320000$DfToUKAC9NJmkPziAcR4iI$xq11axaIEZCbnbj8b4augoKQyyIzo21edvWk80hRreQ=",
      "last_login": null,
      "is_superuser": false,
      "username": "quebec_student_4@email.com",
      "first_name": "Q Four",
      "last_name": "Student",
      "email": "quebec_student_4@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-01T14:05:14Z",
      "avatar": "default.png",
      "metadata": null,
      "default_group": 1,
      "markdown": "",
      "timezone": "CST",
      "groups": [
        1
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 10,
    "fields": {
      "password": "pbkdf2_sha256$320000$xBblTmUuuOwonN0ZHbkApi$hTp9ImamuYnAKSfQk/wSTTnbpGM6uX+l/VN8AxbqlIg=",
      "last_login": null,
      "is_superuser": false,
      "username": "quebec_student_5@email.com",
      "first_name": "Q Five",
      "last_name": "Student",
      "email": "quebec_student_5@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-01T14:05:26Z",
      "avatar": "default.png",
      "metadata": null,
      "default_group": 1,
      "markdown": "",
      "timezone": "CST",
      "groups": [
        1
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 11,
    "fields": {
      "password": "pbkdf2_sha256$320000$wE8cvy4TWouMeWBv4uZksC$FkYfnqVqkKVFsrLspLKt4m91dOzJWhqi2/PJaxPuK3g=",
      "last_login": null,
      "is_superuser": false,
      "username": "quebec_student_6@email.com",
      "first_name": "Q Six",
      "last_name": "Student",
      "email": "quebec_student_6@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-01T14:05:37Z",
      "avatar": "default.png",
      "metadata": null,
      "default_group": 1,
      "markdown": "",
      "timezone": "CST",
      "groups": [
        1
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 12,
    "fields": {
      "password": "pbkdf2_sha256$320000$l9JOzrRBkFPEEchn1UqYzU$KddMnj3mgAye9w5Q/qR9LMji56ifbWpqyU9zhtzOdgM=",
      "last_login": null,
      "is_superuser": false,
      "username": "quebec_ta_1@email.com",
      "first_name": "Q TA 1",
      "last_name": "TA 1",
      "email": "quebec_ta_1@email.com",
      "is_staff": true,
      "is_active": true,
      "date_joined": "2022-05-01T14:05:56Z",
      "avatar": "default.png",
      "metadata": null,
      "default_group": 1,
      "markdown": "",
      "timezone": "CST",
      "groups": [
        1
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 13,
    "fields": {
      "password": "pbkdf2_sha256$320000$u3ZIfpi18rMgsYQdg2ZEvx$uZuaT8P+EmkhgZPzyhNgkVlVYM8aQJmU4az+SIrKFbU=",
      "last_login": null,
      "is_superuser": false,
      "username": "quebec_ta_2@email.com",
      "first_name": "Q TA 2",
      "last_name": "TA 2",
      "email": "quebec_ta_2@email.com",
      "is_staff": true,
      "is_active": true,
      "date_joined": "2022-05-01T14:06:09Z",
      "avatar": "default.png",
      "metadata": null,
      "default_group": 1,
      "markdown": "",
      "timezone": "CST",
      "groups": [
        1
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 14,
    "fields": {
      "password": "pbkdf2_sha256$320000$CcDNRPJXu2w4tH0tnIYunu$2XOKxMRjg3Hw8Hy74QAkmAm1L2xfdv400vh5ZWE/DgI=",
      "last_login": null,
      "is_superuser": false,
      "username": "papa_student_1@email.com",
      "first_name": "P One",
      "last_name": "Student",
      "email": "papa_student_1@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-01T14:11:04Z",
      "avatar": "default.png",
      "metadata": null,
      "default_group": 2,
      "markdown": "",
      "timezone": "CST",
      "groups": [
        2
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 15,
    "fields": {
      "password": "pbkdf2_sha256$320000$5gcR3c4GcNzi5kKc33xN8j$OwJRniSTkiNZep38HhsrhxEpNZON+mrlWxrsX8K45Mg=",
      "last_login": null,
      "is_superuser": false,
      "username": "papa_student_2@email.com",
      "first_name": "P Two",
      "last_name": "Student",
      "email": "papa_student_2@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-01T14:11:16Z",
      "avatar": "default.png",
      "metadata": null,
      "default_group": 2,
      "markdown": "",
      "timezone": "CST",
      "groups": [
        2
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 16,
    "fields": {
      "password": "pbkdf2_sha256$320000$oTnhtTG9x85GTr11tP0QGG$9yBBzcSmEep90BPDuz6Xpg0xpFKTxUVYuyHuB48kHBA=",
      "last_login": null,
      "is_superuser": false,
      "username": "papa_ta_1@email.com",
      "first_name": "P TA 1",
      "last_name": "P TA 1",
      "email": "papa_ta_1@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-01T14:11:33Z",
      "avatar": "default.png",
      "metadata": null,
      "default_group": 2,
      "markdown": "",
      "timezone": "CST",
      "groups": [
        2
      ],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 19,
    "fields": {
      "password": "pbkdf2_sha256$320000$9ZjwohzoWerFUOnl89UJ6c$aWBiNhmltbCczevn1mfh2OqsEd9sNL91Vw8gend5VJU=",
      "last_login": null,
      "is_superuser": false,
      "username": "abc",
      "first_name": "John",
      "last_name": "Doe",
      "email": "abc",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-01T15:32:23.142Z",
      "avatar": "default.png",
      "metadata": {
        "cohort_requested": "1"
      },
      "default_group": null,
      "markdown": "",
      "timezone": "CST",
      "groups": [],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 20,
    "fields": {
      "password": "pbkdf2_sha256$320000$wVbK63Es8jhxMrTOE6UISJ$pxDF7b0UY/s2f+kKfb1xPfw60m2EJxYWd58N4yzuX/Q=",
      "last_login": null,
      "is_superuser": false,
      "username": "iwantin@email.com",
      "first_name": "IWant",
      "last_name": "In",
      "email": "iwantin@email.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-04T00:03:15.429Z",
      "avatar": "default.png",
      "metadata": {
        "cohort_requested": "3"
      },
      "default_group": null,
      "markdown": "",
      "timezone": "CST",
      "groups": [],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 21,
    "fields": {
      "password": "pbkdf2_sha256$320000$fb8iwkvYbBii2yXqTJOf8R$LGR1241VD/dSFmlp5bIh0FljnPNZQzKhCCrz789Dz30=",
      "last_login": null,
      "is_superuser": false,
      "username": "SuperHacker1337@ddos.me",
      "first_name": "Super",
      "last_name": "Hacker",
      "email": "SuperHacker1337@ddos.me",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-04T00:04:03.168Z",
      "avatar": "default.png",
      "metadata": {
        "cohort_requested": "1"
      },
      "default_group": null,
      "markdown": "",
      "timezone": "CST",
      "groups": [],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 22,
    "fields": {
      "password": "pbkdf2_sha256$320000$678gJ9ObfW1En8CbHzmsiE$4PMCxbhMg2iNMneGS/uU4Qsd/7glTtJ17qjtZBA/kDo=",
      "last_login": null,
      "is_superuser": false,
      "username": "itypefast@saywut.com",
      "first_name": "Twelve",
      "last_name": "Fingers",
      "email": "itypefast@saywut.com",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-04T00:04:51.645Z",
      "avatar": "default.png",
      "metadata": {
        "cohort_requested": "3"
      },
      "default_group": null,
      "markdown": "",
      "timezone": "CST",
      "groups": [],
      "user_permissions": []
    }
  },
  {
    "model": "app.user",
    "pk": 23,
    "fields": {
      "password": "pbkdf2_sha256$320000$G8JjAAJhon7RyTUBVaM5Lb$W8BTbJmILIrXthFfv5i6FqbhnODwSCQoMVC/UfY5AWo=",
      "last_login": null,
      "is_superuser": false,
      "username": "imdabomb@rock.you",
      "first_name": "Big",
      "last_name": "Ego",
      "email": "imdabomb@rock.you",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2022-05-04T00:05:30.666Z",
      "avatar": "default.png",
      "metadata": {
        "cohort_requested": "2"
      },
      "default_group": null,
      "markdown": "",
      "timezone": "CST",
      "groups": [],
      "user_permissions": []
    }
  },
  {
    "model": "app.userlink",
    "pk": 1,
    "fields": {
      "user": 2,
      "name": "Linked In",
      "is_public": true,
      "url": "https://www.linkedin.com/in/shah-ankur/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 2,
    "fields": {
      "user": 3,
      "name": "Linked In",
      "is_public": true,
      "url": "https://www.linkedin.com/in/raphael-serota/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 3,
    "fields": {
      "user": 6,
      "name": "Linked In",
      "is_public": true,
      "url": "https://www.linkedin.com/in/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 4,
    "fields": {
      "user": 4,
      "name": "https://www.linkedin.com/",
      "is_public": true,
      "url": "https://www.linkedin.com/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 5,
    "fields": {
      "user": 14,
      "name": "https://www.linkedin.com/",
      "is_public": true,
      "url": "https://www.linkedin.com/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 6,
    "fields": {
      "user": 15,
      "name": "https://www.linkedin.com/",
      "is_public": true,
      "url": "https://www.linkedin.com/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 7,
    "fields": {
      "user": 16,
      "name": "https://www.linkedin.com/",
      "is_public": true,
      "url": "https://www.linkedin.com/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 9,
    "fields": {
      "user": 7,
      "name": "https://www.linkedin.com/",
      "is_public": true,
      "url": "https://www.linkedin.com/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 10,
    "fields": {
      "user": 12,
      "name": "https://www.linkedin.com/",
      "is_public": true,
      "url": "https://www.linkedin.com/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 11,
    "fields": {
      "user": 13,
      "name": "https://www.linkedin.com/",
      "is_public": true,
      "url": "https://www.linkedin.com/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 12,
    "fields": {
      "user": 5,
      "name": "https://www.linkedin.com/",
      "is_public": true,
      "url": "https://www.linkedin.com/",
      "link_type": 1
    }
  },
  {
    "model": "app.userlink",
    "pk": 13,
    "fields": {
      "user": 2,
      "name": "GitHub",
      "is_public": true,
      "url": "https://github.com/ankur-cp",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 14,
    "fields": {
      "user": 4,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 15,
    "fields": {
      "user": 14,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 16,
    "fields": {
      "user": 15,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 17,
    "fields": {
      "user": 16,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 18,
    "fields": {
      "user": 6,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 19,
    "fields": {
      "user": 7,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 20,
    "fields": {
      "user": 7,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 21,
    "fields": {
      "user": 8,
      "name": "https://github.com/d",
      "is_public": false,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 22,
    "fields": {
      "user": 9,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 23,
    "fields": {
      "user": 10,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 24,
    "fields": {
      "user": 11,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 25,
    "fields": {
      "user": 12,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 26,
    "fields": {
      "user": 13,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 27,
    "fields": {
      "user": 3,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 28,
    "fields": {
      "user": 5,
      "name": "https://github.com/",
      "is_public": true,
      "url": "https://github.com/",
      "link_type": 2
    }
  },
  {
    "model": "app.userlink",
    "pk": 29,
    "fields": {
      "user": 8,
      "name": "linkedin",
      "is_public": false,
      "url": "http://linkedin.com/myprofile",
      "link_type": 1
    }
  },
  {
    "model": "app.checkin",
    "pk": 1,
    "fields": {
      "date": "2022-05-01",
      "group": 1,
      "user": [
        6
      ]
    }
  },
  {
    "model": "app.checkin",
    "pk": 5,
    "fields": {
      "date": "2022-05-02",
      "group": 1,
      "user": [
        6
      ]
    }
  },
  {
    "model": "app.checkin",
    "pk": 6,
    "fields": {
      "date": "2022-05-03",
      "group": 1,
      "user": [
        6
      ]
    }
  },
  {
    "model": "app.checkin",
    "pk": 7,
    "fields": {
      "date": "2022-05-04",
      "group": 1,
      "user": []
    }
  },
  {
    "model": "app.topic",
    "pk": 1,
    "fields": {
      "group": 1,
      "title": "Javascript",
      "description": "",
      "sub_topics": [
        11
      ]
    }
  },
  {
    "model": "app.topic",
    "pk": 2,
    "fields": {
      "group": 1,
      "title": "CLI (Command Line Interface)",
      "description": "",
      "sub_topics": [
        3,
        4
      ]
    }
  },
  {
    "model": "app.topic",
    "pk": 3,
    "fields": {
      "group": 1,
      "title": "GIT",
      "description": "",
      "sub_topics": [
        2
      ]
    }
  },
  {
    "model": "app.topic",
    "pk": 4,
    "fields": {
      "group": 1,
      "title": "Linux",
      "description": "",
      "sub_topics": [
        2
      ]
    }
  },
  {
    "model": "app.topic",
    "pk": 5,
    "fields": {
      "group": 1,
      "title": "HTML/CSS",
      "description": "",
      "sub_topics": []
    }
  },
  {
    "model": "app.topic",
    "pk": 6,
    "fields": {
      "group": 1,
      "title": "Databases/SQL",
      "description": "",
      "sub_topics": []
    }
  },
  {
    "model": "app.topic",
    "pk": 7,
    "fields": {
      "group": 1,
      "title": "Python",
      "description": "",
      "sub_topics": []
    }
  },
  {
    "model": "app.topic",
    "pk": 8,
    "fields": {
      "group": 1,
      "title": "Django",
      "description": "",
      "sub_topics": []
    }
  },
  {
    "model": "app.topic",
    "pk": 9,
    "fields": {
      "group": 1,
      "title": "React",
      "description": "",
      "sub_topics": []
    }
  },
  {
    "model": "app.topic",
    "pk": 10,
    "fields": {
      "group": 1,
      "title": "APIs",
      "description": "",
      "sub_topics": []
    }
  },
  {
    "model": "app.topic",
    "pk": 11,
    "fields": {
      "group": 1,
      "title": "JavaScript Fundamentals",
      "description": "",
      "sub_topics": [
        1
      ]
    }
  },
  {
    "model": "app.topic",
    "pk": 12,
    "fields": {
      "group": 1,
      "title": "Review",
      "description": "",
      "sub_topics": []
    }
  },
  {
    "model": "app.lesson",
    "pk": 7,
    "fields": {
      "topic": 11,
      "title": "CLI/GIT/Intro to javascript",
      "description": "Get your local machine set up to start the course\r\nExploring your IDE (VSCode)\r\nBe able to navigate your computer using the command line\r\nCreate and manage git repositories using the command line",
      "lesson_file_path": "week-01/2022-01-31.md",
      "img_url": null,
      "date": "2022-05-02",
      "start_time": "2022-05-02T09:00:00Z",
      "stop_time": "2022-05-02T12:00:00Z",
      "markdown": "# Monday, January 31, 2022\r\n\r\n## Topics Covered / Goals\r\n- Get your local machine set up to start the course\r\n- Exploring your IDE (VSCode)\r\n- Be able to navigate your computer using the command line\r\n- Create and manage git repositories using the command line\r\n\r\n## Lesson\r\n\r\n### Computer Setup (Mac, Linux, & Windows)\r\nBefore we get started, just know that this will be chaos. Your goal is to get a working environment, not to understand everything that happens. Please follow along closely!\r\n- [Slack](https://slack.com/downloads) - for all communication purposes\r\n- [Zoom](https://zoom.us/support/download)\r\n- Sign up for [Operation Code](https://operationcode.org/join)\r\n\r\n### Mac Setup\r\n- Make sure you have an Apple ID\r\n- Download XCode from the Mac App Store\r\n- Ensure that you're running the most recent operating system. You can check your version by going to \"System Preferences\" and clicking on \"Software Update\"\r\n- [Complete Installfest (MacOS)](../page-resources/installfest.md)\r\n\r\n### Ubuntu Linux Setup\r\n- [Complete Installfest (Ubuntu Linux)](../page-resources/installfest_ubuntu.md)\r\n\r\n### Windows Setup\r\n- Ensure that you're running the most recent operating system (Windows 10 and 11 are both fine). You can update to the latest Windows version by selecting `Start > Settings > **Windows Update **> Check for updates.`\r\n- Download and install [WSL](https://docs.microsoft.com/en-us/windows/wsl/install) by running `wsl --install` as an Administrator from Powershell\r\n- [Complete Installfest (Windows)](../page-resources/installfest_windows.md)\r\n\r\n### CLI Intro\r\n\r\nReview the following BASH commands:\r\n- pwd\r\n- ls, ls -a\r\n- cd, ., .., ~, / (different places to cd to)\r\n- mkdir (make ~/projects for all codeplatoon assignments)\r\n- touch\r\n- cp, cp -r\r\n- mv\r\n- rm, rm -r, rm -rf\r\n- rmdir\r\n- sudo\r\n- clear, cmd+k\r\n- less (useful by itself, also used by git diff)\r\n- vim (just learn how to quit. used by git commit)\r\n\r\n### Git Intro\r\n\r\n- `ls -a` (nothing here)\r\n- `git status` (not a repo)\r\n- `git init` \r\n- `ls -a` (see .git folder)\r\n- `git status`\r\n- `touch work.txt`\r\n- `git add .`\r\n- `git commit -m 'i did work'` (use -m to add the message inline, or you'll find yourself in vim)\r\n- `git log` (uses `less` to show the commit history)\r\n- `git remote add origin https://github.com/username/reponame` (the name is arbitrary, but origin is VERY conventional)\r\n- `git remote rm origin` (in case you messed up)\r\n- `git remote -v` (maybe you messed up, but aren't sure)\r\n- `git push origin master`\r\n- `git pull origin master`\r\n- `git clone https://github.com/username/reponame` (now you can start today's exercises)\r\n\r\n## Visual Studio Code\r\n\r\nThere are many IDEs (integrated development environments) out there that developers can use. For our class, we're going to be using Visual Studio Code, a free IDE created by Microsoft. VSCode is highly extensible and able to support many different coding languages. \r\n\r\nIt is important to use a consistent environment when collaborating so we are going to recommend a few settings and extensions that everyone should set up with VSCode. These are the recommended settings we all should be using. To set these, go to the main menu Code -> Preferences -> Settings (or Mac: Command + Shift + P > \"Settings\"), and apply these settings in the JSON file:\r\n\r\n```\r\n{\r\n  \"editor.fontSize\": 14,\r\n  \"editor.multiCursorModifier\": \"ctrlCmd\",\r\n  \"editor.renderLineHighlight\": \"gutter\",\r\n  \"editor.tabSize\": 2,\r\n  \"editor.wordWrap\": \"on\",\r\n  \"explorer.confirmDelete\": false,\r\n  \"explorer.confirmDragAndDrop\": false,\r\n  \"files.autoSave\": \"onFocusChange\",\r\n  \"window.zoomLevel\": 0,\r\n  \"workbench.colorTheme\": \"Visual Studio Dark\",\r\n  \"workbench.iconTheme\": \"vscode-icons\",\r\n  \"workbench.startupEditor\": \"newUntitledFile\",\r\n  \"[python]\": {\r\n    \"editor.insertSpaces\": true,\r\n    \"editor.tabSize\": 4\r\n  },\r\n\r\n}\r\n```\r\n\r\nAnd here are some useful extensions:\r\n  - Beautify\r\n  - VSCode Icons\r\n  - Bracket Pair Colorizer\r\n  - Path IntelliSense\r\n  - Live Server\r\n  - Python\r\n  - Live Share\r\n  - Live Share Audio\r\n  \r\n \r\n\r\n\r\n## Assignments\r\n- [99 Bottles](https://github.com/quebecplatoon/algo-99-bottles) in JS\r\n- [Deaf Grandma](https://github.com/quebecplatoon/algo-deaf-grandma) in JS\r\n- [Terminal Commands In Depth](https://github.com/quebecplatoon/misc-command-line) ...nothing to submit here but necessary reading"
    }
  },
  {
    "model": "app.lesson",
    "pk": 8,
    "fields": {
      "topic": 11,
      "title": "JS fundamentals / libraries",
      "description": "Pair Programming\r\nYou will likely be pair programming at your first job in some capacity. It's an important skill to have because it helps you communicate your thought process and enables you to learn from other developers.\r\nJS Fundamentals\r\nJavascript is the language of the Web and you'll need to know it if you want to become a full stack software engineer.\r\nJavascript Libraries",
      "lesson_file_path": "week-01/2022-02-01.md",
      "img_url": null,
      "date": "2022-05-03",
      "start_time": "2022-05-03T09:00:00Z",
      "stop_time": "2022-05-02T12:00:00Z",
      "markdown": "# Tuesday, February 01, 2022\r\n\r\n## Topics Covered / Goals\r\n- Pair Programming\r\n  - You will likely be pair programming at your first job in some capacity. It's an important skill to have because it helps you communicate your thought process and enables you to learn from other developers.\r\n- [JS Fundamentals](../page-resources/JSFundamentalsDay1.pdf)\r\n  - Javascript is the language of the Web and you'll need to know it if you want to become a full stack software engineer.\r\n- Javascript Libraries\r\n\r\n\r\n## Lesson\r\n\r\n**Javascript Fundamentals**\r\n- Javascript was created by Brendan Eich during his time at Netscape in 1995 that conforms to the ECMAScript specification.\r\n- JavaScript is one of the core technologies of the World Wide Web.\r\n- JavaScript is high-level language. It has curly-bracket syntax, dynamic typing, prototype-based object-orientation, and first-class functions.\r\n- With the creation of Node.js (by Google) you can leverage Javascript to write server side code\r\n\r\n**Data Types**\r\n  - **Strings**\r\n    - Anything enclosed in single, double quotes, or back ticks\r\n    ```js\r\n      'stringOne'\r\n      \"string two is also a string with 123456789\"\r\n      `Use back ticks for string interpolation to put variables in your string ${someVariable}`\r\n    ```\r\n    - Interpolation is when you substitute a variable into a string.\r\n    ```js\r\n    let firstName = 'Tom';\r\n    console.log(`My first name is ${firstName}`)\r\n    ```\r\n\r\n    - Reference [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String) and [W3 Schools](https://www.w3schools.com/js/js_string_methods.asp) for a list of built-in String Methods\r\n  - **Numbers**\r\n    - Similar to most other languages, `integers` are whole numbers, `floats` are decimals\r\n    ```js\r\n    3.14 //-> Float number\r\n    55 //-> Integer is a whole number\r\n    ```\r\n  - **Booleans**\r\n    - Booleans are `true` or `false`\r\n    ```js\r\n    true\r\n    false\r\n    ```\r\n  - **Undefined**\r\n    - A variable that has no defined value.\r\n    ```js\r\n    let babyName = undefined;\r\n    ```\r\n  - **Null**\r\n    - A variable explicity defined as having no value\r\n    ```js\r\n    let noValue = null\r\n    ```\r\n  - **Arrays**\r\n    - Holds an ordered list of values. These values can be anything: strings, numbers, objects, even other arrays!\r\n    - Once you put something in an array, it stays at that place forever until you alter the array. You can rely on it always being there. Think of an older person's pill box - the pills for Monday are in the Monday slot. If they were to shake it or drop it or something, it wouldn't matter. Those pills are still at the same place.\r\n    - You can access the values in the array by using their `index`. We start counting from 0 and go up from there\r\n    ```js\r\n    const daysOfTheWeek = ['mon', 'tues', 'wed', 'thurs', 'fri']\r\n    // Remember, computers start counting at 0 and move up from there\r\n    daysOfTheWeek[3] // \"thurs\"\r\n    ```\r\n    - Reference [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array) and [W3 Schools](https://www.w3schools.com/jsref/jsref_obj_array.asp) for a list of built-in Array Methods\r\n\r\n  - **Objects**\r\n    - It's a collection of key/value pairs. You can't access it by `index` like with arrays because objects do not have an order, but you can access it by `key`\r\n    - Useful for holding many details about a single entity, like VIN numbers or social security information\r\n     \r\n    ```js\r\n    // below, we have a object called user that has a name/age key on the left and values on the right\r\n    let user = {\r\n        'name': 'Tom',\r\n        'age': 34\r\n    }\r\n\r\n    // To access a particular key's value:\r\n    console.log(user['name'])\r\n\r\n    // You can also re-assign a key's value\r\n    user['age'] = 30\r\n    ```\r\n\r\n**Variables**\r\n  - Variables are named labels/identifiers for storing values\r\n  - Remember from math class variables Γò¼├┤Γö£├ºΓö¼├║xΓò¼├┤Γö£├ºΓö¼├æ and Γò¼├┤Γö£├ºΓö¼├║yΓò¼├┤Γö£├ºΓö¼├æ?\r\n  - There are three ways to declare/create a variable in Javascript\r\n  - `var`\r\n    - The most common variable. It can be reassigned but only accessed within a function. Variables defined with `var` move to the top when the code is executed. (donΓò¼├┤Γö£├ºΓö£├╗t use anymore)\r\n  - `const`\r\n    - Can not be reassigned and not accessible before they appear within the code.\r\n  - `let`\r\n    - The `let` variable can be reassigned but not re-declared.\r\n\r\n  - `var`, `let`, and `const` are reserved keywords in Javascript. You canΓò¼├┤Γö£├ºΓö£├╗t use them for anything other than declaring variables\r\n\r\n**Printing**\r\n- `console.log()`\r\n- Takes whatever you give it and prints it to the terminal/console\r\n```js\r\nlet a = 'Hello'\r\nlet b = 'World'\r\nconsole.log(`${a} ${b}`) //-> 'Hello World'\r\n```\r\n\r\n**Arithmetic Operators**\r\n- Arithmetic is pretty much the same in all languages. Below are all of the operators:\r\n\r\n|Description|Operator|Examples|\r\n|-----------|--------|--------|\r\n|Addition| `+`| `1 + 1 //-> 2`|\r\n|Subtraction|`-`| `3 - 2 //-> 1`|\r\n|Multiplication|`*`| `3 - 2 //-> 1`|\r\n|Exponent|`**`| `3 ** 2` (Γò¼├┤Γö£├ºΓö£ΓöÉ3 to the power of 2Γò¼├┤Γö£├ºΓö£├╗)|\r\n|Division|`/`| `10 / 2 //-> 5`|\r\n|Modulus (returns the remainder)|`%`| `10 % 3 //-> 1`|\r\n\r\n**Logic Operators**\r\n|Description|Operator|Examples <br>`let a = 4;`<br> `let b = 2;`<br>`let c = 8`|\r\n|-----------|--------|--------|\r\n|Equal| `==` or `===`| `a == b //-> false`|\r\n|Not equal|`!=` or `!==`| `a !== b //-> true`|\r\n|Greater than|`>`| `a > b //-> true`|\r\n|Less than|`<`| `a < b //-> false`|\r\n|Greater than or equal|`>=`| `a >= b //-> true`|\r\n|Less than or equal to|`<=`| `a <= b //-> false`|\r\n|Logical AND|`&&`| `a > b && b < c //-> true` <br> `a > c && a > b //-> false`|\r\n|Logical OR|`\\|\\|`| `a > b \\|\\| b < c //-> true` <br>`a > c \\|\\| a > b //-> true`|\r\n\r\n**Functions**\r\n- Javascript functions are resusable blocks of code that perform a specific set of instructions\r\n- Functions output a value\r\n\r\n```js\r\n// To declare a new function use the function keyword followed by the name of the function.\r\n// Pass in parameters (if needed)\r\n\r\n// Regular functions\r\nfunction name(parameter1, paramenter2) {\r\n\tlet answer = parameter1 + paramenter2\r\n\treturn answer\r\n}\r\n\r\n// OR\r\n\r\n// Γò¼├┤Γö£├ºΓö£ΓöÉFat arrowΓò¼├┤Γö£├ºΓö£├╗ functions\r\nconst name = (num1, num2) => {\r\n  let answer = num1 + num2\r\n  return answer\r\n}\r\n\r\n// Example\r\nlet sayHello = (firstName) => {\r\n  return `Hello! My name is ${firstName}`\r\n}\r\n\r\nsayHello('Tom')\r\n// Here we have a function called `sayHello` that takes in a single parameter/argument called `firstName`. We passed in `Tom` as the argument, so `Tom` gets saved as `firstName` when we run through the code. We can then interpolate `firstName` into the string that gets printed out.\r\n\r\n```\r\n\r\n**Conditional Logic**\r\n- When you want to control how a computer goes through your program, use control flow!\r\n- Evaluates to either true or false (boolean values)\r\n- Allows us to select different outcome depending on user input or the result of a computation\r\n\r\n```js\r\n// if statement\r\nif (a === b) {\r\n\t// do something\r\n}\r\n\r\n// if else statement\r\nif (a === b) {\r\n\t// do something\r\n} else {\r\n\t// do something\r\n}\r\n\r\n// else if statement\r\nif (a === b) {\r\n\t// do something\r\n} else if (a > b) {\r\n\t// do something else\r\n} else {\r\n\t// do something else\r\n}\r\n```\r\n- **Example**\r\n```js\r\nlet age = 18\r\nif (age >= 21) {\r\n    console.log('Welcome to the bar')\r\n} else {\r\n    console.log('Come back when you are older')\r\n}\r\n\r\n## Sometimes, you can drink if you are in another country if you're 18. Let's account for that.\r\n\r\nlet currentCountry = 'China'\r\nif (age >= 21) {\r\n    console.log('Welcome to the bar')\r\n} else if  (age >= 18 && currentCountry === 'China') {\r\n    console.log('You can drink in China starting at age 18!')\r\n} else {\r\n    console.log('Come back when you are older')\r\n}\r\n```\r\n\r\n**Iteration (Loops)**\r\n- Loops are very popular in coding. They are basically instructions for your computer to do things over and over again\r\n- As long as the condition is true, the block of code will continue to execute.\r\n- When the condition becomes false, the code after the end of the loop will be executed.\r\n```js\r\nlet age = 12\r\nwhile (age < 21) {\r\n    console.log(`You are not old enough yet - you are only ${age} years old! Come back when you are older.`)\r\n}\r\n// beware of infinite loops! What is going on above?\r\n\r\n// This would be better:\r\nlet age = 12\r\nwhile (age < 21) {\r\n    console.log(`You are not old enough yet - you are only ${age} years old! Come back when you are older.`)\r\n    age += 1\r\n}\r\n```\r\n- `for` loops are a bit different. It's a way for you to iterate over everything in an array or object\r\n\r\n```js\r\nlet age = 12\r\nfor (let i = 0; i < 21; i++) {\r\n  console.log(`You are not old enough yet - you are only ${age} years old! Come back when you are older.`)\r\n}\r\nreturn `You're now ${age}! You can come on in!`\r\n\r\n// Looping through an object\r\nlet employee = {\r\n  name: 'Tom',\r\n  title: 'Instructor'\r\n}\r\nfor (let key in employee) {\r\n\t// execute this code\r\n}\r\nreturn someValue\r\n```\r\n\r\n### Libraries\r\nLibraries used to leverage pre-written code (developed by other developers) to include functionality into our applications without having to do everything from scratch. Javascript libraries/frameworks are primarily focused on the front end. One of the most popular libraries used today is React. Instagram and Facebook are written in this framework.\r\n\r\nOne library manager is `npm`. We can use npm to easily download and \"install\" JavaScript libraries to use with our apps. \r\n\r\n### External Resources\r\n- [Cheatsheet](https://education.github.com/git-cheat-sheet-education.pdf)\r\n- [Git Resource](https://github.com/quebecplatoon/git-resource)\r\n- [Wikipedia of Algorithms](http://algorithm.wiki/en/app/)\r\n- [Keyboard Setup to match Mac](../page-resources/keyboard-setup.png)\r\n- [JS Fundamentals](../page-resources/javascript_control_flow.pdf) - control flow, if/else, loops, etc\r\n- [List of JS libraries](https://www.javascripting.com/).\r\n\r\n- Some of you may be wondering what `exports` is on the Javascript files. The Javascript folders will sometimes have prewritten spec (test) files and in order for the spec file to read the contents of the corresponding Javascript files where your code is written, it must be attached to the `export` Javascript object. To ensure that you are writing correct code, run `node WHATEVER_CHALLENGE_NAME_Spec.js` in the `js` folder. Don't run `node WHATEVER_CHALLENGE_NAME.js` as it will blow up.\r\n\r\n## Assignments\r\n- [Roman Numerals](https://github.com/quebecplatoon/algo-roman-numerals) in JS\r\n- [Git Practice](http://learngitbranching.js.org/)\r\n- [Factorial](https://github.com/quebecplatoon/algo-factorial) in JS\r\n- [Fibonacci](https://github.com/quebecplatoon/algo-fibonacci) in JS\r\n- [Linear Search](https://github.com/quebecplatoon/algo-linear-search) in JS"
    }
  },
  {
    "model": "app.lesson",
    "pk": 9,
    "fields": {
      "topic": 7,
      "title": "Python Intro",
      "description": "Understand basic Python syntax\r\nUnderstand variable types\r\nUnderstand basic data types\r\nUnderstand data structures:\r\nlists\r\ntuples\r\ndictionaries\r\nUnderstand control flow in Python:\r\nif-statements\r\nfor-loops\r\nwhile-loops\r\nUnderstand some common built-in methods\r\nbuilt-in methods for strings, lists, dicts, etc\r\ndestructive vs non-destructive methods",
      "lesson_file_path": "week-01/2022-02-02.md",
      "img_url": null,
      "date": "2022-05-04",
      "start_time": "2022-05-04T09:00:00Z",
      "stop_time": "2022-05-04T12:00:00Z",
      "markdown": "# Wednesday, February 02, 2022\r\n\r\nΓò¼├┤Γö£├ºΓö£┬╗\r\n## Topics Covered / Goals\r\n- Understand basic Python syntax\r\n- Understand variable types\r\n- Understand basic data types\r\n- Understand data structures:\r\n  - lists\r\n  - tuples\r\n  - dictionaries\r\n- Understand control flow in Python:\r\n  - if-statements\r\n  - for-loops\r\n  - while-loops\r\n- Understand some common built-in methods\r\n    - built-in methods for strings, lists, dicts, etc\r\n    - destructive vs non-destructive methods\r\n\r\n## Lesson\r\n\r\n> In python, like all programming languages, we will manipulate various different types of data, such as numbers and lists. If you want to understand how you can manipulate your data, and compare it to other data, the most important thing to understand is the TYPE of your data. Many of these data types are similar to the data types we use in javascript, but there are some important differences I'll point out. There are two types of types: primitive types, which are just a single value, and non-primitive types, which can contain other data.\r\n\r\n### Numbers\r\n\r\n> The first type we'll learn about are numbers. Let's create a number literal and assign it to a variable.\r\n\r\n```python\r\na_small_number = 4\r\n```\r\n\r\n> In python, unlike javascript, you don't use any keywords (e.g. `let`, `const`) for defining a variable. You simply assign a value to a variable name. When choosing a name, it's conventional in python to use 'snake_case', which consists of lowercase letters connected with underscores.\r\n> To check the type of a variable, we can use the `type()` function. We can print the result to the terminal with `print()`. We'll learn more about functions later today.\r\n\r\n```python\r\nprint(type(a_small_number))\r\n```\r\n\r\n> You can manipulate numbers in python using numeric operators, such as +, -, *, /, %, <, >, ==, etc. These work the same way they do in javascript, so we won't review them again. Python does not perform type coercion like javascript, so there are no operators like === or !==.\r\n\r\n### Strings\r\n\r\n> Strings can be created in python similarly to how you create them in javascript, using either single or double quotes.\r\n\r\n```python\r\na_string = 'hello world'\r\nanother_string = \"welcome to the internet\"\r\nprint(type(another_string))\r\n```\r\n\r\n> Python supports string interpolation, just like javascript, but the syntax is a little different\r\n\r\n```python\r\nday = 'Friday'\r\nactivity = 'bowling'\r\nprint(f\"Let's go {activity} on {day} afternoon.\") # This is sometimes called an \"f string\"\r\n```\r\n\r\n### Booleans\r\n\r\n> The last primitive type in python is boolean. There are only two boolean values, `True` and `False`. These work the same as in javascript, except that we spell them with capital letters. \r\n\r\n### Lists\r\n\r\n> The most fundamental non-primitive type in python is a list. A python list is roughly equivalent to a javascript array, but lists in python are a bit more flexible. \r\n\r\n```python\r\nberries = ['grape', 'tomato', 'cucumber', 'eggplant', 'banana', 'watermelon', 'pumpkin']\r\nprint(type(berries))\r\nprint(berries[1]) # normal indexing works how you'd expect\r\nprint(berries[-1]) # index from the back of the list\r\nprint(berries[2:4]) # slice in the middle\r\nprint(berries[:3]) # slice from the start to index 3\r\nprint(berries[2:]) # slice from index 2 to the end\r\n```\r\n\r\n### Tuples\r\n\r\n> A tuple in python is like a list, but it is defined with parentheses instead of brackets. It is used for storing mulTiPLE pieces of data in one data structure. Unlike a list, a tuple is immutable, meaning that it cannot be mutated. You cannot add, remove, or modify items in a tuple. You should use a tuple if you want to make sure that the items in your list never change. For example, you might use a tuple to store the seven days of the week, because there's no reason for that to change. You might also store geographical (lat,long) coordinates in a tuple, because the two numbers together refer to one thing, one specific place. It doesn't make sense to modify just one number in a coordinate pair. Instead, you would just create a new coordinate pair. \r\n\r\n```python\r\ndays_of_the_week = ('sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday')\r\ndays_of_the_week[6] = 'Caturday' # this throws an error! we can't assign to a tuple\r\n```\r\n\r\n### Dictionaries\r\n\r\n> A dictionary in python is like an object in javascript (though python objects are more complex than javascript objects). It's used to store pairs of data, a key with its value. For example, you might use a dictionary to store information about a person. Unlike in javascript, we must use quotation marks for defining string keys, and we must use bracket notation for accessing values in a dictionary. \r\n\r\n```python\r\njeff = {\r\n    'name': 'jeff',\r\n    'age': 44,\r\n    'job': 'influencer',\r\n}\r\nprint(jeff['age'])\r\n\r\npeople = [\r\n    {\r\n        'name': 'alice',\r\n        'age': 44,\r\n        'job': 'influencer',\r\n    },\r\n    {\r\n        'name': 'bob',\r\n        'age': 31,\r\n        'job': 'dog walker',\r\n    },\r\n    {\r\n        'name': 'carol',\r\n        'age': 65,\r\n        'job': 'life coach',\r\n    },\r\n]\r\nprint(people[1]['name'])\r\n```\r\n\r\n### functions\r\n\r\n> To define a function in python, we use the `def` keyword. The body of the function must be indented because python is whitespace-sensitive. Instead of using braces and semicolons to mark the boundaries of our code, python uses indentation and newlines. It's important that you get comfortable defining your own functions to use in your code, but you should also be aware that there are many useful functions predefined in python.\r\n\r\n```python\r\ndef gimme_five():\r\n    return 5\r\nprint(gimme_five() + 10)\r\n\r\n\r\n# if a function is defined with one parameter, it must be called with one argument\r\ndef add_one(n):\r\n    return n + 1\r\nprint(add_one(10))\r\n\r\n# order matters for positional arguments\r\ndef describe_berries(n, color):\r\n    print(f'I have {n} {color}berries.')\r\ndescribe_berries(3, 'blue')\r\ndescribe_berries('black', 4)\r\n\r\n# keyword arguments can be used in any order\r\ndef describe_berries(n=1, color=\"blue\"):\r\n    print(f'I have {n} {color}berries.')\r\ndescribe_berries(color=\"rasp\", n=3)\r\n\r\n# use * to define a function with an unspecified number of parameters\r\ndef print_them_all(*args):\r\n    print(args)\r\nprint_them_all('alice', 'bob', 'carol')\r\n\r\n# use ** to define a function with an unspecified number of keyword arguments\r\ndef who_am_i(**kwargs):\r\n    for kwarg in kwargs: # we'll talk more about loops in a minute\r\n        print(f'My {kwarg} is {kwargs[kwarg]}.')\r\nwho_am_i(name='dan', age=20, job='skydiving instructor')\r\n```\r\n\r\n\r\n### If-statements\r\n> If-statements in python work the same as in javascript, except that instead of `&&`, `||`, and `!`, we use `and`, `or`, and `not`.\r\n\r\n```python\r\ndef can_drink_beer(age, country):\r\n    if age >= 21 or age >= 18 and country == 'Canada':\r\n        return True\r\n    elif country == 'Antarctica':\r\n        return True\r\n    else:\r\n        return False\r\n\r\nprint(can_drink_beer(20, 'USA'))\r\nprint(can_drink_beer(21, 'USA'))\r\nprint(can_drink_beer(18, 'Canada'))\r\n\r\n\r\n```\r\n\r\n**for-loop**\r\n```python\r\n## looping over list elements\r\nmy_list = [\"a\", \"b\", \"c\"]\r\nfor x in my_list:\r\n    print(x)\r\n\r\n## loop over a range\r\nfor x in range(10):\r\n    print(x)\r\n\r\n\r\nfor i, x in enumerate(my_list):\r\n    print(i, x)\r\n\r\n## looping over dictionary entries\r\nmy_dict = {\r\n    \"donuts\": \"yummy!\",\r\n    \"green beans\": \"icky!\",\r\n}\r\nfor k in my_dict:\r\n    print(my_dict[k])\r\n\r\nfor v in my_dict.values():\r\n    print(v) # same output as the previous loop\r\n```\r\n\r\n**while-loop**\r\n```python\r\nx = 9\r\nwhile x > 0:\r\n    print(x)\r\n    x = x - 1\r\n\r\n## infinite loop\r\nx = 9\r\nwhile x > 0:\r\n    print(\"la la la\") \r\n```\r\n\r\n\r\n**Built-in Methods**\r\n> Most types of values in python have built-in methods that you can use to manipulate that value. a method is simply a function that belongs to an object. There are two types of methods that you should be aware of: destructive and non-destructive methods. Destructive methods are those that change the original data where non-destructive methods are those that do not change the original data. You have to be careful with the methods that you use as there isn't a clear indication in Python or JS as to which are destructive and which aren't. Let's take a look at the example below:\r\n```python\r\nfirst_name = 'jonathan'\r\nfirst_name.capitalize() # this is a string method that converts the first character to upper case\r\nfirst_name # we see that despite running the method above, my original data does not change\r\n\r\nlast_name = 'young'\r\nlast_name.replace('g', '123')\r\nlast_name # same case here - this is a non destructive method\r\n\r\nstaff = ['jon', 'rod', 'ankur', 'chad', 'alicia']\r\nstaff.append('tom')\r\nstaff # this is a destructive method because it alters the original\r\n## Let's fire tom. He sucks.\r\nstaff.pop()\r\nstaff # my original has been changed yet again!\r\n```\r\n\r\n## Resources\r\n- [Python Fundamentals](../page-resources/python_fundamentals.md)\r\nΓò¼├┤Γö£├ºΓö£┬╗\r\n## Assignments\r\n- [99 Bottles](https://github.com/quebecplatoon/algo-99-Bottles) in Python\r\n- [Deaf Grandma](https://github.com/quebecplatoon/algo-deaf-grandma) in Python\r\n- [Roman Numerals](https://github.com/quebecplatoon/algo-roman-numerals) in Python\r\n- [Fibonacci](https://github.com/quebecplatoon/algo-fibonacci) in Python\r\n- [Factorial](https://github.com/quebecplatoon/algo-factorial) in Python\r\n- [Linear Search](https://github.com/quebecplatoon/algo-linear-search) in Python"
    }
  },
  {
    "model": "app.lesson",
    "pk": 10,
    "fields": {
      "topic": 7,
      "title": "Python Fundamentals",
      "description": "Understand lambda functions\r\nUnderstand list methods map(), filter(), sort(), reduce()\r\nUnderstand ternary statements\r\nUnderstand list comprehensions\r\nUnderstand Try-Except error handling",
      "lesson_file_path": "week-01/2022-02-03.md",
      "img_url": null,
      "date": "2022-05-05",
      "start_time": "2022-05-05T09:00:00Z",
      "stop_time": "2022-05-05T12:00:00Z",
      "markdown": "# Thursday, February 03, 2022\r\n\r\n## Topics Covered / Goals\r\n- Understand lambda functions\r\n- Understand list methods map(), filter(), sort(), reduce()\r\n- Understand ternary statements\r\n- Understand list comprehensions\r\n- Understand Try-Except error handling\r\n\r\n## Lesson\r\n\r\n### Lambda functions\r\n- temporary, unnamed (\"anonymous\") functions\r\n```python\r\n## typical function example\r\ndef add_one(x):\r\n    return x + 1\r\n\r\nprint(add_one(7)) # output would be 8\r\n\r\n## lambda function example\r\nadd_two = lambda x : x + 2\r\n\r\nprint(add_two(7)) # output would be 9\r\n```\r\n\r\n### List Methods\r\n**map()**\r\n- creates a new list, using a function that returns a new item\r\n```python\r\nmy_list = [1,2,3,4,5,6,7,8,9,10]\r\nnew_list = map(lambda item : item + 2, my_list)\r\nfor x in new_list:\r\n    print(x)\r\n## [3,4,5,6,7,8,9,10,11,12]\r\n```\r\n\r\n**filter()**\r\n- creates a new list, using a function that returns a bool (True => include item in new list)\r\n```python\r\nmy_list = [1,2,3,4,5,6,7,8,9,10]\r\nnew_list = filter(lambda item : item % 3 == 0, my_list)\r\nfor x in new_list:\r\n    print(x)\r\n## [3,6,9]\r\n```\r\n\r\n**reduce()**\r\n- creates a single value, using a function that aggregates values\r\n```python\r\nimport functools\r\nmy_list = [1,2,3,4,5,6,7,8,9,10]\r\nsum = functools.reduce(lambda agg, item : agg + item, my_list)\r\nprint(sum)\r\n```\r\n\r\n## Ternary Statements\r\n- inline if-statements\r\n```python\r\n## if statement\r\nx = None\r\ny = 9\r\nif y > 5:\r\n    x = \"donuts\"\r\nelse:\r\n    x = \"bagels\"\r\n\r\nprint(x)\r\n\r\n## ternary statement\r\nx = \"donuts\" if y > 5 else \"bagels\"\r\nprint(x)\r\n```\r\n\r\n### List Comprehensions\r\n```python\r\nfull_list = [a for a in range(10)]\r\nprint(full_list)\r\n\r\nevens_list = [x for x in range(10) if x % 2 == 0]\r\nprint(my_list)\r\n\r\nsome_list = [\"donuts\" if x % 2 == 0 else \"bagels\" for x in range(10) if x % 3 == 0]\r\nprint(some_list)\r\n```\r\n\r\n### Try-Except\r\n```python\r\ntry:\r\n    a = 1\r\n    b = 2\r\n    c = \"donuts\"\r\n    \r\n    d = a + b\r\n    print(d)\r\n\r\n    e = a + c # error\r\n    print(e)\r\nexcept:\r\n    # handle exception\r\n    print(\"BOO! there was an error\")\r\nelse:\r\n    # handle success\r\n    print(\"YAY! there was no error\")\r\nfinally:\r\n    # always execute regardless of exception or success\r\n    print(\"donuts are yummy!\")\r\n```\r\n\r\n## Modules, Packages, Libraries, and Frameworks\r\n\r\n- Modules, libraries, frameworks, and packages are just code that someone else wrote ahead of time to make your life as a developer easier. There is no magic here - it's just meant to make your life easier and for you to make more robust applications\r\n- There are a number of package managers to manage the different libraries we will use. The most popular package manager for Python is Pip, and the most popular (and default) package manager for Javascript is npm. \r\n- You can find some very useful libraries [here](https://pythontips.com/2013/07/30/20-python-libraries-you-cant-live-without/). We'll be using Django in the next few weeks. If you go the data science route, there are some data science heavy libraries like NumPy and Pandas\r\n\r\nYou can also write your own modules, which allows for you as the author to organize your code and group it together for ease of use. To put it very simply, a module is a file of Python code that you bring into other files. Let's take a look at an example:\r\n\r\n### Python modules\r\n\r\n```python\r\n## file1.py\r\ndef say_hello():\r\n    print('Hey there')\r\n\r\n## file2.py\r\nimport file1\r\nimport file1 as anything\r\nanything.say_hello()\r\n```\r\nWe just created two files: `file1.py` and `file2.py`. `file1.py` has a `say_hello` function. `file2.py` has nothing in it, but imports that file in as the name of the file and we can use all the methods in that file. We can also rewrite it as `import file1 as anything` and call `anything.say_hello()`. You can `import` anything into your file by providing the correct relative path to the file. More on that can be found under external resources.\r\n\r\n## Resources\r\n- [Python vs. JavaScript](https://realpython.com/python-vs-javascript/#javascript-vs-python)\r\n- [Python Modules](https://www.tutorialspoint.com/python/python_modules.htm)\r\n\r\n## Assignments\r\n\r\n- [Armstrong Numbers](https://github.com/quebecplatoon/algo-armstrong-numbers) in JS/Python\r\n- [Sum Pairs](https://github.com/quebecplatoon/algo-sum-pairs) in JS/Python\r\n- [Credit Check](https://github.com/quebecplatoon/algo-credit-check) in JS/Python\r\n- [Anagrams I](https://github.com/quebecplatoon/algo-anagrams-i) in JS/Python\r\n- [Debugging One](https://github.com/quebecplatoon/algo-debugging-one)"
    }
  },
  {
    "model": "app.lesson",
    "pk": 11,
    "fields": {
      "topic": 12,
      "title": "JS/Python Review",
      "description": "JS/Python Review",
      "lesson_file_path": "week-01/2022-02-04.md",
      "img_url": null,
      "date": "2022-05-06",
      "start_time": "2022-05-06T09:00:00Z",
      "stop_time": "2022-05-06T12:00:00Z",
      "markdown": "# Friday, February 04, 2022\r\n\r\n## Topics Covered / Goals\r\n- Review material from the week\r\n\r\n\r\n### Review\r\n\r\n## Assignments\r\n- [Practice with a Pair](https://github.com/quebecplatoon/git-pair)\r\n- [Anagrams II](https://github.com/quebecplatoon/algo-anagrams-ii) in JS/Python\r\n- [Character Count](https://github.com/quebecplatoon/algo-character-count) in JS/Python\r\n- [Palindromes](https://github.com/quebecplatoon/algo-palindromes) in JS/Python\r\n- [Calculate Mode](https://github.com/quebecplatoon/algo-calculate-mode) in JS/Python\r\n- [Pad an Array](https://github.com/quebecplatoon/algo-pad-array) in JS/Python\r\n- [Balanced Parentheses](https://github.com/quebecplatoon/algo-balanced-parentheses) in JS/Python"
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 17,
    "fields": {
      "lesson": 7,
      "url": "https://github.com/quebecplatoon/algo-99-bottles",
      "description": "99 Bottles in JS",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 18,
    "fields": {
      "lesson": 7,
      "url": "https://github.com/quebecplatoon/algo-deaf-grandma",
      "description": "Deaf Grandma in JS",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 19,
    "fields": {
      "lesson": 7,
      "url": "https://github.com/quebecplatoon/misc-command-line",
      "description": "Terminal Commands In Depth ...nothing to submit here but necessary reading",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 20,
    "fields": {
      "lesson": 8,
      "url": "https://github.com/quebecplatoon/algo-roman-numerals",
      "description": "Roman Numerals in JS",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 21,
    "fields": {
      "lesson": 8,
      "url": "http://learngitbranching.js.org/",
      "description": "Git Practice",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 22,
    "fields": {
      "lesson": 8,
      "url": "https://github.com/quebecplatoon/algo-factorial",
      "description": "Factorial in JS",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 23,
    "fields": {
      "lesson": 8,
      "url": "https://github.com/quebecplatoon/algo-fibonacci",
      "description": "Fibonacci in JS",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 24,
    "fields": {
      "lesson": 8,
      "url": "https://github.com/quebecplatoon/algo-linear-search",
      "description": "Linear Search in JS",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 25,
    "fields": {
      "lesson": 8,
      "url": "https://education.github.com/git-cheat-sheet-education.pdf",
      "description": "Cheatsheet",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 26,
    "fields": {
      "lesson": 8,
      "url": "https://github.com/quebecplatoon/git-resource",
      "description": "Git Resource",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 27,
    "fields": {
      "lesson": 8,
      "url": "https://github.com/quebecplatoon/curriculum/blob/master/page-resources/javascript_control_flow.pdf",
      "description": "JS Fundamentals - control flow, if/else, loops, etc",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 28,
    "fields": {
      "lesson": 9,
      "url": "https://github.com/quebecplatoon/curriculum/blob/master/page-resources/python_fundamentals.md",
      "description": "Python Fundamentals",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 29,
    "fields": {
      "lesson": 9,
      "url": "https://github.com/quebecplatoon/algo-99-Bottles",
      "description": "99 Bottles in Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 30,
    "fields": {
      "lesson": 9,
      "url": "https://github.com/quebecplatoon/algo-deaf-grandma",
      "description": "Deaf Grandma in Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 31,
    "fields": {
      "lesson": 9,
      "url": "https://github.com/quebecplatoon/algo-roman-numerals",
      "description": "Roman Numerals in Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 32,
    "fields": {
      "lesson": 9,
      "url": "https://github.com/quebecplatoon/algo-fibonacci",
      "description": "Fibonacci in Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 33,
    "fields": {
      "lesson": 9,
      "url": "https://github.com/quebecplatoon/algo-factorial",
      "description": "Factorial in Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 34,
    "fields": {
      "lesson": 9,
      "url": "https://github.com/quebecplatoon/algo-linear-search",
      "description": "Linear Search in Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 35,
    "fields": {
      "lesson": 10,
      "url": "https://realpython.com/python-vs-javascript/#javascript-vs-python",
      "description": "Python vs. JavaScript",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 36,
    "fields": {
      "lesson": 10,
      "url": "https://www.tutorialspoint.com/python/python_modules.htm",
      "description": "Python Modules",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 37,
    "fields": {
      "lesson": 10,
      "url": "https://github.com/quebecplatoon/algo-armstrong-numbers",
      "description": "Armstrong Numbers in JS/Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 38,
    "fields": {
      "lesson": 10,
      "url": "https://github.com/quebecplatoon/algo-sum-pairs",
      "description": "Sum Pairs in JS/Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 39,
    "fields": {
      "lesson": 10,
      "url": "https://github.com/quebecplatoon/algo-credit-check",
      "description": "Credit Check in JS/Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 40,
    "fields": {
      "lesson": 10,
      "url": "https://github.com/quebecplatoon/algo-anagrams-i",
      "description": "Anagrams I in JS/Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 41,
    "fields": {
      "lesson": 10,
      "url": "https://github.com/quebecplatoon/algo-debugging-one",
      "description": "Debugging One",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 42,
    "fields": {
      "lesson": 10,
      "url": "https://pythontips.com/2013/07/30/20-python-libraries-you-cant-live-without/",
      "description": "Useful libraries",
      "originator": null,
      "link_type": 0
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 43,
    "fields": {
      "lesson": 11,
      "url": "https://github.com/quebecplatoon/git-pair",
      "description": "Practice with a Pair",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 44,
    "fields": {
      "lesson": 11,
      "url": "https://github.com/quebecplatoon/algo-anagrams-ii",
      "description": "Anagrams II in JS/Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 45,
    "fields": {
      "lesson": 11,
      "url": "https://github.com/quebecplatoon/algo-character-count",
      "description": "Character Count in JS/Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 46,
    "fields": {
      "lesson": 11,
      "url": "https://github.com/quebecplatoon/algo-palindromes",
      "description": "Palindromes in JS/Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 47,
    "fields": {
      "lesson": 11,
      "url": "https://github.com/quebecplatoon/algo-calculate-mode",
      "description": "Calculate Mode in JS/Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 48,
    "fields": {
      "lesson": 11,
      "url": "https://github.com/quebecplatoon/algo-pad-array",
      "description": "Pad an Array in JS/Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 49,
    "fields": {
      "lesson": 11,
      "url": "https://github.com/quebecplatoon/algo-balanced-parentheses",
      "description": "Balanced Parentheses in JS/Python",
      "originator": null,
      "link_type": 1
    }
  },
  {
    "model": "app.lessonlink",
    "pk": 50,
    "fields": {
      "lesson": 9,
      "url": "http://www.google.com",
      "description": null,
      "originator": null,
      "link_type": 3
    }
  },
  {
    "model": "app.cohort",
    "pk": 1,
    "fields": {
      "github_key": "5554565dd",
      "metadata": {
        "course_roadmap": "https://somelink.com",
        "youtube": "https://www.youtube.com/channel/UCASZ7zW_Egu0T4KG3YEdGfw/playlists",
        "calendar": "https://docs.google.com/spreadsheets/d/1lOA3uPlX6tU0QvSAZmdCxPBvCpLcfm0H-0DSCMhjn5s/edit?usp=sharing",
        "student_handbook": "https://docs.google.com/document/d/1KgNFbDhihSJv6OGYjFDhESaDJ6ljOyVoRQse7oQH1I0/edit?usp=sharing",
        "student_wiki": "https://docs.google.com/spreadsheets/d/1nX1ylt8AOWVnwZ5v-naN7K2bfhlfZm8TRzepOuXdqWw/edit#gid=0"
      },
      "calendar_key": "c_4lkirg4ugcjlpde4pm7gu4atfo%40group.calendar.google.com"
    }
  },
  {
    "model": "app.cohort",
    "pk": 2,
    "fields": {
      "github_key": "asdfdf33ddddfasdfasdfsdf*#H#N33",
      "metadata": {
        "course_roadmap": "https://somelink.com",
        "youtube": "https://www.youtube.com/channel/UCASZ7zW_Egu0T4KG3YEdGfw/playlists",
        "calendar": "https://docs.google.com/spreadsheets/d/1lOA3uPlX6tU0QvSAZmdCxPBvCpLcfm0H-0DSCMhjn5s/edit?usp=sharing",
        "student_handbook": "https://docs.google.com/document/d/1KgNFbDhihSJv6OGYjFDhESaDJ6ljOyVoRQse7oQH1I0/edit?usp=sharing",
        "student_wiki": "https://docs.google.com/spreadsheets/d/1nX1ylt8AOWVnwZ5v-naN7K2bfhlfZm8TRzepOuXdqWw/edit#gid=0"
      },
      "calendar_key": "ddf3333d3d"
    }
  },
  {
    "model": "app.cohort",
    "pk": 3,
    "fields": {
      "github_key": "asdfdf33dd*#H#N33",
      "metadata": {
        "course_roadmap": "https://somelink.com",
        "youtube": "https://www.youtube.com/channel/UCASZ7zW_Egu0T4KG3YEdGfw/playlists",
        "calendar": "https://docs.google.com/spreadsheets/d/1lOA3uPlX6tU0QvSAZmdCxPBvCpLcfm0H-0DSCMhjn5s/edit?usp=sharing",
        "student_handbook": "https://docs.google.com/document/d/1KgNFbDhihSJv6OGYjFDhESaDJ6ljOyVoRQse7oQH1I0/edit?usp=sharing",
        "student_wiki": "https://docs.google.com/spreadsheets/d/1nX1ylt8AOWVnwZ5v-naN7K2bfhlfZm8TRzepOuXdqWw/edit#gid=0"
      },
      "calendar_key": null
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 1,
    "fields": {
      "user": 6,
      "jti": "d76479da26714f7d9902263b28ee9286",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTQ5NTU5NSwiaWF0IjoxNjUxNzE5NTk1LCJqdGkiOiJkNzY0NzlkYTI2NzE0ZjdkOTkwMjI2M2IyOGVlOTI4NiIsInVzZXJfaWQiOjZ9.tvKw_D0Fv1NEJ1wEj8pfOzyqtHB1_blB2y4KHVeS69E",
      "created_at": "2022-05-05T02:59:55.050Z",
      "expires_at": "2022-08-03T02:59:55Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 2,
    "fields": {
      "user": 6,
      "jti": "d1c8d0aad0924281b97922e1fc470a6d",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU0MTc5NiwiaWF0IjoxNjUxNzY1Nzk2LCJqdGkiOiJkMWM4ZDBhYWQwOTI0MjgxYjk3OTIyZTFmYzQ3MGE2ZCIsInVzZXJfaWQiOjZ9.VtSx_2aBLKkn_OkrHRf6OFor7sCibw8RVMD5-307jzk",
      "created_at": "2022-05-05T15:49:56.105Z",
      "expires_at": "2022-08-03T15:49:56Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 3,
    "fields": {
      "user": 6,
      "jti": "9adb74540e50405c97ebe150ff15a102",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU0Mjk3OCwiaWF0IjoxNjUxNzY2OTc4LCJqdGkiOiI5YWRiNzQ1NDBlNTA0MDVjOTdlYmUxNTBmZjE1YTEwMiIsInVzZXJfaWQiOjZ9.gzSEfYfhovj0C5b7aP61LequMnclEMJVJ8_fQq0luPE",
      "created_at": "2022-05-05T16:09:38.281Z",
      "expires_at": "2022-08-03T16:09:38Z"
    }
  },
  {
    "model": "token_blacklist.outstandingtoken",
    "pk": 4,
    "fields": {
      "user": 6,
      "jti": "a713694aa9bc4815b3a0aae460c27ce4",
      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY1OTU0NTQ4MSwiaWF0IjoxNjUxNzY5NDgxLCJqdGkiOiJhNzEzNjk0YWE5YmM0ODE1YjNhMGFhZTQ2MGMyN2NlNCIsInVzZXJfaWQiOjZ9.IN1afLG4jwGZYfVjYOSNKPBxutWe0PdVnaGHq9YyN2Y",
      "created_at": "2022-05-05T16:51:21.396Z",
      "expires_at": "2022-08-03T16:51:21Z"
    }
  }
]
